{
	"id": "836265828c1f38c75001baaf764f76ad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/chains/binance/RewardSystem.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\r\nimport \"../../libraries/TransferHelper.sol\";\r\nimport \"../../libraries/TimeLock.sol\";\r\n\r\ncontract RewardSystem is Ownable, TimeLock {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n    \r\n    /* =====================================================================================================================\r\n                                                        Variables\r\n    ===================================================================================================================== */\r\n    mapping(address => bool) public _rewards;\r\n    mapping(address => mapping(address => uint256)) public _claimTimes; //user => token => claim time\r\n    mapping(address => bool) public _paidFee;\r\n    uint256 public nativeSwapFee = 10; //10% fee\r\n    uint256 public thirdPartyFee = 2; //2% fee\r\n    uint256 public _gasCost = 8500000000 wei;\r\n    \r\n    IERC20 public _rewardToken;\r\n    uint256 public _maxAmountPerReceive = 10000000 ether;\r\n    uint256 public _timeBetweenClaims = 1 days;\r\n    address public _weth = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n\r\n    IUniswapV2Router02 public _router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n    \r\n    /* =====================================================================================================================\r\n                                                        Events\r\n    ===================================================================================================================== */\r\n    event SentRewards(address indexed owner, uint256 indexed amount, address indexed token);\r\n    event SentRewardsETH(address indexed owner, uint256 indexed amount, uint256 indexed fees);\r\n    event EnabledRewards(address indexed owner);\r\n    event ChangedFee(uint256 indexed previousFee, uint256 indexed fee);\r\n    event ChangedThirdPartyFee(uint256 indexed previousFee, uint256 indexed fee);\r\n    event ChangedGasCost(uint256 indexed previousGas, uint256 indexed gas);\r\n    event ChangedRewardToken(address indexed previousToken, address indexed newToken);\r\n    event ChangedMaxAmountPerReceive(uint256 indexed previousAmount, uint256 indexed amount);\r\n    event EmergencyWithdraw(address indexed owner);\r\n    \r\n    constructor(IERC20 rewardToken) {\r\n        _rewardToken = rewardToken;\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n    /* =====================================================================================================================\r\n                                                        Get Functions\r\n    ===================================================================================================================== */\r\n    function getBalance(address token) public view returns (uint256) {\r\n        if(token == address(0)) {\r\n            return address(this).balance;\r\n        }\r\n        return IERC20(token).balanceOf(address(this));\r\n    }\r\n\r\n    function getEthBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function canClaim(address user, address token) public view returns (bool) {\r\n        bool isPreconditionOk = true;\r\n        if(token != address(_rewardToken)) {\r\n            isPreconditionOk = _paidFee[user];\r\n        }\r\n        return isPreconditionOk && _claimTimes[user][token] + _timeBetweenClaims <= block.timestamp;\r\n    }\r\n    \r\n    /* =====================================================================================================================\r\n                                                        Set Functions\r\n    ===================================================================================================================== */\r\n\r\n    function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {\r\n        emit ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount);\r\n        _maxAmountPerReceive = newAmount;\r\n    }\r\n    \r\n    function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {\r\n        require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\");\r\n        emit ChangedRewardToken(address(_rewardToken), address(rewardToken));\r\n        _rewardToken = rewardToken;\r\n    }\r\n    \r\n    function setRouter(IUniswapV2Router02 router) public onlyOwner {\r\n        _router = router;\r\n    }\r\n\r\n    function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r\n        emit ChangedFee(nativeSwapFee, newFee);\r\n        nativeSwapFee = newFee;\r\n    }\r\n\r\n    function changeThirdPartyFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r\n        emit ChangedThirdPartyFee(thirdPartyFee, newFee);\r\n        thirdPartyFee = newFee;\r\n    }\r\n\r\n    function changeGasCost(uint256 newGasCost) public onlyOwner locked(\"changeGasCost\") {\r\n        emit ChangedGasCost(_gasCost, newGasCost);\r\n        _gasCost = newGasCost;\r\n    }\r\n\r\n    function emergencyWithdraw(address token) public onlyOwner {\r\n        TransferHelper.safeTransfer(token, owner(), getBalance(token));\r\n        uint256 ethBalance = address(this).balance;\r\n        if(ethBalance > 0) {\r\n            TransferHelper.safeTransferETH(address(owner()), ethBalance);\r\n        }\r\n        emit EmergencyWithdraw(owner());\r\n    }\r\n    \r\n    /* =====================================================================================================================\r\n                                                    Utility Functions\r\n    ===================================================================================================================== */ \r\n    function sendRewards(uint256 amount, address user, uint256 fee, address token) public onlyOwner {\r\n        require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\");\r\n        require(amount <= getBalance(token), \"ABOAT::sendReward: Can't send more rewards than in reward system!\");\r\n        require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\");\r\n        require(canClaim(user, token), \"ABOAT::sendReward: Can't claim more than once per day\");\r\n        _claimTimes[user][token] = block.timestamp;\r\n        if(address(_rewardToken) != token) {\r\n            uint256 feeAmount = amount.mul(thirdPartyFee).div(100);\r\n            uint256 userAmount = amount.sub(feeAmount);\r\n            if(token == address(0)) {\r\n                TransferHelper.safeTransferETH(owner(), feeAmount);\r\n                TransferHelper.safeTransferETH(user, userAmount);\r\n            } else {\r\n                TransferHelper.safeTransfer(token, owner(), feeAmount);\r\n                TransferHelper.safeTransfer(token, user, userAmount);\r\n            }\r\n        } else {\r\n            require(amount > fee, \"ABOAT::sendReward\");\r\n            amount = amount.sub(fee);\r\n            uint256 userEth = address(this).balance;\r\n            swapTokensForEth(fee);\r\n            TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth));\r\n            TransferHelper.safeTransfer(address(_rewardToken), user, amount);\r\n        }\r\n        emit SentRewards(user, amount, token);\r\n    }\r\n    \r\n    \r\n    function sendRewardAsEth(uint256 amount, address user) public onlyOwner {\r\n        require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\");\r\n        require(amount <= getBalance(address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\");\r\n        require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\");\r\n        require(canClaim(user, address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\");\r\n        _claimTimes[user][address(_rewardToken)] = block.timestamp;\r\n        uint256 ethBefore = address(this).balance;\r\n        swapTokensForEth(amount);\r\n        uint256 userEth = address(this).balance.sub(ethBefore);\r\n        uint256 fee = userEth.div(nativeSwapFee);\r\n        userEth = userEth.sub(fee);\r\n        TransferHelper.safeTransferETH(address(owner()), fee);\r\n        TransferHelper.safeTransferETH(user, userEth);\r\n        emit SentRewardsETH(user, userEth, fee);\r\n    }\r\n    \r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        // generate the Enodi pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(_rewardToken);\r\n        path[1] = _weth;\r\n\r\n        _rewardToken.approve(address(_router), tokenAmount);\r\n\r\n        // make the swap\r\n        _router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function claim() public payable {\r\n        require(!_paidFee[msg.sender], \"ABOAT::claim: Already allowed to recieve tokens\");\r\n        require(msg.value >= _gasCost, \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\");\r\n        TransferHelper.safeTransferETH(owner(), msg.value);\r\n        _paidFee[msg.sender] = true;\r\n        emit EnabledRewards(msg.sender);\r\n    }\r\n}"
			},
			"contracts/libraries/TimeLock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nabstract contract TimeLock is Ownable {\n    using Address for address;   \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    bool public isLockEnabled = false;\n    mapping(string => uint256) public timelock;\n    uint256 private constant _TIMELOCK = 1 days;\n    address private _maintainer;  \n        \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event MaintainerTransferred(address indexed previousMaintainer, address indexed newMaintainer);\n    event UnlockedFunction(string indexed functionName, uint256 indexed unlockedAt);\n    event EnabledLock();\n    \n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    //After unlock we have to wait for _TIMELOCK before we can call the Function\n    //Additionally we have a time window of 24 hours to call the function to prevent pre-unlocked calls\n    modifier locked(string memory _fn) {\n        require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\");\n        _;\n        lockFunction(_fn);\n    }\n        \n    modifier onlyMaintainerOrOwner() {\n        require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\");\n        _;\n    }\n\n    constructor() {\n        _maintainer = msg.sender;\n    }\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function maintainer() public view returns (address) {\n        return _maintainer;\n    }\n        \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {\n        require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\");\n        address previousMaintainer = _maintainer;\n        _maintainer = _newMaintainer;\n        emit MaintainerTransferred(previousMaintainer, _maintainer);\n    }\n    \n    function setTimelockEnabled() public onlyMaintainerOrOwner {\n        isLockEnabled = true;\n        emit EnabledLock();\n    }\n\n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    //unlock timelock\n    function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = block.timestamp + _TIMELOCK;\n        emit UnlockedFunction(_fn, timelock[_fn]);\n     }\n      \n     //lock timelock\n    function lockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = 0;\n    }\n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3249:3261  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3095  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3973:3980  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4010  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2128:2141  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2160:2165  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2153:2165  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4254:4258  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4300  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4302:4308  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4278  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4326:4330  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4940:4944  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4972  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4974:4983  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4985:4991  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4965  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5027  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5041  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5107  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5195:5201  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5236:5242  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5233  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5242  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5194  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5271:5275  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5824  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5804:5811  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5850:5860  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5789  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2341:2354  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2373:2380  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2366:2380  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6469:6473  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6523  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6599  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6705  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6726:6741  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6723  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6741  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6683  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6774  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3744  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3780:3789  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3791:3797  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3765  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10243  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10268  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7623  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7684  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7803  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7803  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7886:7895  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7878:7884  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7897:7903  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7968  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:12"
															},
															"nodeType": "YulIf",
															"src": "88:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:12"
															},
															"nodeType": "YulIf",
															"src": "221:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:12"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:12"
															},
															"nodeType": "YulIf",
															"src": "404:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:12"
															},
															"nodeType": "YulIf",
															"src": "566:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:12",
																"statements": []
															},
															"src": "647:133:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:12"
															},
															"nodeType": "YulIf",
															"src": "789:80:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:12",
														"type": ""
													}
												],
												"src": "14:885:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:12"
															},
															"nodeType": "YulIf",
															"src": "1032:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:12"
															},
															"nodeType": "YulIf",
															"src": "1169:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:12"
															},
															"nodeType": "YulIf",
															"src": "1342:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:12",
														"type": ""
													}
												],
												"src": "904:562:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:12"
															},
															"nodeType": "YulIf",
															"src": "1614:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:12"
															},
															"nodeType": "YulIf",
															"src": "1684:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:12",
														"type": ""
													}
												],
												"src": "1471:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;1896:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;1321:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:10416:1;;;-1:-1:-1;1321:10416:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:12;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:12;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:12;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:12:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:12;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1321:10416:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_626": {
									"entryPoint": 1038,
									"id": 626,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_637": {
									"entryPoint": null,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_453": {
									"entryPoint": 1330,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_262": {
									"entryPoint": 600,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_376": {
									"entryPoint": 872,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_337": {
									"entryPoint": 797,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_158": {
									"entryPoint": 454,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_168": {
									"entryPoint": 857,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_310": {
									"entryPoint": 622,
									"id": 310,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_223": {
									"entryPoint": 1025,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:12"
															},
															"nodeType": "YulIf",
															"src": "272:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:12",
														"type": ""
													}
												],
												"src": "192:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:12"
															},
															"nodeType": "YulIf",
															"src": "480:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:12",
														"type": ""
													}
												],
												"src": "383:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:12"
															},
															"nodeType": "YulIf",
															"src": "762:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:12",
														"type": ""
													}
												],
												"src": "648:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:12"
															},
															"nodeType": "YulIf",
															"src": "1078:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:12",
														"type": ""
													}
												],
												"src": "981:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:12",
														"type": ""
													}
												],
												"src": "1240:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:12",
																"statements": []
															},
															"src": "1712:140:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:12"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:12"
															},
															"nodeType": "YulIf",
															"src": "1861:91:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:12",
														"type": ""
													}
												],
												"src": "1432:597:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:12",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:12",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:12"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:12",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:12",
														"type": ""
													}
												],
												"src": "2034:399:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:12",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:12"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:12",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:12",
														"type": ""
													}
												],
												"src": "2438:398:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:12",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:12"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:12",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:12",
														"type": ""
													}
												],
												"src": "2841:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:12",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:12",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:12"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:12",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:12",
														"type": ""
													}
												],
												"src": "3248:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:12",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:12",
														"type": ""
													}
												],
												"src": "3657:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:12",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:12",
														"type": ""
													}
												],
												"src": "4063:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:12"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:12",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:12"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:12",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:12",
														"type": ""
													}
												],
												"src": "4468:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:12",
														"type": ""
													}
												],
												"src": "4874:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:12",
														"type": ""
													}
												],
												"src": "5056:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:12"
															},
															"nodeType": "YulIf",
															"src": "5303:136:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:12",
														"type": ""
													}
												],
												"src": "5245:225:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:12"
															},
															"nodeType": "YulIf",
															"src": "5618:61:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:12"
															},
															"nodeType": "YulIf",
															"src": "5688:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:12",
														"type": ""
													}
												],
												"src": "5475:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:12;;1398:22;1380:41;;1368:2;1353:18;4171:166:1;1240:187:12;3162:106:1;3249:12;;3162:106;;;5020:25:12;;;5008:2;4993:18;3162:106:1;4874:177:12;4804:478:1;;;;;;:::i;:::-;;:::i;3011:91::-;;;3093:2;5198:36:12;;5186:2;5171:18;3011:91:1;5056:184:12;5677:212:1;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:1;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:5;4293:7:1;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:5;5030:33:1;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;3450:2:12;5073:79:1;;;3432:21:12;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:12;;;3572:38;3627:19;;5073:79:1;;;;;;;;;5186:57;5195:6;665:10:5;5236:6:1;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;5677:212::-;665:10:5;5765:4:1;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:1;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:5;6469:4:1;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:1;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;4670:2:12;6556:85:1;;;4652:21:12;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:12;;;4792:35;4844:19;;6556:85:1;4468:401:12;6556:85:1;6675:67;665:10:5;6698:7:1;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;665:10:5;3780:9:1;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;4265:2:12;10075:68:1;;;4247:21:12;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:12;;;4387:34;4438:19;;10075:68:1;4063:400:12;10075:68:1;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;2640:2:12;10153:68:1;;;2622:21:12;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:12;;;2762:32;2811:19;;10153:68:1;2438:398:12;10153:68:1;-1:-1:-1;;;;;10232:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5020:25:12;;;10283:32:1;;4993:18:12;10283:32:1;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;3859:2:12;7382:70:1;;;3841:21:12;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:12;;;3981:35;4033:19;;7382:70:1;3657:401:12;7382:70:1;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;2236:2:12;7462:71:1;;;2218:21:12;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:12;;;2358:33;2408:19;;7462:71:1;2034:399:12;7462:71:1;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;3043:2:12;7653:74:1;;;3025:21:12;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:12;;;3165:36;3218:19;;7653:74:1;2841:402:12;7653:74:1;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:1;7878:6;-1:-1:-1;;;;;7869:35:1;;7897:6;7869:35;;;;5020:25:12;;5008:2;4993:18;;4874:177;7869:35:1;;;;;;;;7372:596;7255:713;;;:::o;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:12:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:12:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:12;1992:15;-1:-1:-1;;1988:29:12;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:12:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:12;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
									".code": [
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 119,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 127,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 131,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chains/binance/RewardSystem.sol": {
				"RewardSystem": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "ChangedFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousGas",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gas",
									"type": "uint256"
								}
							],
							"name": "ChangedGasCost",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousAmount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ChangedMaxAmountPerReceive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "ChangedRewardToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "ChangedThirdPartyFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "EnabledRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SentRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "SentRewardsETH",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_claimTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_gasCost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxAmountPerReceive",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_paidFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_rewards",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_timeBetweenClaims",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "adjustMaxAmountPerReceive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "canClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "changeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newGasCost",
									"type": "uint256"
								}
							],
							"name": "changeGasCost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "changeThirdPartyFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeSwapFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "sendRewardAsEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "sendRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "thirdPartyFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/chains/binance/RewardSystem.sol\":454:9603  contract RewardSystem is Ownable, TimeLock {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/libraries/TimeLock.sol\":765:770  false */\n  0x00\n    /* \"contracts/libraries/TimeLock.sol\":737:770  bool public isLockEnabled = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1122:1124  10 */\n  0x0a\n    /* \"contracts/chains/binance/RewardSystem.sol\":1091:1124  uint256 public nativeSwapFee = 10 */\n  0x06\n  dup2\n  swap1\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1172:1173  2 */\n  0x02\n    /* \"contracts/chains/binance/RewardSystem.sol\":1141:1173  uint256 public thirdPartyFee = 2 */\n  0x07\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1215:1229  8500000000 wei */\n  0x01faa3b500\n    /* \"contracts/chains/binance/RewardSystem.sol\":1189:1229  uint256 public _gasCost = 8500000000 wei */\n  0x08\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1313:1327  10000000 ether */\n  0x084595161401484a000000\n    /* \"contracts/chains/binance/RewardSystem.sol\":1275:1327  uint256 public _maxAmountPerReceive = 10000000 ether */\n  swap1\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1370:1376  1 days */\n  0x015180\n    /* \"contracts/chains/binance/RewardSystem.sol\":1334:1376  uint256 public _timeBetweenClaims = 1 days */\n  0x0b\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1383:1448  address public _weth = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n  0x0c\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/chains/binance/RewardSystem.sol\":1406:1448  0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n  0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\n    /* \"contracts/chains/binance/RewardSystem.sol\":1383:1448  address public _weth = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":1457:1555  IUniswapV2Router02 public _router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E) */\n  0x0d\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/chains/binance/RewardSystem.sol\":1512:1554  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/chains/binance/RewardSystem.sol\":1457:1555  IUniswapV2Router02 public _router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E) */\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":2599:2676  constructor(IERC20 rewardToken) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"contracts/libraries/TimeLock.sol\":2409:2420  _maintainer */\n  0x02\n    /* \"contracts/libraries/TimeLock.sol\":2409:2433  _maintainer = msg.sender */\n  dup1\n  sload\n    /* \"contracts/libraries/TimeLock.sol\":2423:2433  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/libraries/TimeLock.sol\":2409:2433  _maintainer = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":2642:2654  _rewardToken */\n  0x09\n    /* \"contracts/chains/binance/RewardSystem.sol\":2642:2668  _rewardToken = rewardToken */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/binance/RewardSystem.sol\":454:9603  contract RewardSystem is Ownable, TimeLock {\r... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:318   */\ntag_3:\n    /* \"#utility.yul\":98:104   */\n  0x00\n    /* \"#utility.yul\":151:153   */\n  0x20\n    /* \"#utility.yul\":139:148   */\n  dup3\n    /* \"#utility.yul\":130:137   */\n  dup5\n    /* \"#utility.yul\":126:149   */\n  sub\n    /* \"#utility.yul\":122:154   */\n  slt\n    /* \"#utility.yul\":119:171   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  dup1\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":119:171   */\ntag_19:\n    /* \"#utility.yul\":193:209   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":238:269   */\n  dup2\n  and\n    /* \"#utility.yul\":228:270   */\n  dup2\n  eq\n    /* \"#utility.yul\":218:288   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":284:285   */\n  0x00\n    /* \"#utility.yul\":281:282   */\n  dup1\n    /* \"#utility.yul\":274:286   */\n  revert\n    /* \"#utility.yul\":218:288   */\ntag_20:\n    /* \"#utility.yul\":307:312   */\n  swap4\n    /* \"#utility.yul\":14:318   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/chains/binance/RewardSystem.sol\":454:9603  contract RewardSystem is Ownable, TimeLock {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/chains/binance/RewardSystem.sol\":454:9603  contract RewardSystem is Ownable, TimeLock {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f531156\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xc4e977c8\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf4762fd6\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf98080c0\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xc4e977c8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xde996a6e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe7b6ebba\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xedae876f\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0xa617e653\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xa617e653\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb59c6e0e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc07a1d4d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x9f531156\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa1764595\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa347511a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa607494a\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x65947939\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7d6dfb7e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7ef189f8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9850d32b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x65947939\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6a1db1bf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70ed0ada\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x4b417886\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x4b417886\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5dd53826\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6469b96e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x0126ffb9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13ea5d29\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1f8c1d2b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2fa07562\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/chains/binance/RewardSystem.sol\":1334:1376  uint256 public _timeBetweenClaims = 1 days */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      sload(0x0b)\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":13638:13663   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13626:13628   */\n      0x20\n        /* \"#utility.yul\":13611:13629   */\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":1334:1376  uint256 public _timeBetweenClaims = 1 days */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/chains/binance/RewardSystem.sol\":4916:5098  function changeThirdPartyFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_52\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1044:1084  mapping(address => bool) public _paidFee */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_63:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":4849:4863   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4842:4864   */\n      iszero\n        /* \"#utility.yul\":4824:4865   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4812:4814   */\n      0x20\n        /* \"#utility.yul\":4797:4815   */\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":1044:1084  mapping(address => bool) public _paidFee */\n      tag_49\n        /* \"#utility.yul\":4684:4871   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":941:1007  mapping(address => mapping(address => uint256)) public _claimTimes */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_47\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":9203:9600  function claim() public payable {\r... */\n    tag_8:\n      tag_52\n      tag_74\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1275:1327  uint256 public _maxAmountPerReceive = 10000000 ether */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_47\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":5106:5282  function changeGasCost(uint256 newGasCost) public onlyOwner locked(\"changeGasCost\") {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_52\n      tag_81\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":5977:7547  function sendRewards(uint256 amount, address user, uint256 fee, address token) public onlyOwner {\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_52\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":4746:4908  function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_52\n      tag_90\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":5290:5641  function emergencyWithdraw(address token) public onlyOwner {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_52\n      tag_94\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":3278:3380  function getEthBalance() public view returns (uint256) {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":3351:3372  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":3278:3380  function getEthBalance() public view returns (uint256) {\r... */\n      jump(tag_47)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_52\n      tag_102\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":894:934  mapping(address => bool) public _rewards */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_62\n      tag_105\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_105:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":1189:1229  uint256 public _gasCost = 8500000000 wei */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_47\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_113:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4361:4393   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4343:4394   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4331:4333   */\n      0x20\n        /* \"#utility.yul\":4316:4334   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      tag_49\n        /* \"#utility.yul\":4197:4400   */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2770:2857  function maintainer() public view returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2839:2850  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2770:2857  function maintainer() public view returns (address) {... */\n      jump(tag_113)\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_52\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1383:1448  address public _weth = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      sload(0x0c)\n      tag_113\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":737:770  bool public isLockEnabled = false */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      sload(0x00)\n      tag_62\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_52\n      tag_136\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":3388:3716  function canClaim(address user, address token) public view returns (bool) {\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_62\n      tag_140\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1242:1268  IERC20 public _rewardToken */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      sload(0x09)\n      tag_113\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":1091:1124  uint256 public nativeSwapFee = 10 */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_47\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":4640:4738  function setRouter(IUniswapV2Router02 router) public onlyOwner {\r... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_52\n      tag_154\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_154:\n      tag_156\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1141:1173  uint256 public thirdPartyFee = 2 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_47\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":4053:4286  function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {\r... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_52\n      tag_163\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":7565:8624  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {\r... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_52\n      tag_167\n      calldatasize\n      0x04\n      tag_168\n      jump\t// in\n    tag_167:\n      tag_169\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":1457:1555  IUniswapV2Router02 public _router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E) */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      sload(0x0d)\n      tag_113\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_52\n      tag_177\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_52\n      tag_181\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":3052:3270  function getBalance(address token) public view returns (uint256) {\r... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_47\n      tag_184\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":4298:4628  function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {\r... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_52\n      tag_189\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_189:\n      tag_191\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":776:818  mapping(string => uint256) public timelock */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_47\n      tag_194\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_194:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x01\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      dup2\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n    tag_55:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_199:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0a\n      dup2\n      mstore\n      shl(0xb1, 0x36b0b4b73a30b4b732b9)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_205:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_208:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_207:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_210:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_209:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_213:\n        /* \"contracts/libraries/TimeLock.sol\":3324:3335  _maintainer */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3306:3335  _newMaintainer != _maintainer */\n      dup4\n      dup2\n      and\n        /* \"contracts/libraries/TimeLock.sol\":3324:3335  _maintainer */\n      swap2\n      and\n        /* \"contracts/libraries/TimeLock.sol\":3306:3335  _newMaintainer != _maintainer */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3306:3367  _newMaintainer != _maintainer && _newMaintainer != address(0) */\n      tag_217\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3339:3367  _newMaintainer != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":3306:3367  _newMaintainer != _maintainer && _newMaintainer != address(0) */\n    tag_217:\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8451:8453   */\n      0x20\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8433:8454   */\n      mstore\n        /* \"#utility.yul\":8490:8492   */\n      0x50\n        /* \"#utility.yul\":8470:8488   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8463:8493   */\n      mstore\n        /* \"#utility.yul\":8529:8563   */\n      0x41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e6572\n        /* \"#utility.yul\":8509:8527   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8502:8564   */\n      mstore\n        /* \"#utility.yul\":8600:8634   */\n      0x2063616e277420657175616c2070726576696f7573206d61696e7461696e6572\n        /* \"#utility.yul\":8580:8598   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8573:8635   */\n      mstore\n      shl(0x80, 0x206f72207a65726f2061646472657373)\n        /* \"#utility.yul\":8651:8670   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8644:8691   */\n      mstore\n        /* \"#utility.yul\":8708:8727   */\n      0xa4\n      add\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      tag_201\n        /* \"#utility.yul\":8249:8733   */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n    tag_218:\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3513:3541  _maintainer = _newMaintainer */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      mload(0x40)\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      swap2\n      and\n      swap2\n        /* \"contracts/libraries/TimeLock.sol\":3513:3541  _maintainer = _newMaintainer */\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      dup3\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      0x2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf01\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3463:3489  address previousMaintainer */\n      0x00\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      log3\n        /* \"contracts/libraries/TimeLock.sol\":3288:3617  {... */\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/libraries/TimeLock.sol\":2371:2372  _ */\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":4916:5098  function changeThirdPartyFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_226:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      shl(0xb8, 0x6368616e6765466565)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_234\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_231:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_233:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_232:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_235:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_236\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_236:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_234:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_237:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5035:5048  thirdPartyFee */\n      sload(0x07)\n        /* \"contracts/chains/binance/RewardSystem.sol\":5014:5057  ChangedThirdPartyFee(thirdPartyFee, newFee) */\n      mload(0x40)\n        /* \"contracts/chains/binance/RewardSystem.sol\":5050:5056  newFee */\n      dup4\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":5035:5048  thirdPartyFee */\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":5014:5057  ChangedThirdPartyFee(thirdPartyFee, newFee) */\n      0x247a43c209c4066973ea0643d726236d3bf70967e8dc6d109b75630f351c8904\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/binance/RewardSystem.sol\":5068:5081  thirdPartyFee */\n      0x07\n        /* \"contracts/chains/binance/RewardSystem.sol\":5068:5090  thirdPartyFee = newFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":9203:9600  function claim() public payable {\r... */\n    tag_74:\n        /* \"contracts/chains/binance/RewardSystem.sol\":9264:9274  msg.sender */\n      caller\n        /* \"contracts/chains/binance/RewardSystem.sol\":9255:9275  _paidFee[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":9255:9263  _paidFee */\n      0x05\n        /* \"contracts/chains/binance/RewardSystem.sol\":9255:9275  _paidFee[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":9254:9275  !_paidFee[msg.sender] */\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":9246:9327  require(!_paidFee[msg.sender], \"ABOAT::claim: Already allowed to recieve tokens\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":9246:9327  require(!_paidFee[msg.sender], \"ABOAT::claim: Already allowed to recieve tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6768:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6827   */\n      0x2f\n        /* \"#utility.yul\":6805:6823   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6798:6828   */\n      mstore\n        /* \"#utility.yul\":6864:6898   */\n      0x41424f41543a3a636c61696d3a20416c726561647920616c6c6f77656420746f\n        /* \"#utility.yul\":6844:6862   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6837:6899   */\n      mstore\n      shl(0x88, 0x207265636965766520746f6b656e73)\n        /* \"#utility.yul\":6915:6933   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6908:6953   */\n      mstore\n        /* \"#utility.yul\":6970:6989   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":9246:9327  require(!_paidFee[msg.sender], \"ABOAT::claim: Already allowed to recieve tokens\") */\n      tag_201\n        /* \"#utility.yul\":6584:6995   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":9246:9327  require(!_paidFee[msg.sender], \"ABOAT::claim: Already allowed to recieve tokens\") */\n    tag_242:\n        /* \"contracts/chains/binance/RewardSystem.sol\":9359:9367  _gasCost */\n      sload(0x08)\n        /* \"contracts/chains/binance/RewardSystem.sol\":9346:9355  msg.value */\n      callvalue\n        /* \"contracts/chains/binance/RewardSystem.sol\":9346:9367  msg.value >= _gasCost */\n      lt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":9338:9451  require(msg.value >= _gasCost, \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12370:12372   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":9338:9451  require(msg.value >= _gasCost, \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12352:12373   */\n      mstore\n        /* \"#utility.yul\":12409:12411   */\n      0x4f\n        /* \"#utility.yul\":12389:12407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12382:12412   */\n      mstore\n        /* \"#utility.yul\":12448:12482   */\n      0x41424f41543a3a636c61696d3a20416d6f756e74206f6620626e6220746f2063\n        /* \"#utility.yul\":12428:12446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12421:12483   */\n      mstore\n        /* \"#utility.yul\":12519:12553   */\n      0x6c61696d2073686f756c642063617272792074686520636f737420746f206164\n        /* \"#utility.yul\":12499:12517   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12492:12554   */\n      mstore\n      shl(0x88, 0x642074686520636c61696d61626c65)\n        /* \"#utility.yul\":12570:12589   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":12563:12609   */\n      mstore\n        /* \"#utility.yul\":12626:12645   */\n      0xa4\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":9338:9451  require(msg.value >= _gasCost, \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\") */\n      tag_201\n        /* \"#utility.yul\":12168:12651   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":9338:9451  require(msg.value >= _gasCost, \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\") */\n    tag_245:\n        /* \"contracts/chains/binance/RewardSystem.sol\":9462:9512  TransferHelper.safeTransferETH(owner(), msg.value) */\n      tag_248\n        /* \"contracts/chains/binance/RewardSystem.sol\":9493:9500  owner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":9493:9500  owner() */\n    tag_249:\n        /* \"contracts/chains/binance/RewardSystem.sol\":9502:9511  msg.value */\n      callvalue\n        /* \"contracts/chains/binance/RewardSystem.sol\":9462:9492  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":9462:9512  TransferHelper.safeTransferETH(owner(), msg.value) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/chains/binance/RewardSystem.sol\":9532:9542  msg.sender */\n      caller\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9543  _paidFee[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9531  _paidFee */\n      0x05\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9543  _paidFee[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9550  _paidFee[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":9546:9550  true */\n      0x01\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9550  _paidFee[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":9566:9592  EnabledRewards(msg.sender) */\n      mload\n      0x98716c616972f4ef0085deb59c20f6f6a840219c121ad1f3b5413097f3a10357\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":9523:9543  _paidFee[msg.sender] */\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":9566:9592  EnabledRewards(msg.sender) */\n      log2\n        /* \"contracts/chains/binance/RewardSystem.sol\":9203:9600  function claim() public payable {\r... */\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":5106:5282  function changeGasCost(uint256 newGasCost) public onlyOwner locked(\"changeGasCost\") {\r... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_254:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0d\n      dup2\n      mstore\n      shl(0x9a, 0x18da185b99d951d85cd0dbdcdd)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_261\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_258:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_260:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_259:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_262:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_263\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_263:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_261:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_264:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5221:5229  _gasCost */\n      sload(0x08)\n        /* \"contracts/chains/binance/RewardSystem.sol\":5206:5242  ChangedGasCost(_gasCost, newGasCost) */\n      mload(0x40)\n        /* \"contracts/chains/binance/RewardSystem.sol\":5231:5241  newGasCost */\n      dup4\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":5221:5229  _gasCost */\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":5206:5242  ChangedGasCost(_gasCost, newGasCost) */\n      0xc3dc19678fd7390a5c1197decfaec52d8a1c63c49f0a51db570f5fe5040c5f73\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/binance/RewardSystem.sol\":5253:5261  _gasCost */\n      0x08\n        /* \"contracts/chains/binance/RewardSystem.sol\":5253:5274  _gasCost = newGasCost */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":5977:7547  function sendRewards(uint256 amount, address user, uint256 fee, address token) public onlyOwner {\r... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_271:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6100:6107  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/chains/binance/RewardSystem.sol\":6084:6195  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10981:10983   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":6084:6195  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10963:10984   */\n      mstore\n        /* \"#utility.yul\":11020:11022   */\n      0x44\n        /* \"#utility.yul\":11000:11018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10993:11023   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11059:11093   */\n      0x41424f41543a3a73656e645265776172643a205468657265206973206e6f2072\n        /* \"#utility.yul\":11039:11057   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11032:11094   */\n      mstore\n        /* \"#utility.yul\":11130:11164   */\n      0x6f7574657220646566696e656420746f207377617020746f6b656e7320666f72\n        /* \"#utility.yul\":11110:11128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11103:11165   */\n      mstore\n      shl(0xe3, 0x040cae8d)\n        /* \"#utility.yul\":11181:11200   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":11174:11209   */\n      mstore\n        /* \"#utility.yul\":11226:11245   */\n      0xa4\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":6084:6195  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      tag_201\n        /* \"#utility.yul\":10779:11251   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6084:6195  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n    tag_274:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6224:6241  getBalance(token) */\n      tag_277\n        /* \"contracts/chains/binance/RewardSystem.sol\":6235:6240  token */\n      dup2\n        /* \"contracts/chains/binance/RewardSystem.sol\":6224:6234  getBalance */\n      tag_185\n        /* \"contracts/chains/binance/RewardSystem.sol\":6224:6241  getBalance(token) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6214:6220  amount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":6214:6241  amount <= getBalance(token) */\n      gt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":6206:6311  require(amount <= getBalance(token), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7202:7204   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":6206:6311  require(amount <= getBalance(token), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7184:7205   */\n      mstore\n        /* \"#utility.yul\":7241:7243   */\n      0x41\n        /* \"#utility.yul\":7221:7239   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7214:7244   */\n      mstore\n        /* \"#utility.yul\":7280:7314   */\n      0x41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f\n        /* \"#utility.yul\":7260:7278   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7253:7315   */\n      mstore\n        /* \"#utility.yul\":7351:7385   */\n      0x72652072657761726473207468616e20696e207265776172642073797374656d\n        /* \"#utility.yul\":7331:7349   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7324:7386   */\n      mstore\n      shl(0xf8, 0x21)\n        /* \"#utility.yul\":7402:7421   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7395:7427   */\n      mstore\n        /* \"#utility.yul\":7444:7463   */\n      0xa4\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":6206:6311  require(amount <= getBalance(token), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      tag_201\n        /* \"#utility.yul\":7000:7469   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6206:6311  require(amount <= getBalance(token), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n    tag_278:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6340:6360  _maxAmountPerReceive */\n      sload(0x0a)\n        /* \"contracts/chains/binance/RewardSystem.sol\":6330:6336  amount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":6330:6360  amount <= _maxAmountPerReceive */\n      gt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":6322:6419  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5942:5944   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":6322:6419  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5924:5945   */\n      mstore\n        /* \"#utility.yul\":5981:5983   */\n      0x36\n        /* \"#utility.yul\":5961:5979   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5954:5984   */\n      mstore\n        /* \"#utility.yul\":6020:6054   */\n      0x41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f\n        /* \"#utility.yul\":6000:6018   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5993:6055   */\n      mstore\n      shl(0x50, 0x72652072657761726473207468616e206c696d697421)\n        /* \"#utility.yul\":6071:6089   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6064:6116   */\n      mstore\n        /* \"#utility.yul\":6133:6152   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":6322:6419  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      tag_201\n        /* \"#utility.yul\":5740:6158   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6322:6419  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n    tag_281:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6438:6459  canClaim(user, token) */\n      tag_284\n        /* \"contracts/chains/binance/RewardSystem.sol\":6447:6451  user */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":6453:6458  token */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":6438:6446  canClaim */\n      tag_141\n        /* \"contracts/chains/binance/RewardSystem.sol\":6438:6459  canClaim(user, token) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6430:6517  require(canClaim(user, token), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13272:13274   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":6430:6517  require(canClaim(user, token), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13254:13275   */\n      mstore\n        /* \"#utility.yul\":13311:13313   */\n      0x35\n        /* \"#utility.yul\":13291:13309   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13284:13314   */\n      mstore\n        /* \"#utility.yul\":13350:13384   */\n      0x41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d\n        /* \"#utility.yul\":13330:13348   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13323:13385   */\n      mstore\n      shl(0x58, 0x6f7265207468616e206f6e63652070657220646179)\n        /* \"#utility.yul\":13401:13419   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13394:13445   */\n      mstore\n        /* \"#utility.yul\":13462:13481   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":6430:6517  require(canClaim(user, token), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      tag_201\n        /* \"#utility.yul\":13070:13487   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6430:6517  require(canClaim(user, token), \"ABOAT::sendReward: Can't claim more than once per day\") */\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":6528:6545  _claimTimes[user] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":6528:6539  _claimTimes */\n      0x04\n        /* \"contracts/chains/binance/RewardSystem.sol\":6528:6545  _claimTimes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":6528:6552  _claimTimes[user][token] */\n      dup6\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":6555:6570  block.timestamp */\n      timestamp\n        /* \"contracts/chains/binance/RewardSystem.sol\":6528:6570  _claimTimes[user][token] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":6592:6604  _rewardToken */\n      sload(0x09)\n      swap1\n      swap2\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":6584:6614  address(_rewardToken) != token */\n      eq\n        /* \"contracts/chains/binance/RewardSystem.sol\":6581:7492  if(address(_rewardToken) != token) {\r... */\n      tag_288\n      jumpi\n        /* \"contracts/chains/binance/RewardSystem.sol\":6631:6648  uint256 feeAmount */\n      0x00\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6685  amount.mul(thirdPartyFee).div(100) */\n      tag_289\n        /* \"contracts/chains/binance/RewardSystem.sol\":6681:6684  100 */\n      0x64\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6676  amount.mul(thirdPartyFee) */\n      tag_290\n        /* \"contracts/chains/binance/RewardSystem.sol\":6662:6675  thirdPartyFee */\n      sload(0x07)\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6657  amount */\n      dup9\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6661  amount.mul */\n      tag_291\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6676  amount.mul(thirdPartyFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6680  amount.mul(thirdPartyFee).div */\n      swap1\n      tag_292\n        /* \"contracts/chains/binance/RewardSystem.sol\":6651:6685  amount.mul(thirdPartyFee).div(100) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6631:6685  uint256 feeAmount = amount.mul(thirdPartyFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":6700:6718  uint256 userAmount */\n      0x00\n        /* \"contracts/chains/binance/RewardSystem.sol\":6721:6742  amount.sub(feeAmount) */\n      tag_293\n        /* \"contracts/chains/binance/RewardSystem.sol\":6721:6727  amount */\n      dup7\n        /* \"contracts/chains/binance/RewardSystem.sol\":6631:6685  uint256 feeAmount = amount.mul(thirdPartyFee).div(100) */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":6721:6731  amount.sub */\n      tag_294\n        /* \"contracts/chains/binance/RewardSystem.sol\":6721:6742  amount.sub(feeAmount) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6700:6742  uint256 userAmount = amount.sub(feeAmount) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":6760:6779  token == address(0) */\n      dup4\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":6757:7099  if(token == address(0)) {\r... */\n      tag_295\n      jumpi\n        /* \"contracts/chains/binance/RewardSystem.sol\":6800:6850  TransferHelper.safeTransferETH(owner(), feeAmount) */\n      tag_296\n        /* \"contracts/chains/binance/RewardSystem.sol\":6831:6838  owner() */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6831:6838  owner() */\n    tag_297:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6840:6849  feeAmount */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":6800:6830  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":6800:6850  TransferHelper.safeTransferETH(owner(), feeAmount) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6869:6917  TransferHelper.safeTransferETH(user, userAmount) */\n      tag_298\n        /* \"contracts/chains/binance/RewardSystem.sol\":6900:6904  user */\n      dup6\n        /* \"contracts/chains/binance/RewardSystem.sol\":6906:6916  userAmount */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":6869:6899  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":6869:6917  TransferHelper.safeTransferETH(user, userAmount) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6757:7099  if(token == address(0)) {\r... */\n      jump(tag_303)\n    tag_295:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6958:7012  TransferHelper.safeTransfer(token, owner(), feeAmount) */\n      tag_300\n        /* \"contracts/chains/binance/RewardSystem.sol\":6986:6991  token */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":6993:7000  owner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":6993:7000  owner() */\n    tag_301:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7002:7011  feeAmount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":6958:6985  TransferHelper.safeTransfer */\n      tag_302\n        /* \"contracts/chains/binance/RewardSystem.sol\":6958:7012  TransferHelper.safeTransfer(token, owner(), feeAmount) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7031:7083  TransferHelper.safeTransfer(token, user, userAmount) */\n      tag_303\n        /* \"contracts/chains/binance/RewardSystem.sol\":7059:7064  token */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":7066:7070  user */\n      dup7\n        /* \"contracts/chains/binance/RewardSystem.sol\":7072:7082  userAmount */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":7031:7058  TransferHelper.safeTransfer */\n      tag_302\n        /* \"contracts/chains/binance/RewardSystem.sol\":7031:7083  TransferHelper.safeTransfer(token, user, userAmount) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/chains/binance/RewardSystem.sol\":6616:7110  {\r... */\n      pop\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":6581:7492  if(address(_rewardToken) != token) {\r... */\n      jump(tag_304)\n    tag_288:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7148:7151  fee */\n      dup2\n        /* \"contracts/chains/binance/RewardSystem.sol\":7139:7145  amount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":7139:7151  amount > fee */\n      gt\n        /* \"contracts/chains/binance/RewardSystem.sol\":7131:7173  require(amount > fee, \"ABOAT::sendReward\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7676:7678   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":7131:7173  require(amount > fee, \"ABOAT::sendReward\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7658:7679   */\n      mstore\n        /* \"#utility.yul\":7715:7717   */\n      0x11\n        /* \"#utility.yul\":7695:7713   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7688:7718   */\n      mstore\n      shl(0x7a, 0x105093d0550e8e9cd95b9914995dd85c99)\n        /* \"#utility.yul\":7734:7752   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7727:7774   */\n      mstore\n        /* \"#utility.yul\":7791:7809   */\n      0x64\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":7131:7173  require(amount > fee, \"ABOAT::sendReward\") */\n      tag_201\n        /* \"#utility.yul\":7474:7815   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":7131:7173  require(amount > fee, \"ABOAT::sendReward\") */\n    tag_305:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7197:7212  amount.sub(fee) */\n      tag_308\n        /* \"contracts/chains/binance/RewardSystem.sol\":7197:7203  amount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":7208:7211  fee */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":7197:7207  amount.sub */\n      tag_294\n        /* \"contracts/chains/binance/RewardSystem.sol\":7197:7212  amount.sub(fee) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7188:7212  amount = amount.sub(fee) */\n      swap4\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":7245:7266  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":7281:7302  swapTokensForEth(fee) */\n      tag_309\n        /* \"contracts/chains/binance/RewardSystem.sol\":7298:7301  fee */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":7281:7297  swapTokensForEth */\n      tag_310\n        /* \"contracts/chains/binance/RewardSystem.sol\":7281:7302  swapTokensForEth(fee) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7317:7401  TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth)) */\n      tag_311\n        /* \"contracts/chains/binance/RewardSystem.sol\":7356:7363  owner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":7356:7363  owner() */\n    tag_312:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7366:7400  address(this).balance.sub(userEth) */\n      tag_313\n        /* \"contracts/chains/binance/RewardSystem.sol\":7366:7387  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":7392:7399  userEth */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":7366:7391  address(this).balance.sub */\n      tag_294\n        /* \"contracts/chains/binance/RewardSystem.sol\":7366:7400  address(this).balance.sub(userEth) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7317:7347  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":7317:7401  TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth)) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7452:7464  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7416:7480  TransferHelper.safeTransfer(address(_rewardToken), user, amount) */\n      tag_314\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7452:7464  _rewardToken */\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":7467:7471  user */\n      dup6\n        /* \"contracts/chains/binance/RewardSystem.sol\":7473:7479  amount */\n      dup8\n        /* \"contracts/chains/binance/RewardSystem.sol\":7416:7443  TransferHelper.safeTransfer */\n      tag_302\n        /* \"contracts/chains/binance/RewardSystem.sol\":7416:7480  TransferHelper.safeTransfer(address(_rewardToken), user, amount) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7116:7492  {\r... */\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":6581:7492  if(address(_rewardToken) != token) {\r... */\n    tag_304:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7533:7538  token */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7507:7539  SentRewards(user, amount, token) */\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":7525:7531  amount */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":7519:7523  user */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7507:7539  SentRewards(user, amount, token) */\n      and\n      0xd8b141f2ea758469013a6478e6e9477d3a7a8527f7ec1f2e045ae15794fc3905\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/chains/binance/RewardSystem.sol\":5977:7547  function sendRewards(uint256 amount, address user, uint256 fee, address token) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":4746:4908  function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\r... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_318:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      shl(0xb8, 0x6368616e6765466565)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_325\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_322\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_322:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_324:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_323:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_325\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_326\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_326:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_327\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_327:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_325:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_328:\n        /* \"contracts/chains/binance/RewardSystem.sol\":4845:4858  nativeSwapFee */\n      sload(0x06)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4834:4867  ChangedFee(nativeSwapFee, newFee) */\n      mload(0x40)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4860:4866  newFee */\n      dup4\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":4845:4858  nativeSwapFee */\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":4834:4867  ChangedFee(nativeSwapFee, newFee) */\n      0xce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb149\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/binance/RewardSystem.sol\":4878:4891  nativeSwapFee */\n      0x06\n        /* \"contracts/chains/binance/RewardSystem.sol\":4878:4900  nativeSwapFee = newFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":5290:5641  function emergencyWithdraw(address token) public onlyOwner {\r... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_335:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5360:5422  TransferHelper.safeTransfer(token, owner(), getBalance(token)) */\n      tag_338\n        /* \"contracts/chains/binance/RewardSystem.sol\":5388:5393  token */\n      dup2\n        /* \"contracts/chains/binance/RewardSystem.sol\":5395:5402  owner() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":5395:5402  owner() */\n    tag_339:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5404:5421  getBalance(token) */\n      tag_340\n        /* \"contracts/chains/binance/RewardSystem.sol\":5415:5420  token */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":5404:5414  getBalance */\n      tag_185\n        /* \"contracts/chains/binance/RewardSystem.sol\":5404:5421  getBalance(token) */\n      jump\t// in\n    tag_340:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5360:5387  TransferHelper.safeTransfer */\n      tag_302\n        /* \"contracts/chains/binance/RewardSystem.sol\":5360:5422  TransferHelper.safeTransfer(token, owner(), getBalance(token)) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5454:5475  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":5489:5503  ethBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":5486:5592  if(ethBalance > 0) {\r... */\n      tag_342\n      jumpi\n        /* \"contracts/chains/binance/RewardSystem.sol\":5520:5580  TransferHelper.safeTransferETH(address(owner()), ethBalance) */\n      tag_342\n        /* \"contracts/chains/binance/RewardSystem.sol\":5559:5566  owner() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":5559:5566  owner() */\n    tag_343:\n        /* \"contracts/chains/binance/RewardSystem.sol\":5569:5579  ethBalance */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":5520:5550  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":5520:5580  TransferHelper.safeTransferETH(address(owner()), ethBalance) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      dup1\n      sload\n        /* \"contracts/chains/binance/RewardSystem.sol\":5607:5633  EmergencyWithdraw(owner()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":5607:5633  EmergencyWithdraw(owner()) */\n      0x5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a2\n      swap2\n      log2\n        /* \"contracts/chains/binance/RewardSystem.sol\":5349:5641  {\r... */\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":5290:5641  function emergencyWithdraw(address token) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_352\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_353\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_125:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_357\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_358\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_358:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_359:\n        /* \"contracts/libraries/TimeLock.sol\":4413:4414  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":4397:4405  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4406:4409  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":4397:4410  timelock[_fn] */\n      mload(0x40)\n      tag_362\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_362:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/libraries/TimeLock.sol\":4397:4414  timelock[_fn] = 0 */\n      sstore\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_137:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_365\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_365:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_366:\n        /* \"contracts/libraries/TimeLock.sol\":4198:4225  block.timestamp + _TIMELOCK */\n      tag_369\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":4198:4213  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":4198:4225  block.timestamp + _TIMELOCK */\n      tag_212\n      jump\t// in\n    tag_369:\n        /* \"contracts/libraries/TimeLock.sol\":4182:4190  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4191:4194  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":4182:4195  timelock[_fn] */\n      mload(0x40)\n      tag_370\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_370:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/libraries/TimeLock.sol\":4182:4225  timelock[_fn] = block.timestamp + _TIMELOCK */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":4262:4270  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4271:4274  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":4262:4275  timelock[_fn] */\n      mload(0x40)\n      tag_371\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_371:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":4257:4260  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":4240:4276  UnlockedFunction(_fn, timelock[_fn]) */\n      mload(0x40)\n      tag_372\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      0xf77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c8\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":3388:3716  function canClaim(address user, address token) public view returns (bool) {\r... */\n    tag_141:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3532:3544  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3456:3460  bool */\n      0x00\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":3497:3501  true */\n      0x01\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3515:3545  token != address(_rewardToken) */\n      dup5\n      dup2\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":3532:3544  _rewardToken */\n      swap2\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":3515:3545  token != address(_rewardToken) */\n      eq\n        /* \"contracts/chains/binance/RewardSystem.sol\":3512:3607  if(token != address(_rewardToken)) {\r... */\n      tag_374\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3581:3595  _paidFee[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":3581:3589  _paidFee */\n      0x05\n        /* \"contracts/chains/binance/RewardSystem.sol\":3581:3595  _paidFee[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":3512:3607  if(token != address(_rewardToken)) {\r... */\n    tag_374:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3624:3640  isPreconditionOk */\n      dup1\n        /* \"contracts/chains/binance/RewardSystem.sol\":3624:3708  isPreconditionOk && _claimTimes[user][token] + _timeBetweenClaims <= block.timestamp */\n      dup1\n      iszero\n      tag_375\n      jumpi\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":3671:3689  _timeBetweenClaims */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3661  _claimTimes[user] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3655  _claimTimes */\n      0x04\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3661  _claimTimes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3668  _claimTimes[user][token] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/chains/binance/RewardSystem.sol\":3693:3708  block.timestamp */\n      timestamp\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3689  _claimTimes[user][token] + _timeBetweenClaims */\n      tag_376\n      swap2\n      tag_212\n      jump\t// in\n    tag_376:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3644:3708  _claimTimes[user][token] + _timeBetweenClaims <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":3624:3708  isPreconditionOk && _claimTimes[user][token] + _timeBetweenClaims <= block.timestamp */\n    tag_375:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3617:3708  return isPreconditionOk && _claimTimes[user][token] + _timeBetweenClaims <= block.timestamp */\n      swap5\n        /* \"contracts/chains/binance/RewardSystem.sol\":3388:3716  function canClaim(address user, address token) public view returns (bool) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":4640:4738  function setRouter(IUniswapV2Router02 router) public onlyOwner {\r... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_380:\n        /* \"contracts/chains/binance/RewardSystem.sol\":4714:4721  _router */\n      0x0d\n        /* \"contracts/chains/binance/RewardSystem.sol\":4714:4730  _router = router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":4640:4738  function setRouter(IUniswapV2Router02 router) public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":4053:4286  function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {\r... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_386:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x19\n      dup2\n      mstore\n      0x61646a7573744d6178416d6f756e745065725265636569766500000000000000\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_393\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_390\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_390:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_391\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_392\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_392:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_391:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_393\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_394\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_394:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_395\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_395:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_393:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_396:\n        /* \"contracts/chains/binance/RewardSystem.sol\":4203:4223  _maxAmountPerReceive */\n      sload(0x0a)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4176:4235  ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount) */\n      mload(0x40)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4225:4234  newAmount */\n      dup4\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":4203:4223  _maxAmountPerReceive */\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":4176:4235  ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount) */\n      0xd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/binance/RewardSystem.sol\":4246:4266  _maxAmountPerReceive */\n      0x0a\n        /* \"contracts/chains/binance/RewardSystem.sol\":4246:4278  _maxAmountPerReceive = newAmount */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/binance/RewardSystem.sol\":7565:8624  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {\r... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_403:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7664:7671  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/chains/binance/RewardSystem.sol\":7648:7765  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9301:9303   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":7648:7765  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9283:9304   */\n      mstore\n        /* \"#utility.yul\":9340:9342   */\n      0x4a\n        /* \"#utility.yul\":9320:9338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9313:9343   */\n      mstore\n        /* \"#utility.yul\":9379:9413   */\n      0x41424f41543a3a73656e645265776172647341734574683a2054686572652069\n        /* \"#utility.yul\":9359:9377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9352:9414   */\n      mstore\n        /* \"#utility.yul\":9450:9484   */\n      0x73206e6f20726f7574657220646566696e656420746f207377617020746f6b65\n        /* \"#utility.yul\":9430:9448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9423:9485   */\n      mstore\n      shl(0xb3, 0x0dce640ccdee440cae8d)\n        /* \"#utility.yul\":9501:9520   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":9494:9535   */\n      mstore\n        /* \"#utility.yul\":9552:9571   */\n      0xa4\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":7648:7765  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      tag_201\n        /* \"#utility.yul\":9099:9577   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":7648:7765  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n    tag_406:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7813:7825  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7794:7827  getBalance(address(_rewardToken)) */\n      tag_409\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7813:7825  _rewardToken */\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":7794:7804  getBalance */\n      tag_185\n        /* \"contracts/chains/binance/RewardSystem.sol\":7794:7827  getBalance(address(_rewardToken)) */\n      jump\t// in\n    tag_409:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7784:7790  amount */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":7784:7827  amount <= getBalance(address(_rewardToken)) */\n      gt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":7776:7903  require(amount <= getBalance(address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11458:11460   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":7776:7903  require(amount <= getBalance(address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11440:11461   */\n      mstore\n        /* \"#utility.yul\":11497:11499   */\n      0x47\n        /* \"#utility.yul\":11477:11495   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11470:11500   */\n      mstore\n        /* \"#utility.yul\":11536:11570   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742073\n        /* \"#utility.yul\":11516:11534   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11509:11571   */\n      mstore\n        /* \"#utility.yul\":11607:11641   */\n      0x656e64206d6f72652072657761726473207468616e20696e2072657761726420\n        /* \"#utility.yul\":11587:11605   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11580:11642   */\n      mstore\n      shl(0xc8, 0x73797374656d21)\n        /* \"#utility.yul\":11658:11677   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":11651:11689   */\n      mstore\n        /* \"#utility.yul\":11706:11725   */\n      0xa4\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":7776:7903  require(amount <= getBalance(address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      tag_201\n        /* \"#utility.yul\":11256:11731   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":7776:7903  require(amount <= getBalance(address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n    tag_410:\n        /* \"contracts/chains/binance/RewardSystem.sol\":7932:7952  _maxAmountPerReceive */\n      sload(0x0a)\n        /* \"contracts/chains/binance/RewardSystem.sol\":7922:7928  amount */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":7922:7952  amount <= _maxAmountPerReceive */\n      gt\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":7914:8017  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8022:8024   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":7914:8017  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8004:8025   */\n      mstore\n        /* \"#utility.yul\":8061:8063   */\n      0x3c\n        /* \"#utility.yul\":8041:8059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8034:8064   */\n      mstore\n        /* \"#utility.yul\":8100:8134   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742073\n        /* \"#utility.yul\":8080:8098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8073:8135   */\n      mstore\n        /* \"#utility.yul\":8171:8201   */\n      0x656e64206d6f72652072657761726473207468616e206c696d69742100000000\n        /* \"#utility.yul\":8151:8169   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8144:8202   */\n      mstore\n        /* \"#utility.yul\":8219:8238   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":7914:8017  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      tag_201\n        /* \"#utility.yul\":7820:8244   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":7914:8017  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n    tag_413:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8059:8071  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8036:8073  canClaim(user, address(_rewardToken)) */\n      tag_416\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8045:8049  user */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8059:8071  _rewardToken */\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":8036:8044  canClaim */\n      tag_141\n        /* \"contracts/chains/binance/RewardSystem.sol\":8036:8073  canClaim(user, address(_rewardToken)) */\n      jump\t// in\n    tag_416:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8028:8137  require(canClaim(user, address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9784:9786   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":8028:8137  require(canClaim(user, address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9766:9787   */\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x3b\n        /* \"#utility.yul\":9803:9821   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9796:9826   */\n      mstore\n        /* \"#utility.yul\":9862:9896   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742063\n        /* \"#utility.yul\":9842:9860   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9835:9897   */\n      mstore\n        /* \"#utility.yul\":9933:9962   */\n      0x6c61696d206d6f7265207468616e206f6e636520706572206461790000000000\n        /* \"#utility.yul\":9913:9931   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9906:9963   */\n      mstore\n        /* \"#utility.yul\":9980:9999   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":8028:8137  require(canClaim(user, address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      tag_201\n        /* \"#utility.yul\":9582:10005   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":8028:8137  require(canClaim(user, address(_rewardToken)), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n    tag_417:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8148:8165  _claimTimes[user] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8148:8159  _claimTimes */\n      0x04\n        /* \"contracts/chains/binance/RewardSystem.sol\":8148:8165  _claimTimes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":8174:8186  _rewardToken */\n      sload(0x09)\n      swap1\n      swap5\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":8148:8188  _claimTimes[user][address(_rewardToken)] */\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/chains/binance/RewardSystem.sol\":8191:8206  block.timestamp */\n      timestamp\n        /* \"contracts/chains/binance/RewardSystem.sol\":8148:8206  _claimTimes[user][address(_rewardToken)] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8237:8258  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":8269:8293  swapTokensForEth(amount) */\n      tag_420\n        /* \"contracts/chains/binance/RewardSystem.sol\":8286:8292  amount */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":8269:8285  swapTokensForEth */\n      tag_310\n        /* \"contracts/chains/binance/RewardSystem.sol\":8269:8293  swapTokensForEth(amount) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8304:8319  uint256 userEth */\n      0x00\n        /* \"contracts/chains/binance/RewardSystem.sol\":8322:8358  address(this).balance.sub(ethBefore) */\n      tag_421\n        /* \"contracts/chains/binance/RewardSystem.sol\":8322:8343  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/binance/RewardSystem.sol\":8348:8357  ethBefore */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":8322:8347  address(this).balance.sub */\n      tag_294\n        /* \"contracts/chains/binance/RewardSystem.sol\":8322:8358  address(this).balance.sub(ethBefore) */\n      jump\t// in\n    tag_421:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8304:8358  uint256 userEth = address(this).balance.sub(ethBefore) */\n      swap1\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8369:8380  uint256 fee */\n      0x00\n        /* \"contracts/chains/binance/RewardSystem.sol\":8383:8409  userEth.div(nativeSwapFee) */\n      tag_422\n        /* \"contracts/chains/binance/RewardSystem.sol\":8395:8408  nativeSwapFee */\n      sload(0x06)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8383:8390  userEth */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":8383:8394  userEth.div */\n      tag_292\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8383:8409  userEth.div(nativeSwapFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_422:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8369:8409  uint256 fee = userEth.div(nativeSwapFee) */\n      swap1\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8430:8446  userEth.sub(fee) */\n      tag_423\n        /* \"contracts/chains/binance/RewardSystem.sol\":8430:8437  userEth */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":8369:8409  uint256 fee = userEth.div(nativeSwapFee) */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":8430:8441  userEth.sub */\n      tag_294\n        /* \"contracts/chains/binance/RewardSystem.sol\":8430:8446  userEth.sub(fee) */\n      jump\t// in\n    tag_423:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8420:8446  userEth = userEth.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8457:8510  TransferHelper.safeTransferETH(address(owner()), fee) */\n      tag_424\n        /* \"contracts/chains/binance/RewardSystem.sol\":8496:8503  owner() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":8457:8510  TransferHelper.safeTransferETH(address(owner()), fee) */\n    tag_424:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8521:8566  TransferHelper.safeTransferETH(user, userEth) */\n      tag_426\n        /* \"contracts/chains/binance/RewardSystem.sol\":8552:8556  user */\n      dup5\n        /* \"contracts/chains/binance/RewardSystem.sol\":8558:8565  userEth */\n      dup4\n        /* \"contracts/chains/binance/RewardSystem.sol\":8521:8551  TransferHelper.safeTransferETH */\n      tag_250\n        /* \"contracts/chains/binance/RewardSystem.sol\":8521:8566  TransferHelper.safeTransferETH(user, userEth) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8612:8615  fee */\n      dup1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8603:8610  userEth */\n      dup3\n        /* \"contracts/chains/binance/RewardSystem.sol\":8597:8601  user */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8582:8616  SentRewardsETH(user, userEth, fee) */\n      and\n      0x75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d53431\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/chains/binance/RewardSystem.sol\":7637:8624  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":7565:8624  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_433\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5535:5537   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5517:5538   */\n      mstore\n        /* \"#utility.yul\":5574:5576   */\n      0x26\n        /* \"#utility.yul\":5554:5572   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5547:5577   */\n      mstore\n        /* \"#utility.yul\":5613:5647   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5593:5611   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5586:5648   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5664:5682   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5657:5693   */\n      mstore\n        /* \"#utility.yul\":5710:5729   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_201\n        /* \"#utility.yul\":5333:5735   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_433:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_436\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_353\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n    tag_181:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_438\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_439\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_439:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_440\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_440:\n        /* \"contracts/libraries/TimeLock.sol\":3696:3709  isLockEnabled */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":3696:3716  isLockEnabled = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":3731:3744  EnabledLock() */\n      mload(0x40)\n      0x2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e\n      swap2\n        /* \"contracts/libraries/TimeLock.sol\":3696:3709  isLockEnabled */\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3731:3744  EnabledLock() */\n      log1\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":3052:3270  function getBalance(address token) public view returns (uint256) {\r... */\n    tag_185:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3108:3115  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3131:3150  token == address(0) */\n      dup3\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":3128:3207  if(token == address(0)) {\r... */\n      tag_444\n      jumpi\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":3174:3195  address(this).balance */\n      selfbalance\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":3052:3270  function getBalance(address token) public view returns (uint256) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":3128:3207  if(token == address(0)) {\r... */\n    tag_444:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3224:3262  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":3256:3260  this */\n      address\n        /* \"contracts/chains/binance/RewardSystem.sol\":3224:3262  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4343:4394   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":3224:3247  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4316:4334   */\n      0x24\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":3224:3262  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_446\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_446:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_448\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_448:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_449\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"contracts/chains/binance/RewardSystem.sol\":3217:3262  return IERC20(token).balanceOf(address(this)) */\n      swap3\n        /* \"contracts/chains/binance/RewardSystem.sol\":3052:3270  function getBalance(address token) public view returns (uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":4298:4628  function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {\r... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_454\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_228\n      jump\t// in\n    tag_454:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x11\n      dup2\n      mstore\n      shl(0x79, 0x3ab83230ba32a932bbb0b9322a37b5b2b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_461\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_458\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_458:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_459\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_460\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_460:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_459:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_461\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_462\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_462:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_463\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_463:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_461:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_464\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_215\n      jump\t// in\n    tag_464:\n        /* \"contracts/chains/binance/RewardSystem.sol\":4424:4436  _rewardToken */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4409:4436  rewardToken != _rewardToken */\n      dup4\n      dup2\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":4424:4436  _rewardToken */\n      swap2\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":4409:4436  rewardToken != _rewardToken */\n      eq\n      iszero\n        /* \"contracts/chains/binance/RewardSystem.sol\":4401:4504  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      tag_467\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11938:11940   */\n      0x20\n        /* \"contracts/chains/binance/RewardSystem.sol\":4401:4504  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11920:11941   */\n      mstore\n        /* \"#utility.yul\":11977:11979   */\n      0x3f\n        /* \"#utility.yul\":11957:11975   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11950:11980   */\n      mstore\n        /* \"#utility.yul\":12016:12050   */\n      0x41424f41543a757064617465526577617264546f6b656e3a20596f752063616e\n        /* \"#utility.yul\":11996:12014   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11989:12051   */\n      mstore\n        /* \"#utility.yul\":12087:12120   */\n      0x277420757064617465207468652065786163742073616d6520746f6b656e7300\n        /* \"#utility.yul\":12067:12085   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12060:12121   */\n      mstore\n        /* \"#utility.yul\":12138:12157   */\n      0x84\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":4401:4504  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      tag_201\n        /* \"#utility.yul\":11736:12163   */\n      jump\n        /* \"contracts/chains/binance/RewardSystem.sol\":4401:4504  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n    tag_467:\n        /* \"contracts/chains/binance/RewardSystem.sol\":4547:4559  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":4520:4583  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap3\n        /* \"contracts/chains/binance/RewardSystem.sol\":4547:4559  _rewardToken */\n      and\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":4520:4583  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      0xcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d6\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":4547:4559  _rewardToken */\n      0x00\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":4520:4583  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      log3\n        /* \"contracts/chains/binance/RewardSystem.sol\":4594:4606  _rewardToken */\n      0x09\n        /* \"contracts/chains/binance/RewardSystem.sol\":4594:4620  _rewardToken = rewardToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_221\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_125\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_250:\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1098:1110  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1123  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1131:1136  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1151  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_477\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_477:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_481\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_480)\n    tag_481:\n      0x60\n      swap2\n      pop\n    tag_480:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1097:1151  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1182:1189  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_482\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6365:6367   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6347:6368   */\n      mstore\n        /* \"#utility.yul\":6404:6406   */\n      0x34\n        /* \"#utility.yul\":6384:6402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6377:6407   */\n      mstore\n        /* \"#utility.yul\":6443:6477   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":6423:6441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6416:6478   */\n      mstore\n      shl(0x62, 0x08115512081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":6494:6512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6487:6537   */\n      mstore\n        /* \"#utility.yul\":6554:6573   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_201\n        /* \"#utility.yul\":6163:6579   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n    tag_482:\n        /* \"contracts/libraries/TransferHelper.sol\":1087:1274  {... */\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3440:3447  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_486\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3470:3471  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3467  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_487\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3459:3471  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_486\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3855:3856  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3852  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_490\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3097:3104  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_486\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3127:3128  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3124  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_493\n      jump\t// in\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n    tag_302:\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4597:4629   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4579:4630   */\n      mstore\n        /* \"#utility.yul\":4646:4664   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4639:4673   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4570   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":371:381  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_497\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_478\n      jump\t// in\n    tag_497:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_500\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_499)\n    tag_500:\n      0x60\n      swap2\n      pop\n    tag_499:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":323:428  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":459:466  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":459:516  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_503\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":471:482  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":471:487  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":471:515  data.length == 0 || abi.decode(data, (bool)) */\n      tag_503\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":502:506  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":491:515  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_503\n      swap2\n      swap1\n      tag_504\n      jump\t// in\n    tag_503:\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_505\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12858:12860   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12840:12861   */\n      mstore\n        /* \"#utility.yul\":12897:12899   */\n      0x2d\n        /* \"#utility.yul\":12877:12895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12870:12900   */\n      mstore\n        /* \"#utility.yul\":12936:12970   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":12916:12934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12909:12971   */\n      mstore\n      shl(0x9a, 0x185b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":12987:13005   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12980:13023   */\n      mstore\n        /* \"#utility.yul\":13040:13059   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_201\n        /* \"#utility.yul\":12656:13065   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n    tag_505:\n        /* \"contracts/libraries/TransferHelper.sol\":313:594  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/binance/RewardSystem.sol\":8636:9195  function swapTokensForEth(uint256 tokenAmount) private {\r... */\n    tag_310:\n        /* \"contracts/chains/binance/RewardSystem.sol\":8784:8800  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/chains/binance/RewardSystem.sol\":8798:8799  2 */\n      0x02\n        /* \"contracts/chains/binance/RewardSystem.sol\":8784:8800  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8760:8781  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/chains/binance/RewardSystem.sol\":8784:8800  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8829:8841  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8818  path[0] */\n      dup3\n      mload\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8829:8841  _rewardToken */\n      and\n      swap2\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8818  path[0] */\n      dup4\n      swap2\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8829:8841  _rewardToken */\n      0x00\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8818  path[0] */\n      tag_513\n      jumpi\n      tag_513\n      tag_514\n      jump\t// in\n    tag_513:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8842  path[0] = address(_rewardToken) */\n      swap3\n      dup4\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8818  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":8811:8842  path[0] = address(_rewardToken) */\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8863:8868  _weth */\n      sload(0x0c)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8860  path[1] */\n      dup3\n      mload\n        /* \"contracts/chains/binance/RewardSystem.sol\":8863:8868  _weth */\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8857  path */\n      dup3\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8863:8868  _weth */\n      0x01\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8860  path[1] */\n      dup2\n      lt\n      tag_516\n      jumpi\n      tag_516\n      tag_514\n      jump\t// in\n    tag_516:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8868  path[1] = _weth */\n      swap3\n      dup4\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8860  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":8853:8868  path[1] = _weth */\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8893  _rewardToken */\n      sload(0x09)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8910:8917  _router */\n      sload(0x0d)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8932  _rewardToken.approve(address(_router), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8910:8917  _router */\n      swap1\n      dup4\n      and\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8932  _rewardToken.approve(address(_router), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4579:4630   */\n      mstore\n        /* \"#utility.yul\":4646:4664   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4639:4673   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8893  _rewardToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8901  _rewardToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4552:4570   */\n      0x44\n      add\n        /* \"contracts/chains/binance/RewardSystem.sol\":8881:8932  _rewardToken.approve(address(_router), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_518\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_518:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_520\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_520:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_521\n      swap2\n      swap1\n      tag_504\n      jump\t// in\n    tag_521:\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:8978  _router */\n      sload(0x0d)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:9187  _router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:8978  _router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:9029  _router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:9187  _router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      tag_522\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":9044:9055  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:8978  _router */\n      0x00\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":9114:9118  path */\n      dup7\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":9141:9145  this */\n      address\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":9161:9176  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/chains/binance/RewardSystem.sol\":8971:9187  _router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r... */\n      0x04\n      add\n      tag_523\n      jump\t// in\n    tag_522:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_524\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_524:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_526\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_526:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8691:9195  {\r... */\n      pop\n        /* \"contracts/chains/binance/RewardSystem.sol\":8636:9195  function swapTokensForEth(uint256 tokenAmount) private {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:261   */\n    tag_54:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_530:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_486\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":266:654   */\n    tag_70:\n        /* \"#utility.yul\":334:340   */\n      0x00\n        /* \"#utility.yul\":342:348   */\n      dup1\n        /* \"#utility.yul\":395:397   */\n      0x40\n        /* \"#utility.yul\":383:392   */\n      dup4\n        /* \"#utility.yul\":374:381   */\n      dup6\n        /* \"#utility.yul\":370:393   */\n      sub\n        /* \"#utility.yul\":366:398   */\n      slt\n        /* \"#utility.yul\":363:415   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":411:412   */\n      0x00\n        /* \"#utility.yul\":408:409   */\n      dup1\n        /* \"#utility.yul\":401:413   */\n      revert\n        /* \"#utility.yul\":363:415   */\n    tag_534:\n        /* \"#utility.yul\":450:459   */\n      dup3\n        /* \"#utility.yul\":437:460   */\n      calldataload\n        /* \"#utility.yul\":469:500   */\n      tag_535\n        /* \"#utility.yul\":494:499   */\n      dup2\n        /* \"#utility.yul\":469:500   */\n      tag_532\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":519:524   */\n      swap2\n      pop\n        /* \"#utility.yul\":576:578   */\n      0x20\n        /* \"#utility.yul\":561:579   */\n      dup4\n      add\n        /* \"#utility.yul\":548:580   */\n      calldataload\n        /* \"#utility.yul\":589:622   */\n      tag_536\n        /* \"#utility.yul\":548:580   */\n      dup2\n        /* \"#utility.yul\":589:622   */\n      tag_532\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":641:648   */\n      dup1\n        /* \"#utility.yul\":631:648   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":266:654   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:936   */\n    tag_504:\n        /* \"#utility.yul\":726:732   */\n      0x00\n        /* \"#utility.yul\":779:781   */\n      0x20\n        /* \"#utility.yul\":767:776   */\n      dup3\n        /* \"#utility.yul\":758:765   */\n      dup5\n        /* \"#utility.yul\":754:777   */\n      sub\n        /* \"#utility.yul\":750:782   */\n      slt\n        /* \"#utility.yul\":747:799   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":795:796   */\n      0x00\n        /* \"#utility.yul\":792:793   */\n      dup1\n        /* \"#utility.yul\":785:797   */\n      revert\n        /* \"#utility.yul\":747:799   */\n    tag_538:\n        /* \"#utility.yul\":827:836   */\n      dup2\n        /* \"#utility.yul\":821:837   */\n      mload\n        /* \"#utility.yul\":880:885   */\n      dup1\n        /* \"#utility.yul\":873:886   */\n      iszero\n        /* \"#utility.yul\":866:887   */\n      iszero\n        /* \"#utility.yul\":859:864   */\n      dup2\n        /* \"#utility.yul\":856:888   */\n      eq\n        /* \"#utility.yul\":846:906   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":902:903   */\n      0x00\n        /* \"#utility.yul\":899:900   */\n      dup1\n        /* \"#utility.yul\":892:904   */\n      revert\n        /* \"#utility.yul\":1486:2408   */\n    tag_124:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1608:1610   */\n      0x20\n        /* \"#utility.yul\":1596:1605   */\n      dup3\n        /* \"#utility.yul\":1587:1594   */\n      dup5\n        /* \"#utility.yul\":1583:1606   */\n      sub\n        /* \"#utility.yul\":1579:1611   */\n      slt\n        /* \"#utility.yul\":1576:1628   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":1624:1625   */\n      0x00\n        /* \"#utility.yul\":1621:1622   */\n      dup1\n        /* \"#utility.yul\":1614:1626   */\n      revert\n        /* \"#utility.yul\":1576:1628   */\n    tag_547:\n        /* \"#utility.yul\":1664:1673   */\n      dup2\n        /* \"#utility.yul\":1651:1674   */\n      calldataload\n        /* \"#utility.yul\":1693:1711   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1734:1736   */\n      dup1\n        /* \"#utility.yul\":1726:1732   */\n      dup3\n        /* \"#utility.yul\":1723:1737   */\n      gt\n        /* \"#utility.yul\":1720:1754   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1747:1748   */\n      dup1\n        /* \"#utility.yul\":1740:1752   */\n      revert\n        /* \"#utility.yul\":1720:1754   */\n    tag_548:\n        /* \"#utility.yul\":1788:1794   */\n      dup2\n        /* \"#utility.yul\":1777:1786   */\n      dup5\n        /* \"#utility.yul\":1773:1795   */\n      add\n        /* \"#utility.yul\":1763:1795   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1840   */\n      dup5\n        /* \"#utility.yul\":1826:1830   */\n      0x1f\n        /* \"#utility.yul\":1822:1824   */\n      dup4\n        /* \"#utility.yul\":1818:1831   */\n      add\n        /* \"#utility.yul\":1814:1841   */\n      slt\n        /* \"#utility.yul\":1804:1859   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1852:1853   */\n      dup1\n        /* \"#utility.yul\":1845:1857   */\n      revert\n        /* \"#utility.yul\":1804:1859   */\n    tag_549:\n        /* \"#utility.yul\":1891:1893   */\n      dup2\n        /* \"#utility.yul\":1878:1894   */\n      calldataload\n        /* \"#utility.yul\":1913:1915   */\n      dup2\n        /* \"#utility.yul\":1909:1911   */\n      dup2\n        /* \"#utility.yul\":1906:1916   */\n      gt\n        /* \"#utility.yul\":1903:1939   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":1919:1937   */\n      tag_551\n      tag_475\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":1994:1996   */\n      0x40\n        /* \"#utility.yul\":1988:1997   */\n      mload\n        /* \"#utility.yul\":1962:1964   */\n      0x1f\n        /* \"#utility.yul\":2048:2061   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2044:2066   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2068:2070   */\n      0x3f\n        /* \"#utility.yul\":2040:2071   */\n      add\n        /* \"#utility.yul\":2036:2076   */\n      and\n        /* \"#utility.yul\":2024:2077   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2092:2110   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2112:2134   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2089:2135   */\n      or\n        /* \"#utility.yul\":2086:2158   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":2138:2156   */\n      tag_553\n      tag_475\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":2178:2188   */\n      dup2\n        /* \"#utility.yul\":2174:2176   */\n      0x40\n        /* \"#utility.yul\":2167:2189   */\n      mstore\n        /* \"#utility.yul\":2213:2215   */\n      dup3\n        /* \"#utility.yul\":2205:2211   */\n      dup2\n        /* \"#utility.yul\":2198:2216   */\n      mstore\n        /* \"#utility.yul\":2253:2260   */\n      dup8\n        /* \"#utility.yul\":2248:2250   */\n      0x20\n        /* \"#utility.yul\":2243:2245   */\n      dup5\n        /* \"#utility.yul\":2239:2241   */\n      dup8\n        /* \"#utility.yul\":2235:2246   */\n      add\n        /* \"#utility.yul\":2231:2251   */\n      add\n        /* \"#utility.yul\":2228:2261   */\n      gt\n        /* \"#utility.yul\":2225:2278   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2271:2272   */\n      dup1\n        /* \"#utility.yul\":2264:2276   */\n      revert\n        /* \"#utility.yul\":2225:2278   */\n    tag_554:\n        /* \"#utility.yul\":2330:2332   */\n      dup3\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2321:2323   */\n      dup7\n        /* \"#utility.yul\":2317:2328   */\n      add\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2304:2310   */\n      dup4\n        /* \"#utility.yul\":2300:2315   */\n      add\n        /* \"#utility.yul\":2287:2333   */\n      calldatacopy\n        /* \"#utility.yul\":2375:2376   */\n      0x00\n        /* \"#utility.yul\":2353:2368   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":2370:2372   */\n      0x20\n        /* \"#utility.yul\":2349:2373   */\n      add\n        /* \"#utility.yul\":2342:2377   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":2357:2363   */\n      swap6\n        /* \"#utility.yul\":1486:2408   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2413:2593   */\n    tag_59:\n        /* \"#utility.yul\":2472:2478   */\n      0x00\n        /* \"#utility.yul\":2525:2527   */\n      0x20\n        /* \"#utility.yul\":2513:2522   */\n      dup3\n        /* \"#utility.yul\":2504:2511   */\n      dup5\n        /* \"#utility.yul\":2500:2523   */\n      sub\n        /* \"#utility.yul\":2496:2528   */\n      slt\n        /* \"#utility.yul\":2493:2545   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":2541:2542   */\n      0x00\n        /* \"#utility.yul\":2538:2539   */\n      dup1\n        /* \"#utility.yul\":2531:2543   */\n      revert\n        /* \"#utility.yul\":2493:2545   */\n    tag_556:\n      pop\n        /* \"#utility.yul\":2564:2587   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2413:2593   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2598:2782   */\n    tag_450:\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2721:2723   */\n      0x20\n        /* \"#utility.yul\":2709:2718   */\n      dup3\n        /* \"#utility.yul\":2700:2707   */\n      dup5\n        /* \"#utility.yul\":2696:2719   */\n      sub\n        /* \"#utility.yul\":2692:2724   */\n      slt\n        /* \"#utility.yul\":2689:2741   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2734:2735   */\n      dup1\n        /* \"#utility.yul\":2727:2739   */\n      revert\n        /* \"#utility.yul\":2689:2741   */\n    tag_558:\n      pop\n        /* \"#utility.yul\":2760:2776   */\n      mload\n      swap2\n        /* \"#utility.yul\":2598:2782   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2787:3102   */\n    tag_168:\n        /* \"#utility.yul\":2855:2861   */\n      0x00\n        /* \"#utility.yul\":2863:2869   */\n      dup1\n        /* \"#utility.yul\":2916:2918   */\n      0x40\n        /* \"#utility.yul\":2904:2913   */\n      dup4\n        /* \"#utility.yul\":2895:2902   */\n      dup6\n        /* \"#utility.yul\":2891:2914   */\n      sub\n        /* \"#utility.yul\":2887:2919   */\n      slt\n        /* \"#utility.yul\":2884:2936   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":2932:2933   */\n      0x00\n        /* \"#utility.yul\":2929:2930   */\n      dup1\n        /* \"#utility.yul\":2922:2934   */\n      revert\n        /* \"#utility.yul\":2884:2936   */\n    tag_560:\n        /* \"#utility.yul\":2968:2977   */\n      dup3\n        /* \"#utility.yul\":2955:2978   */\n      calldataload\n        /* \"#utility.yul\":2945:2978   */\n      swap2\n      pop\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3017:3026   */\n      dup4\n        /* \"#utility.yul\":3013:3031   */\n      add\n        /* \"#utility.yul\":3000:3032   */\n      calldataload\n        /* \"#utility.yul\":3041:3072   */\n      tag_536\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3041:3072   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":3107:3632   */\n    tag_86:\n        /* \"#utility.yul\":3193:3199   */\n      0x00\n        /* \"#utility.yul\":3201:3207   */\n      dup1\n        /* \"#utility.yul\":3209:3215   */\n      0x00\n        /* \"#utility.yul\":3217:3223   */\n      dup1\n        /* \"#utility.yul\":3270:3273   */\n      0x80\n        /* \"#utility.yul\":3258:3267   */\n      dup6\n        /* \"#utility.yul\":3249:3256   */\n      dup8\n        /* \"#utility.yul\":3245:3268   */\n      sub\n        /* \"#utility.yul\":3241:3274   */\n      slt\n        /* \"#utility.yul\":3238:3291   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3238:3291   */\n    tag_563:\n        /* \"#utility.yul\":3323:3332   */\n      dup5\n        /* \"#utility.yul\":3310:3333   */\n      calldataload\n        /* \"#utility.yul\":3300:3333   */\n      swap4\n      pop\n        /* \"#utility.yul\":3383:3385   */\n      0x20\n        /* \"#utility.yul\":3372:3381   */\n      dup6\n        /* \"#utility.yul\":3368:3386   */\n      add\n        /* \"#utility.yul\":3355:3387   */\n      calldataload\n        /* \"#utility.yul\":3396:3427   */\n      tag_564\n        /* \"#utility.yul\":3421:3426   */\n      dup2\n        /* \"#utility.yul\":3396:3427   */\n      tag_532\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":3446:3451   */\n      swap3\n      pop\n        /* \"#utility.yul\":3498:3500   */\n      0x40\n        /* \"#utility.yul\":3483:3501   */\n      dup6\n      add\n        /* \"#utility.yul\":3470:3502   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3554:3556   */\n      0x60\n        /* \"#utility.yul\":3539:3557   */\n      dup6\n      add\n        /* \"#utility.yul\":3526:3558   */\n      calldataload\n        /* \"#utility.yul\":3567:3600   */\n      tag_565\n        /* \"#utility.yul\":3526:3558   */\n      dup2\n        /* \"#utility.yul\":3567:3600   */\n      tag_532\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":3107:3632   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3911   */\n    tag_478:\n        /* \"#utility.yul\":3766:3769   */\n      0x00\n        /* \"#utility.yul\":3804:3810   */\n      dup3\n        /* \"#utility.yul\":3798:3811   */\n      mload\n        /* \"#utility.yul\":3820:3873   */\n      tag_567\n        /* \"#utility.yul\":3866:3872   */\n      dup2\n        /* \"#utility.yul\":3861:3864   */\n      dup5\n        /* \"#utility.yul\":3854:3858   */\n      0x20\n        /* \"#utility.yul\":3846:3852   */\n      dup8\n        /* \"#utility.yul\":3842:3859   */\n      add\n        /* \"#utility.yul\":3820:3873   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":3889:3905   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3637:3911   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:9094   */\n    tag_228:\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8922:8943   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8959:8977   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8952:8982   */\n      mstore\n        /* \"#utility.yul\":9018:9052   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9013:9015   */\n      0x40\n        /* \"#utility.yul\":8998:9016   */\n      dup3\n      add\n        /* \"#utility.yul\":8991:9053   */\n      mstore\n        /* \"#utility.yul\":9085:9087   */\n      0x60\n        /* \"#utility.yul\":9070:9088   */\n      add\n      swap1\n        /* \"#utility.yul\":8738:9094   */\n      jump\t// out\n        /* \"#utility.yul\":10010:10352   */\n    tag_215:\n        /* \"#utility.yul\":10212:10214   */\n      0x20\n        /* \"#utility.yul\":10194:10215   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10251:10253   */\n      0x12\n        /* \"#utility.yul\":10231:10249   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10224:10254   */\n      mstore\n      shl(0x72, 0x119d5b98dd1a5bdb881a5cc81b1bd8dad959)\n        /* \"#utility.yul\":10285:10287   */\n      0x40\n        /* \"#utility.yul\":10270:10288   */\n      dup3\n      add\n        /* \"#utility.yul\":10263:10311   */\n      mstore\n        /* \"#utility.yul\":10343:10345   */\n      0x60\n        /* \"#utility.yul\":10328:10346   */\n      add\n      swap1\n        /* \"#utility.yul\":10010:10352   */\n      jump\t// out\n        /* \"#utility.yul\":10357:10774   */\n    tag_202:\n        /* \"#utility.yul\":10559:10561   */\n      0x20\n        /* \"#utility.yul\":10541:10562   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10598:10600   */\n      0x35\n        /* \"#utility.yul\":10578:10596   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10571:10601   */\n      mstore\n        /* \"#utility.yul\":10637:10671   */\n      0x6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420\n        /* \"#utility.yul\":10632:10634   */\n      0x40\n        /* \"#utility.yul\":10617:10635   */\n      dup3\n      add\n        /* \"#utility.yul\":10610:10672   */\n      mstore\n      shl(0x59, 0x3a379031b0b636103a3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":10703:10705   */\n      0x60\n        /* \"#utility.yul\":10688:10706   */\n      dup3\n      add\n        /* \"#utility.yul\":10681:10732   */\n      mstore\n        /* \"#utility.yul\":10764:10767   */\n      0x80\n        /* \"#utility.yul\":10749:10768   */\n      add\n      swap1\n        /* \"#utility.yul\":10357:10774   */\n      jump\t// out\n        /* \"#utility.yul\":13674:14654   */\n    tag_523:\n        /* \"#utility.yul\":13936:13940   */\n      0x00\n        /* \"#utility.yul\":13984:13987   */\n      0xa0\n        /* \"#utility.yul\":13973:13982   */\n      dup3\n        /* \"#utility.yul\":13969:13988   */\n      add\n        /* \"#utility.yul\":14015:14021   */\n      dup8\n        /* \"#utility.yul\":14004:14013   */\n      dup4\n        /* \"#utility.yul\":13997:14022   */\n      mstore\n        /* \"#utility.yul\":14041:14043   */\n      0x20\n        /* \"#utility.yul\":14079:14085   */\n      dup8\n        /* \"#utility.yul\":14074:14076   */\n      dup2\n        /* \"#utility.yul\":14063:14072   */\n      dup6\n        /* \"#utility.yul\":14059:14077   */\n      add\n        /* \"#utility.yul\":14052:14086   */\n      mstore\n        /* \"#utility.yul\":14122:14125   */\n      0xa0\n        /* \"#utility.yul\":14117:14119   */\n      0x40\n        /* \"#utility.yul\":14106:14115   */\n      dup6\n        /* \"#utility.yul\":14102:14120   */\n      add\n        /* \"#utility.yul\":14095:14126   */\n      mstore\n        /* \"#utility.yul\":14146:14152   */\n      dup2\n        /* \"#utility.yul\":14181:14187   */\n      dup8\n        /* \"#utility.yul\":14175:14188   */\n      mload\n        /* \"#utility.yul\":14212:14218   */\n      dup1\n        /* \"#utility.yul\":14204:14210   */\n      dup5\n        /* \"#utility.yul\":14197:14219   */\n      mstore\n        /* \"#utility.yul\":14250:14253   */\n      0xc0\n        /* \"#utility.yul\":14239:14248   */\n      dup7\n        /* \"#utility.yul\":14235:14254   */\n      add\n        /* \"#utility.yul\":14228:14254   */\n      swap2\n      pop\n        /* \"#utility.yul\":14289:14291   */\n      dup3\n        /* \"#utility.yul\":14281:14287   */\n      dup10\n        /* \"#utility.yul\":14277:14292   */\n      add\n        /* \"#utility.yul\":14263:14292   */\n      swap4\n      pop\n        /* \"#utility.yul\":14310:14311   */\n      0x00\n        /* \"#utility.yul\":14320:14515   */\n    tag_597:\n        /* \"#utility.yul\":14334:14340   */\n      dup2\n        /* \"#utility.yul\":14331:14332   */\n      dup2\n        /* \"#utility.yul\":14328:14341   */\n      lt\n        /* \"#utility.yul\":14320:14515   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":14399:14412   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14395:14434   */\n      and\n        /* \"#utility.yul\":14383:14435   */\n      dup4\n      mstore\n        /* \"#utility.yul\":14490:14505   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":14455:14467   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":14431:14432   */\n      0x01\n        /* \"#utility.yul\":14349:14358   */\n      add\n        /* \"#utility.yul\":14320:14515   */\n      jump(tag_597)\n    tag_599:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14571:14603   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":14566:14568   */\n      0x60\n        /* \"#utility.yul\":14551:14569   */\n      dup6\n      add\n        /* \"#utility.yul\":14544:14604   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14635:14638   */\n      0x80\n        /* \"#utility.yul\":14620:14639   */\n      add\n        /* \"#utility.yul\":14613:14648   */\n      mstore\n        /* \"#utility.yul\":14532:14535   */\n      swap4\n        /* \"#utility.yul\":13674:14654   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14659:14787   */\n    tag_212:\n        /* \"#utility.yul\":14699:14702   */\n      0x00\n        /* \"#utility.yul\":14730:14731   */\n      dup3\n        /* \"#utility.yul\":14726:14732   */\n      not\n        /* \"#utility.yul\":14723:14724   */\n      dup3\n        /* \"#utility.yul\":14720:14733   */\n      gt\n        /* \"#utility.yul\":14717:14756   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":14736:14754   */\n      tag_602\n      tag_603\n      jump\t// in\n    tag_602:\n      pop\n        /* \"#utility.yul\":14772:14781   */\n      add\n      swap1\n        /* \"#utility.yul\":14659:14787   */\n      jump\t// out\n        /* \"#utility.yul\":14792:15009   */\n    tag_490:\n        /* \"#utility.yul\":14832:14833   */\n      0x00\n        /* \"#utility.yul\":14858:14859   */\n      dup3\n        /* \"#utility.yul\":14848:14980   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":14902:14912   */\n      0x4e487b71\n        /* \"#utility.yul\":14897:14900   */\n      0xe0\n        /* \"#utility.yul\":14893:14913   */\n      shl\n        /* \"#utility.yul\":14890:14891   */\n      0x00\n        /* \"#utility.yul\":14883:14914   */\n      mstore\n        /* \"#utility.yul\":14937:14941   */\n      0x12\n        /* \"#utility.yul\":14934:14935   */\n      0x04\n        /* \"#utility.yul\":14927:14942   */\n      mstore\n        /* \"#utility.yul\":14965:14969   */\n      0x24\n        /* \"#utility.yul\":14962:14963   */\n      0x00\n        /* \"#utility.yul\":14955:14970   */\n      revert\n        /* \"#utility.yul\":14848:14980   */\n    tag_605:\n      pop\n        /* \"#utility.yul\":14994:15003   */\n      div\n      swap1\n        /* \"#utility.yul\":14792:15009   */\n      jump\t// out\n        /* \"#utility.yul\":15014:15182   */\n    tag_487:\n        /* \"#utility.yul\":15054:15061   */\n      0x00\n        /* \"#utility.yul\":15120:15121   */\n      dup2\n        /* \"#utility.yul\":15116:15117   */\n      0x00\n        /* \"#utility.yul\":15112:15118   */\n      not\n        /* \"#utility.yul\":15108:15122   */\n      div\n        /* \"#utility.yul\":15105:15106   */\n      dup4\n        /* \"#utility.yul\":15102:15123   */\n      gt\n        /* \"#utility.yul\":15097:15098   */\n      dup3\n        /* \"#utility.yul\":15090:15099   */\n      iszero\n        /* \"#utility.yul\":15083:15100   */\n      iszero\n        /* \"#utility.yul\":15079:15124   */\n      and\n        /* \"#utility.yul\":15076:15147   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":15127:15145   */\n      tag_608\n      tag_603\n      jump\t// in\n    tag_608:\n      pop\n        /* \"#utility.yul\":15167:15176   */\n      mul\n      swap1\n        /* \"#utility.yul\":15014:15182   */\n      jump\t// out\n        /* \"#utility.yul\":15187:15312   */\n    tag_493:\n        /* \"#utility.yul\":15227:15231   */\n      0x00\n        /* \"#utility.yul\":15255:15256   */\n      dup3\n        /* \"#utility.yul\":15252:15253   */\n      dup3\n        /* \"#utility.yul\":15249:15257   */\n      lt\n        /* \"#utility.yul\":15246:15280   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":15260:15278   */\n      tag_611\n      tag_603\n      jump\t// in\n    tag_611:\n      pop\n        /* \"#utility.yul\":15297:15306   */\n      sub\n      swap1\n        /* \"#utility.yul\":15187:15312   */\n      jump\t// out\n        /* \"#utility.yul\":15317:15575   */\n    tag_568:\n        /* \"#utility.yul\":15389:15390   */\n      0x00\n        /* \"#utility.yul\":15399:15512   */\n    tag_613:\n        /* \"#utility.yul\":15413:15419   */\n      dup4\n        /* \"#utility.yul\":15410:15411   */\n      dup2\n        /* \"#utility.yul\":15407:15420   */\n      lt\n        /* \"#utility.yul\":15399:15512   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":15489:15500   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15483:15501   */\n      mload\n        /* \"#utility.yul\":15470:15481   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15463:15502   */\n      mstore\n        /* \"#utility.yul\":15435:15437   */\n      0x20\n        /* \"#utility.yul\":15428:15438   */\n      add\n        /* \"#utility.yul\":15399:15512   */\n      jump(tag_613)\n    tag_615:\n        /* \"#utility.yul\":15530:15536   */\n      dup4\n        /* \"#utility.yul\":15527:15528   */\n      dup2\n        /* \"#utility.yul\":15524:15537   */\n      gt\n        /* \"#utility.yul\":15521:15569   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":15565:15566   */\n      0x00\n        /* \"#utility.yul\":15556:15562   */\n      dup5\n        /* \"#utility.yul\":15551:15554   */\n      dup5\n        /* \"#utility.yul\":15547:15563   */\n      add\n        /* \"#utility.yul\":15540:15567   */\n      mstore\n        /* \"#utility.yul\":15521:15569   */\n    tag_616:\n      pop\n        /* \"#utility.yul\":15317:15575   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15580:15707   */\n    tag_603:\n        /* \"#utility.yul\":15641:15651   */\n      0x4e487b71\n        /* \"#utility.yul\":15636:15639   */\n      0xe0\n        /* \"#utility.yul\":15632:15652   */\n      shl\n        /* \"#utility.yul\":15629:15630   */\n      0x00\n        /* \"#utility.yul\":15622:15653   */\n      mstore\n        /* \"#utility.yul\":15672:15676   */\n      0x11\n        /* \"#utility.yul\":15669:15670   */\n      0x04\n        /* \"#utility.yul\":15662:15677   */\n      mstore\n        /* \"#utility.yul\":15696:15700   */\n      0x24\n        /* \"#utility.yul\":15693:15694   */\n      0x00\n        /* \"#utility.yul\":15686:15701   */\n      revert\n        /* \"#utility.yul\":15712:15839   */\n    tag_514:\n        /* \"#utility.yul\":15773:15783   */\n      0x4e487b71\n        /* \"#utility.yul\":15768:15771   */\n      0xe0\n        /* \"#utility.yul\":15764:15784   */\n      shl\n        /* \"#utility.yul\":15761:15762   */\n      0x00\n        /* \"#utility.yul\":15754:15785   */\n      mstore\n        /* \"#utility.yul\":15804:15808   */\n      0x32\n        /* \"#utility.yul\":15801:15802   */\n      0x04\n        /* \"#utility.yul\":15794:15809   */\n      mstore\n        /* \"#utility.yul\":15828:15832   */\n      0x24\n        /* \"#utility.yul\":15825:15826   */\n      0x00\n        /* \"#utility.yul\":15818:15833   */\n      revert\n        /* \"#utility.yul\":15844:15971   */\n    tag_475:\n        /* \"#utility.yul\":15905:15915   */\n      0x4e487b71\n        /* \"#utility.yul\":15900:15903   */\n      0xe0\n        /* \"#utility.yul\":15896:15916   */\n      shl\n        /* \"#utility.yul\":15893:15894   */\n      0x00\n        /* \"#utility.yul\":15886:15917   */\n      mstore\n        /* \"#utility.yul\":15936:15940   */\n      0x41\n        /* \"#utility.yul\":15933:15934   */\n      0x04\n        /* \"#utility.yul\":15926:15941   */\n      mstore\n        /* \"#utility.yul\":15960:15964   */\n      0x24\n        /* \"#utility.yul\":15957:15958   */\n      0x00\n        /* \"#utility.yul\":15950:15965   */\n      revert\n        /* \"#utility.yul\":15976:16107   */\n    tag_532:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16051:16082   */\n      dup2\n      and\n        /* \"#utility.yul\":16041:16083   */\n      dup2\n      eq\n        /* \"#utility.yul\":16031:16101   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":16097:16098   */\n      0x00\n        /* \"#utility.yul\":16094:16095   */\n      dup1\n        /* \"#utility.yul\":16087:16099   */\n      revert\n\n    auxdata: 0xa26469706673582212208a8357db7b5a9995b3286cb25f9f82a4d73246b308be66e08761528340cf9fbe64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1902": {
									"entryPoint": null,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2683": {
									"entryPoint": null,
									"id": 2683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 242,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$727_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:320:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:209:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "155:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "164:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "151:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "122:32:12"
															},
															"nodeType": "YulIf",
															"src": "119:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "180:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "184:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "272:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "281:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "284:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "274:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "274:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "231:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "242:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "257:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "262:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "253:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "253:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "266:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "249:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "249:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "238:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "238:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "228:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "228:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "221:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:50:12"
															},
															"nodeType": "YulIf",
															"src": "218:70:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "307:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$727_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "75:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "86:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "98:6:12",
														"type": ""
													}
												],
												"src": "14:304:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$727_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b19169055600a600681905560026007556401faa3b5006008556a084595161401484a000000905562015180600b55600c80546001600160a01b031990811673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c17909155600d80549091167310ed43c718714eb63d5aa57b78b54704e256024e1790553480156200009057600080fd5b506040516200265138038062002651833981016040819052620000b39162000142565b620000be33620000f2565b60028054336001600160a01b031991821617909155600980549091166001600160a01b039290921691909117905562000174565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200015557600080fd5b81516001600160a01b03811681146200016d57600080fd5b9392505050565b6124cd80620001846000396000f3fe6080604052600436106101fd5760003560e01c80639f5311561161010d578063c4e977c8116100a0578063f2fde38b1161006f578063f2fde38b146105b5578063f4762fd6146105d5578063f8b2cb4f146105ea578063f8cf31cb1461060a578063f98080c01461062a57600080fd5b8063c4e977c81461053f578063de996a6e14610555578063e7b6ebba14610575578063edae876f1461059557600080fd5b8063a617e653116100dc578063a617e653146104c9578063b59c6e0e146104e9578063c07a1d4d14610509578063c0d786551461051f57600080fd5b80639f53115614610448578063a176459514610468578063a347511a14610488578063a607494a146104a957600080fd5b80636594793911610190578063715018a61161015f578063715018a61461039d5780637d6dfb7e146103b25780637ef189f8146103e25780638da5cb5b146103f85780639850d32b1461042a57600080fd5b8063659479391461032a5780636a1db1bf1461034a5780636ff1c9bc1461036a57806370ed0ada1461038a57600080fd5b80634b417886116101cc5780634b417886146102b45780634e71d92d146102ec5780635dd53826146102f45780636469b96e1461030a57600080fd5b80630126ffb91461020957806313ea5d29146102325780631f8c1d2b146102545780632fa075621461027457600080fd5b3661020457005b600080fd5b34801561021557600080fd5b5061021f600b5481565b6040519081526020015b60405180910390f35b34801561023e57600080fd5b5061025261024d366004612093565b610662565b005b34801561026057600080fd5b5061025261026f3660046121bc565b61089c565b34801561028057600080fd5b506102a461028f366004612093565b60056020526000908152604090205460ff1681565b6040519015158152602001610229565b3480156102c057600080fd5b5061021f6102cf3660046120b0565b600460209081526000928352604080842090915290825290205481565b6102526109d8565b34801561030057600080fd5b5061021f600a5481565b34801561031657600080fd5b506102526103253660046121bc565b610b3d565b34801561033657600080fd5b50610252610345366004612213565b610c7d565b34801561035657600080fd5b506102526103653660046121bc565b61104a565b34801561037657600080fd5b50610252610385366004612093565b611186565b34801561039657600080fd5b504761021f565b3480156103a957600080fd5b50610252611230565b3480156103be57600080fd5b506102a46103cd366004612093565b60036020526000908152604090205460ff1681565b3480156103ee57600080fd5b5061021f60085481565b34801561040457600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610229565b34801561043657600080fd5b506002546001600160a01b0316610412565b34801561045457600080fd5b5061025261046336600461210b565b611266565b34801561047457600080fd5b50600c54610412906001600160a01b031681565b34801561049457600080fd5b506000546102a490600160a01b900460ff1681565b3480156104b557600080fd5b506102526104c436600461210b565b6112d9565b3480156104d557600080fd5b506102a46104e43660046120b0565b6113b6565b3480156104f557600080fd5b50600954610412906001600160a01b031681565b34801561051557600080fd5b5061021f60065481565b34801561052b57600080fd5b5061025261053a366004612093565b611436565b34801561054b57600080fd5b5061021f60075481565b34801561056157600080fd5b506102526105703660046121bc565b611482565b34801561058157600080fd5b506102526105903660046121ee565b6115d2565b3480156105a157600080fd5b50600d54610412906001600160a01b031681565b3480156105c157600080fd5b506102526105d0366004612093565b6118ee565b3480156105e157600080fd5b50610252611989565b3480156105f657600080fd5b5061021f610605366004612093565b611a13565b34801561061657600080fd5b50610252610625366004612093565b611aa7565b34801561063657600080fd5b5061021f61064536600461210b565b805160208183018101805160018252928201919093012091525481565b336106756000546001600160a01b031690565b6001600160a01b0316148061069457506002546001600160a01b031633145b6106b95760405162461bcd60e51b81526004016106b0906122da565b60405180910390fd5b60408051808201909152600a81526936b0b4b73a30b4b732b960b11b6020820152600054600160a01b900460ff16158061077357506001816040516106fe919061225d565b90815260200160405180910390205460001415801561073b575042600182604051610729919061225d565b90815260200160405180910390205411155b801561077357504262015180600183604051610757919061225d565b90815260200160405180910390205461077091906123a0565b10155b61078f5760405162461bcd60e51b81526004016106b0906122ae565b6002546001600160a01b038381169116148015906107b557506001600160a01b03821615155b6108405760405162461bcd60e51b815260206004820152605060248201527f41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e657260448201527f2063616e277420657175616c2070726576696f7573206d61696e7461696e657260648201526f206f72207a65726f206164647265737360801b608482015260a4016106b0565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf0190600090a35061089881611266565b5050565b6000546001600160a01b031633146108c65760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff16158061097f575060018160405161090a919061225d565b908152602001604051809103902054600014158015610947575042600182604051610935919061225d565b90815260200160405180910390205411155b801561097f57504262015180600183604051610963919061225d565b90815260200160405180910390205461097c91906123a0565b10155b61099b5760405162461bcd60e51b81526004016106b0906122ae565b6007546040518391907f247a43c209c4066973ea0643d726236d3bf70967e8dc6d109b75630f351c890490600090a3600782905561089881611266565b3360009081526005602052604090205460ff1615610a505760405162461bcd60e51b815260206004820152602f60248201527f41424f41543a3a636c61696d3a20416c726561647920616c6c6f77656420746f60448201526e207265636965766520746f6b656e7360881b60648201526084016106b0565b600854341015610ae05760405162461bcd60e51b815260206004820152604f60248201527f41424f41543a3a636c61696d3a20416d6f756e74206f6620626e6220746f206360448201527f6c61696d2073686f756c642063617272792074686520636f737420746f20616460648201526e642074686520636c61696d61626c6560881b608482015260a4016106b0565b610afb610af56000546001600160a01b031690565b34611c90565b33600081815260056020526040808220805460ff19166001179055517f98716c616972f4ef0085deb59c20f6f6a840219c121ad1f3b5413097f3a103579190a2565b6000546001600160a01b03163314610b675760405162461bcd60e51b81526004016106b090612279565b60408051808201909152600d81526c18da185b99d951d85cd0dbdcdd609a1b6020820152600054600160a01b900460ff161580610c245750600181604051610baf919061225d565b908152602001604051809103902054600014158015610bec575042600182604051610bda919061225d565b90815260200160405180910390205411155b8015610c2457504262015180600183604051610c08919061225d565b908152602001604051809103902054610c2191906123a0565b10155b610c405760405162461bcd60e51b81526004016106b0906122ae565b6008546040518391907fc3dc19678fd7390a5c1197decfaec52d8a1c63c49f0a51db570f5fe5040c5f7390600090a3600882905561089881611266565b6000546001600160a01b03163314610ca75760405162461bcd60e51b81526004016106b090612279565b600d546001600160a01b0316610d335760405162461bcd60e51b8152602060048201526044602482018190527f41424f41543a3a73656e645265776172643a205468657265206973206e6f2072908201527f6f7574657220646566696e656420746f207377617020746f6b656e7320666f72606482015263040cae8d60e31b608482015260a4016106b0565b610d3c81611a13565b841115610dbb5760405162461bcd60e51b815260206004820152604160248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527f72652072657761726473207468616e20696e207265776172642073797374656d6064820152602160f81b608482015260a4016106b0565b600a54841115610e2c5760405162461bcd60e51b815260206004820152603660248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527572652072657761726473207468616e206c696d69742160501b60648201526084016106b0565b610e3683826113b6565b610ea05760405162461bcd60e51b815260206004820152603560248201527f41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6044820152746f7265207468616e206f6e6365207065722064617960581b60648201526084016106b0565b6001600160a01b038084166000908152600460209081526040808320858516808552925290912042905560095490911614610f6d576000610ef76064610ef160075488611d6f90919063ffffffff16565b90611d82565b90506000610f058683611d8e565b90506001600160a01b038316610f3f57610f30610f2a6000546001600160a01b031690565b83611c90565b610f3a8582611c90565b610f66565b610f5b83610f556000546001600160a01b031690565b84611d9a565b610f66838683611d9a565b5050611003565b818411610fb05760405162461bcd60e51b8152602060048201526011602482015270105093d0550e8e9cd95b9914995dd85c99607a1b60448201526064016106b0565b610fba8483611d8e565b935047610fc683611ecb565b610fea610fdb6000546001600160a01b031690565b610fe54784611d8e565b611c90565b600954611001906001600160a01b03168587611d9a565b505b806001600160a01b031684846001600160a01b03167fd8b141f2ea758469013a6478e6e9477d3a7a8527f7ec1f2e045ae15794fc390560405160405180910390a450505050565b6000546001600160a01b031633146110745760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff16158061112d57506001816040516110b8919061225d565b9081526020016040518091039020546000141580156110f55750426001826040516110e3919061225d565b90815260200160405180910390205411155b801561112d57504262015180600183604051611111919061225d565b90815260200160405180910390205461112a91906123a0565b10155b6111495760405162461bcd60e51b81526004016106b0906122ae565b6006546040518391907fce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb14990600090a3600682905561089881611266565b6000546001600160a01b031633146111b05760405162461bcd60e51b81526004016106b090612279565b6111d4816111c66000546001600160a01b031690565b6111cf84611a13565b611d9a565b4780156111f6576111f66111f06000546001600160a01b031690565b82611c90565b600080546040516001600160a01b03909116917f5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a291a25050565b6000546001600160a01b0316331461125a5760405162461bcd60e51b81526004016106b090612279565b6112646000612043565b565b336112796000546001600160a01b031690565b6001600160a01b0316148061129857506002546001600160a01b031633145b6112b45760405162461bcd60e51b81526004016106b0906122da565b60006001826040516112c6919061225d565b9081526040519081900360200190205550565b336112ec6000546001600160a01b031690565b6001600160a01b0316148061130b57506002546001600160a01b031633145b6113275760405162461bcd60e51b81526004016106b0906122da565b61133462015180426123a0565b600182604051611344919061225d565b908152602001604051809103902081905550600181604051611366919061225d565b90815260200160405180910390205481604051611383919061225d565b604051908190038120907ff77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c890600090a350565b6009546000906001906001600160a01b038481169116146113ef57506001600160a01b03831660009081526005602052604090205460ff165b80801561142e5750600b546001600160a01b03808616600090815260046020908152604080832093881683529290522054429161142b916123a0565b11155b949350505050565b6000546001600160a01b031633146114605760405162461bcd60e51b81526004016106b090612279565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114ac5760405162461bcd60e51b81526004016106b090612279565b60408051808201909152601981527f61646a7573744d6178416d6f756e7450657252656365697665000000000000006020820152600054600160a01b900460ff1615806115795750600181604051611504919061225d565b90815260200160405180910390205460001415801561154157504260018260405161152f919061225d565b90815260200160405180910390205411155b80156115795750426201518060018360405161155d919061225d565b90815260200160405180910390205461157691906123a0565b10155b6115955760405162461bcd60e51b81526004016106b0906122ae565b600a546040518391907fd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd90600090a3600a82905561089881611266565b6000546001600160a01b031633146115fc5760405162461bcd60e51b81526004016106b090612279565b600d546001600160a01b031661168d5760405162461bcd60e51b815260206004820152604a60248201527f41424f41543a3a73656e645265776172647341734574683a205468657265206960448201527f73206e6f20726f7574657220646566696e656420746f207377617020746f6b656064820152690dce640ccdee440cae8d60b31b608482015260a4016106b0565b6009546116a2906001600160a01b0316611a13565b8211156117275760405162461bcd60e51b815260206004820152604760248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e20696e207265776172642060648201526673797374656d2160c81b608482015260a4016106b0565b600a5482111561179f5760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e206c696d6974210000000060648201526084016106b0565b6009546117b69082906001600160a01b03166113b6565b6118285760405162461bcd60e51b815260206004820152603b60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774206360448201527f6c61696d206d6f7265207468616e206f6e63652070657220646179000000000060648201526084016106b0565b6001600160a01b0380821660009081526004602090815260408083206009549094168352929052204290554761185d83611ecb565b60006118694783611d8e565b9050600061188260065483611d8290919063ffffffff16565b905061188e8282611d8e565b91506118a56111f06000546001600160a01b031690565b6118af8483611c90565b8082856001600160a01b03167f75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d5343160405160405180910390a45050505050565b6000546001600160a01b031633146119185760405162461bcd60e51b81526004016106b090612279565b6001600160a01b03811661197d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b0565b61198681612043565b50565b3361199c6000546001600160a01b031690565b6001600160a01b031614806119bb57506002546001600160a01b031633145b6119d75760405162461bcd60e51b81526004016106b0906122da565b6000805460ff60a01b1916600160a01b1781556040517f2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e9190a1565b60006001600160a01b038216611a2a575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015611a6957600080fd5b505afa158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa191906121d5565b92915050565b6000546001600160a01b03163314611ad15760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260118152703ab83230ba32a932bbb0b9322a37b5b2b760791b6020820152600054600160a01b900460ff161580611b925750600181604051611b1d919061225d565b908152602001604051809103902054600014158015611b5a575042600182604051611b48919061225d565b90815260200160405180910390205411155b8015611b9257504262015180600183604051611b76919061225d565b908152602001604051809103902054611b8f91906123a0565b10155b611bae5760405162461bcd60e51b81526004016106b0906122ae565b6009546001600160a01b0383811691161415611c325760405162461bcd60e51b815260206004820152603f60248201527f41424f41543a757064617465526577617264546f6b656e3a20596f752063616e60448201527f277420757064617465207468652065786163742073616d6520746f6b656e730060648201526084016106b0565b6009546040516001600160a01b038085169216907fcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d690600090a3600980546001600160a01b0319166001600160a01b03841617905561089881611266565b604080516000808252602082019092526001600160a01b038416908390604051611cba919061225d565b60006040518083038185875af1925050503d8060008114611cf7576040519150601f19603f3d011682016040523d82523d6000602084013e611cfc565b606091505b5050905080611d6a5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106b0565b505050565b6000611d7b82846123da565b9392505050565b6000611d7b82846123b8565b6000611d7b82846123f9565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611df6919061225d565b6000604051808303816000865af19150503d8060008114611e33576040519150601f19603f3d011682016040523d82523d6000602084013e611e38565b606091505b5091509150818015611e62575080511580611e62575080806020019051810190611e6291906120e9565b611ec45760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016106b0565b5050505050565b604080516002808252606082018352600092602083019080368337505060095482519293506001600160a01b031691839150600090611f0c57611f0c612456565b6001600160a01b039283166020918202929092010152600c54825191169082906001908110611f3d57611f3d612456565b6001600160a01b039283166020918202929092010152600954600d5460405163095ea7b360e01b815290831660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015611f9b57600080fd5b505af1158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd391906120e9565b50600d5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061200d90859060009086903090429060040161232f565b600060405180830381600087803b15801561202757600080fd5b505af115801561203b573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156120a557600080fd5b8135611d7b81612482565b600080604083850312156120c357600080fd5b82356120ce81612482565b915060208301356120de81612482565b809150509250929050565b6000602082840312156120fb57600080fd5b81518015158114611d7b57600080fd5b60006020828403121561211d57600080fd5b813567ffffffffffffffff8082111561213557600080fd5b818401915084601f83011261214957600080fd5b81358181111561215b5761215b61246c565b604051601f8201601f19908116603f011681019083821181831017156121835761218361246c565b8160405282815287602084870101111561219c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156121ce57600080fd5b5035919050565b6000602082840312156121e757600080fd5b5051919050565b6000806040838503121561220157600080fd5b8235915060208301356120de81612482565b6000806000806080858703121561222957600080fd5b84359350602085013561223b81612482565b925060408501359150606085013561225281612482565b939692955090935050565b6000825161226f818460208701612410565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271119d5b98dd1a5bdb881a5cc81b1bd8dad95960721b604082015260600190565b60208082526035908201527f6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f776564206040820152743a379031b0b636103a3434b990333ab731ba34b7b760591b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561237f5784516001600160a01b03168352938301939183019160010161235a565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156123b3576123b3612440565b500190565b6000826123d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156123f4576123f4612440565b500290565b60008282101561240b5761240b612440565b500390565b60005b8381101561242b578181015183820152602001612413565b8381111561243a576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461198657600080fdfea26469706673582212208a8357db7b5a9995b3286cb25f9f82a4d73246b308be66e08761528340cf9fbe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0xA PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x2 PUSH1 0x7 SSTORE PUSH5 0x1FAA3B500 PUSH1 0x8 SSTORE PUSH11 0x84595161401484A000000 SWAP1 SSTORE PUSH3 0x15180 PUSH1 0xB SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2651 CODESIZE SUB DUP1 PUSH3 0x2651 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0xB3 SWAP2 PUSH3 0x142 JUMP JUMPDEST PUSH3 0xBE CALLER PUSH3 0xF2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x174 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x24CD DUP1 PUSH3 0x184 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F531156 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC4E977C8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xF4762FD6 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xF98080C0 EQ PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E977C8 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xDE996A6E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xE7B6EBBA EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xEDAE876F EQ PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA617E653 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA617E653 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xB59C6E0E EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xC07A1D4D EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F531156 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA1764595 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xA347511A EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xA607494A EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65947939 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x7EF189F8 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x9850D32B EQ PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65947939 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x70ED0ADA EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B417886 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4B417886 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x5DD53826 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x6469B96E EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126FFB9 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x13EA5D29 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1F8C1D2B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2FA07562 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x204 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x9D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x2213 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x1230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x412 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST PUSH2 0x12D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1482 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EE JUMP JUMPDEST PUSH2 0x15D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x18EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x1989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1A13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x675 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x694 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x36B0B4B73A30B4B732B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x773 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x73B JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x773 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x757 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E277420657175616C2070726576696F7573206D61696E7461696E6572 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x206F72207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x97F JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0x247A43C209C4066973EA0643D726236D3BF70967E8DC6D109B75630F351C8904 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920616C6C6F77656420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x207265636965766520746F6B656E73 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416D6F756E74206F6620626E6220746F2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D2073686F756C642063617272792074686520636F737420746F206164 PUSH1 0x64 DUP3 ADD MSTORE PUSH15 0x642074686520636C61696D61626C65 PUSH1 0x88 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xAFB PUSH2 0xAF5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C90 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x98716C616972F4EF0085DEB59C20F6F6A840219C121AD1F3B5413097F3A10357 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x18DA185B99D951D85CD0DBDCDD PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xC24 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC24 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xC3DC19678FD7390A5C1197DECFAEC52D8A1C63C49F0A51DB570F5FE5040C5F73 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A205468657265206973206E6F2072 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7574657220646566696E656420746F207377617020746F6B656E7320666F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x40CAE8D PUSH1 0xE3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xD3C DUP2 PUSH2 0x1A13 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72652072657761726473207468616E20696E207265776172642073797374656D PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xA SLOAD DUP5 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x72652072657761726473207468616E206C696D697421 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xE36 DUP4 DUP3 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6F7265207468616E206F6E63652070657220646179 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP2 AND EQ PUSH2 0xF6D JUMPI PUSH1 0x0 PUSH2 0xEF7 PUSH1 0x64 PUSH2 0xEF1 PUSH1 0x7 SLOAD DUP9 PUSH2 0x1D6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF05 DUP7 DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3F JUMPI PUSH2 0xF30 PUSH2 0xF2A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0xF3A DUP6 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF5B DUP4 PUSH2 0xF55 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x1D9A JUMP JUMPDEST PUSH2 0xF66 DUP4 DUP7 DUP4 PUSH2 0x1D9A JUMP JUMPDEST POP POP PUSH2 0x1003 JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105093D0550E8E9CD95B9914995DD85C99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xFBA DUP5 DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP4 POP SELFBALANCE PUSH2 0xFC6 DUP4 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0xFEA PUSH2 0xFDB PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFE5 SELFBALANCE DUP5 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1001 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH2 0x1D9A JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD8B141F2EA758469013A6478E6E9477D3A7A8527F7EC1F2E045AE15794FC3905 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x112D JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10B8 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x112D JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xCE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x11D4 DUP2 PUSH2 0x11C6 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x11CF DUP5 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F6 PUSH2 0x11F0 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x1264 PUSH1 0x0 PUSH2 0x2043 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1279 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1298 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST CALLER PUSH2 0x12EC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x130B JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x1334 PUSH3 0x15180 TIMESTAMP PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xF77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x13EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x142E JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x142B SWAP2 PUSH2 0x23A0 JUMP JUMPDEST GT ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x61646A7573744D6178416D6F756E745065725265636569766500000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1579 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1504 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1579 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x155D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1576 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xD07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xA DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2054686572652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F20726F7574657220646566696E656420746F207377617020746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xDCE640CCDEE440CAE8D PUSH1 0xB3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x16A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A13 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E20696E2072657761726420 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x73797374656D21 PUSH1 0xC8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 GT ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E206C696D69742100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x17B6 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D206D6F7265207468616E206F6E636520706572206461790000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE SELFBALANCE PUSH2 0x185D DUP4 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1869 SELFBALANCE DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1882 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1D82 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x188E DUP3 DUP3 PUSH2 0x1D8E JUMP JUMPDEST SWAP2 POP PUSH2 0x18A5 PUSH2 0x11F0 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x18AF DUP5 DUP4 PUSH2 0x1C90 JUMP JUMPDEST DUP1 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x197D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x2043 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x199C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x19BB JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A2A JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3AB83230BA32A932BBB0B9322A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1B92 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1B1D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1B5A JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B48 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B92 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B76 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1B8F SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1C32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A757064617465526577617264546F6B656E3A20596F752063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x277420757064617465207468652065786163742073616D6520746F6B656E7300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 AND SWAP1 PUSH32 0xCB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1CBA SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E62 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1E62 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x1EC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x9 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F0C JUMPI PUSH2 0x1F0C PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xC SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1F3D JUMPI PUSH2 0x1F3D PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x9 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x200D SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x232F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x203B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D7B DUP2 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x2482 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215B PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2183 PUSH2 0x246C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x219C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x223B DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2252 DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x226F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2410 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881A5CC81B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x3A379031B0B636103A3434B990333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x237F JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x235A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23B3 JUMPI PUSH2 0x23B3 PUSH2 0x2440 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23F4 JUMPI PUSH2 0x23F4 PUSH2 0x2440 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x240B JUMPI PUSH2 0x240B PUSH2 0x2440 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x242B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2413 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP4 JUMPI 0xDB PUSH28 0x5A9995B3286CB25F9F82A4D73246B308BE66E08761528340CF9FBE64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "454:9149:9:-:0;;;765:5:10;737:33;;-1:-1:-1;;;;737:33:10;;;1122:2:9;1091:33;;;;1172:1;1141:32;;1215:14;1189:40;;1313:14;1275:52;;1370:6;1334:42;;1383:65;;;-1:-1:-1;;;;;;1383:65:9;;;1406:42;1383:65;;;;1457:98;;;;;;1512:42;1457:98;;;2599:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:5;867:9:0;:23::i;:::-;2409:11:10;:24;;2423:10;-1:-1:-1;;;;;;2409:24:10;;;;;;;2642:12:9;:26;;;;;-1:-1:-1;;;;;2642:26:9;;;;;;;;;;454:9149;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:304:12:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:12;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:12:o;:::-;454:9149:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1906": {
									"entryPoint": null,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_claimTimes_1806": {
									"entryPoint": null,
									"id": 1806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_gasCost_1819": {
									"entryPoint": null,
									"id": 1819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_maxAmountPerReceive_1825": {
									"entryPoint": null,
									"id": 1825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_paidFee_1810": {
									"entryPoint": null,
									"id": 1810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rewardToken_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rewards_1800": {
									"entryPoint": null,
									"id": 1800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_router_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setOwner_102": {
									"entryPoint": 8259,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_timeBetweenClaims_1828": {
									"entryPoint": null,
									"id": 1828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_weth_1831": {
									"entryPoint": null,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adjustMaxAmountPerReceive_2011": {
									"entryPoint": 5250,
									"id": 2011,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canClaim_1991": {
									"entryPoint": 5046,
									"id": 1991,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@changeFee_2078": {
									"entryPoint": 4170,
									"id": 2078,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeGasCost_2118": {
									"entryPoint": 2877,
									"id": 2118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeThirdPartyFee_2098": {
									"entryPoint": 2204,
									"id": 2098,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_2578": {
									"entryPoint": 2520,
									"id": 2578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1290": {
									"entryPoint": 7554,
									"id": 1290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2166": {
									"entryPoint": 4486,
									"id": 2166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalance_1938": {
									"entryPoint": 6675,
									"id": 1938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getEthBalance_1950": {
									"entryPoint": null,
									"id": 1950,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isLockEnabled_2594": {
									"entryPoint": null,
									"id": 2594,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockFunction_2780": {
									"entryPoint": 4710,
									"id": 2780,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@maintainer_2691": {
									"entryPoint": null,
									"id": 2691,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_1275": {
									"entryPoint": 7535,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nativeSwapFee_1813": {
									"entryPoint": null,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4656,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_2897": {
									"entryPoint": 7312,
									"id": 2897,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_2826": {
									"entryPoint": 7578,
									"id": 2826,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendRewardAsEth_2480": {
									"entryPoint": 5586,
									"id": 2480,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendRewards_2354": {
									"entryPoint": 3197,
									"id": 2354,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setMaintainer_2729": {
									"entryPoint": 1634,
									"id": 2729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_2058": {
									"entryPoint": 5174,
									"id": 2058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTimelockEnabled_2742": {
									"entryPoint": 6537,
									"id": 2742,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1260": {
									"entryPoint": 7566,
									"id": 1260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapTokensForEth_2536": {
									"entryPoint": 7883,
									"id": 2536,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@thirdPartyFee_1816": {
									"entryPoint": null,
									"id": 1816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timelock_2598": {
									"entryPoint": null,
									"id": 2598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 6382,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlockFunction_2766": {
									"entryPoint": 4825,
									"id": 2766,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_2045": {
									"entryPoint": 6823,
									"id": 2045,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$727": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IUniswapV2Router02_$1777": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_address": {
									"entryPoint": 8723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1777__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_644b732325e6becb349d3ef887f96da16a07d566dc501e16920dbfee6b7e2970__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d715c6e83422ef01a3bfa75f74ed99fb3911138cf52d99ccda01f4fe20d3c938__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9007,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16109:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:12"
															},
															"nodeType": "YulIf",
															"src": "94:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:12",
														"type": ""
													}
												],
												"src": "14:247:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "353:301:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "399:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "411:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "401:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "401:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "401:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "374:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "383:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "395:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "366:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:32:12"
															},
															"nodeType": "YulIf",
															"src": "363:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "450:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "437:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "428:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "469:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "469:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "509:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "519:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "533:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "548:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "537:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "614:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "589:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "631:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "641:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "311:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "322:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "334:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "342:6:12",
														"type": ""
													}
												],
												"src": "266:388:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:199:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "783:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "795:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "785:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "785:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "758:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "767:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:32:12"
															},
															"nodeType": "YulIf",
															"src": "747:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "808:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "827:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "821:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "812:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "890:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "899:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "902:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "892:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "892:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "892:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "859:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "880:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "873:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "873:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "866:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "866:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "856:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:40:12"
															},
															"nodeType": "YulIf",
															"src": "846:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "915:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "925:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "703:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "714:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													}
												],
												"src": "659:277:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1071:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1046:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1055:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1067:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:32:12"
															},
															"nodeType": "YulIf",
															"src": "1035:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1096:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1122:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1109:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1100:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1166:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1141:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1141:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1181:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1191:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$727",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "991:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1002:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1014:6:12",
														"type": ""
													}
												],
												"src": "941:261:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1304:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1350:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1359:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1362:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1352:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1352:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1352:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1325:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1334:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1321:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1317:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:32:12"
															},
															"nodeType": "YulIf",
															"src": "1314:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1375:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1401:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1388:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1379:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1420:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1470:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Router02_$1777",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:12",
														"type": ""
													}
												],
												"src": "1207:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:842:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1612:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1624:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1614:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1614:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1587:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:32:12"
															},
															"nodeType": "YulIf",
															"src": "1576:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1637:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1664:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:23:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1683:28:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1693:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1687:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1750:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1740:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1740:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1734:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1723:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:14:12"
															},
															"nodeType": "YulIf",
															"src": "1720:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1763:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1777:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1767:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1843:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1852:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1855:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1845:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1845:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1822:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1826:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1818:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1818:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1833:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1814:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1814:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1807:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:35:12"
															},
															"nodeType": "YulIf",
															"src": "1804:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1868:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1891:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1878:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1872:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1917:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1919:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1919:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1919:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1909:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1913:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1906:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:10:12"
															},
															"nodeType": "YulIf",
															"src": "1903:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1948:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1952:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1974:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1988:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1978:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2006:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2052:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2056:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2048:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2048:13:12"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2063:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2044:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2044:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2068:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2040:31:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2073:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2024:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2010:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2136:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2138:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2138:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2095:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2107:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2092:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2115:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2112:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2089:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:46:12"
															},
															"nodeType": "YulIf",
															"src": "2086:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2174:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2178:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2205:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2213:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2198:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2262:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2274:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2264:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2264:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2264:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2239:2:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2243:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2235:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2235:11:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2231:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2253:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2228:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:33:12"
															},
															"nodeType": "YulIf",
															"src": "2225:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2321:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2325:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:11:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2330:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2287:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2357:6:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2353:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2353:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2349:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2349:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2375:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2342:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2386:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2396:6:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1532:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1543:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1555:6:12",
														"type": ""
													}
												],
												"src": "1486:922:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2483:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2538:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2541:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2531:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2531:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2504:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2500:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2500:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2525:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:32:12"
															},
															"nodeType": "YulIf",
															"src": "2493:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2577:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2564:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2449:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2460:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2472:6:12",
														"type": ""
													}
												],
												"src": "2413:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2725:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2734:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2737:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2727:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2727:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2700:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2696:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2696:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2721:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2692:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:12"
															},
															"nodeType": "YulIf",
															"src": "2689:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2766:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2760:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2645:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2656:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2668:6:12",
														"type": ""
													}
												],
												"src": "2598:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2874:228:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2920:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2929:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2932:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2922:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2922:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2922:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2895:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2904:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:32:12"
															},
															"nodeType": "YulIf",
															"src": "2884:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2945:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2968:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2987:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3017:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3028:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3000:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2991:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3041:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3041:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3081:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3091:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2832:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2843:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2855:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2863:6:12",
														"type": ""
													}
												],
												"src": "2787:315:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:404:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3275:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3249:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3258:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3245:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3270:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:33:12"
															},
															"nodeType": "YulIf",
															"src": "3238:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3300:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3323:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3310:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3342:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3372:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3383:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3368:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3355:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3346:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3421:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3396:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3396:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3436:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3446:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3460:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3498:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3483:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3470:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3511:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3543:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3554:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3539:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3526:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3515:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3592:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3567:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3567:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3609:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3619:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3170:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3181:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3193:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3201:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3209:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3217:6:12",
														"type": ""
													}
												],
												"src": "3107:525:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3774:137:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3784:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3804:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3798:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3788:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3846:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3854:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3842:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3842:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3866:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3820:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3882:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3898:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3882:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3750:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3755:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3766:3:12",
														"type": ""
													}
												],
												"src": "3637:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:137:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4065:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4085:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4079:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4069:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4127:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4135:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4142:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4147:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4101:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4163:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4174:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4170:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4163:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4031:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4036:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4047:3:12",
														"type": ""
													}
												],
												"src": "3916:276:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4298:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4308:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4320:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4308:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4350:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4365:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4381:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4386:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4377:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4377:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4390:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4373:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4373:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4267:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4278:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4289:4:12",
														"type": ""
													}
												],
												"src": "4197:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4534:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4544:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4556:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4567:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4544:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4586:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4601:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4617:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4622:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4613:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4613:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4626:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4609:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4609:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4579:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4650:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4661:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4666:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4639:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4639:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4639:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4495:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4506:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4514:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4525:4:12",
														"type": ""
													}
												],
												"src": "4405:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4779:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4789:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4797:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4789:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4831:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4856:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4849:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4849:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4842:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4824:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4748:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:12",
														"type": ""
													}
												],
												"src": "4684:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4991:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5001:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5001:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5043:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5058:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5074:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5079:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5070:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5070:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5083:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5066:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5066:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4960:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4971:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4982:4:12",
														"type": ""
													}
												],
												"src": "4876:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5226:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5236:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5248:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5236:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5278:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5293:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5309:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5314:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5305:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5305:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5318:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5301:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5301:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5289:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1777__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5195:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5206:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5217:4:12",
														"type": ""
													}
												],
												"src": "5098:230:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5507:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5524:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5535:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5558:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5569:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5554:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5554:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5547:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5597:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5608:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5613:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5668:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5679:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5664:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5684:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5702:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5714:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5725:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5702:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5484:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5498:4:12",
														"type": ""
													}
												],
												"src": "5333:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5914:244:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5931:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5924:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5965:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5976:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5961:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5961:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:12",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5954:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5954:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5954:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6004:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6015:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6000:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6020:34:12",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't send mo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5993:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5993:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5993:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6075:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6086:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:18:12"
																	},
																	{
																		"hexValue": "72652072657761726473207468616e206c696d697421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6091:24:12",
																		"type": "",
																		"value": "re rewards than limit!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6064:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6064:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6125:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6137:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6133:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6133:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6125:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5891:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5905:4:12",
														"type": ""
													}
												],
												"src": "5740:418:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6337:242:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6354:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6365:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6347:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6347:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6388:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6399:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6384:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:12",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6377:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6377:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6427:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6438:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6423:18:12"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6443:34:12",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6416:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6498:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6509:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6494:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6494:18:12"
																	},
																	{
																		"hexValue": "20455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6514:22:12",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6487:50:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6487:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6546:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6558:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6569:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6554:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6554:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6546:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6314:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6328:4:12",
														"type": ""
													}
												],
												"src": "6163:416:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6758:237:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6775:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6786:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6768:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6768:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6825:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6848:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6859:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6844:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6844:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20416c726561647920616c6c6f77656420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6864:34:12",
																		"type": "",
																		"value": "ABOAT::claim: Already allowed to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6837:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6837:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6930:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6915:18:12"
																	},
																	{
																		"hexValue": "207265636965766520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6935:17:12",
																		"type": "",
																		"value": " recieve tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6908:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6962:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6974:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6985:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6970:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6962:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_644b732325e6becb349d3ef887f96da16a07d566dc501e16920dbfee6b7e2970__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6735:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6749:4:12",
														"type": ""
													}
												],
												"src": "6584:411:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7174:295:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7191:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7202:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7184:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7184:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7184:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7225:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7236:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7221:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7221:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:12",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7214:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7214:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7264:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7275:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7260:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7280:34:12",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't send mo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7346:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7331:18:12"
																	},
																	{
																		"hexValue": "72652072657761726473207468616e20696e207265776172642073797374656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7351:34:12",
																		"type": "",
																		"value": "re rewards than in reward system"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7324:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7324:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:19:12"
																	},
																	{
																		"hexValue": "21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7423:3:12",
																		"type": "",
																		"value": "!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7395:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7436:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7448:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7459:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7444:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7436:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7151:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7165:4:12",
														"type": ""
													}
												],
												"src": "7000:469:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7648:167:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7665:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7676:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7658:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7699:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7710:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7695:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7695:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7715:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7688:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7688:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7738:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7749:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7734:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7734:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e64526577617264",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7754:19:12",
																		"type": "",
																		"value": "ABOAT::sendReward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7727:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7727:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7783:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7795:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7806:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7791:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7791:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7783:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7625:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7639:4:12",
														"type": ""
													}
												],
												"src": "7474:341:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7994:250:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8011:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8045:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8056:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8041:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8041:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8061:2:12",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8084:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8095:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8080:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8080:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8100:34:12",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8073:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8073:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8155:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8166:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8151:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:18:12"
																	},
																	{
																		"hexValue": "656e64206d6f72652072657761726473207468616e206c696d697421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8171:30:12",
																		"type": "",
																		"value": "end more rewards than limit!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8144:58:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8223:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8234:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8219:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8211:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7971:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7985:4:12",
														"type": ""
													}
												],
												"src": "7820:424:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8423:310:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8440:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8451:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8433:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8474:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8485:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8470:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8470:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8490:2:12",
																		"type": "",
																		"value": "80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8463:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8463:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8513:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8524:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8509:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8529:34:12",
																		"type": "",
																		"value": "ABOAT::setMaintainer: Maintainer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8502:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8584:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8595:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8580:18:12"
																	},
																	{
																		"hexValue": "2063616e277420657175616c2070726576696f7573206d61696e7461696e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8600:34:12",
																		"type": "",
																		"value": " can't equal previous maintainer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8573:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8573:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8655:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8666:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8651:19:12"
																	},
																	{
																		"hexValue": "206f72207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8672:18:12",
																		"type": "",
																		"value": " or zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8644:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8644:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8644:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8700:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8712:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8708:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8700:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8400:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8414:4:12",
														"type": ""
													}
												],
												"src": "8249:484:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8963:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8974:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8979:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8952:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8952:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9002:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9013:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8998:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8998:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9018:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8991:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8991:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9062:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9074:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9070:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9062:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8889:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8903:4:12",
														"type": ""
													}
												],
												"src": "8738:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9273:304:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9290:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9301:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9283:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9283:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9283:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9324:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9335:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9320:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9320:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9340:2:12",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9363:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9374:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9359:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2054686572652069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9379:34:12",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: There i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9352:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9352:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9352:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9434:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9445:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9430:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9430:18:12"
																	},
																	{
																		"hexValue": "73206e6f20726f7574657220646566696e656420746f207377617020746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9450:34:12",
																		"type": "",
																		"value": "s no router defined to swap toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9423:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9423:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9423:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9505:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9516:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9501:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9501:19:12"
																	},
																	{
																		"hexValue": "6e7320666f7220657468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9522:12:12",
																		"type": "",
																		"value": "ns for eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9494:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9494:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9544:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9556:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9567:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9552:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9544:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9250:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9264:4:12",
														"type": ""
													}
												],
												"src": "9099:478:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9756:249:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9773:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9784:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9766:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9766:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9766:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9823:2:12",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9862:34:12",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9835:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9917:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9928:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9913:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9913:18:12"
																	},
																	{
																		"hexValue": "6c61696d206d6f7265207468616e206f6e63652070657220646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9933:29:12",
																		"type": "",
																		"value": "laim more than once per day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9906:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9972:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9984:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9995:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9980:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9972:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9733:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9747:4:12",
														"type": ""
													}
												],
												"src": "9582:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10184:168:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10201:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10212:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10194:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10235:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10246:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10231:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10251:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10224:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10224:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10285:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10270:18:12"
																	},
																	{
																		"hexValue": "46756e6374696f6e206973206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10290:20:12",
																		"type": "",
																		"value": "Function is locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10263:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10263:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10320:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10332:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10343:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10328:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10328:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10320:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10161:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10175:4:12",
														"type": ""
													}
												],
												"src": "10010:342:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10531:243:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10548:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10541:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10541:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10541:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10582:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10593:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10578:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10578:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10598:2:12",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10571:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10571:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10571:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10621:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10632:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10617:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10617:18:12"
																	},
																	{
																		"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10637:34:12",
																		"type": "",
																		"value": "operator: caller is not allowed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10610:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10692:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10703:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10688:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10688:18:12"
																	},
																	{
																		"hexValue": "746f2063616c6c20746869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10708:23:12",
																		"type": "",
																		"value": "to call this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10681:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10681:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10681:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10741:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10753:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10764:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10749:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10741:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10508:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10522:4:12",
														"type": ""
													}
												],
												"src": "10357:417:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10953:298:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10970:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10981:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10963:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10963:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11004:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11015:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11000:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11000:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11020:2:12",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10993:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10993:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10993:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11054:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11039:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a205468657265206973206e6f2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11059:34:12",
																		"type": "",
																		"value": "ABOAT::sendReward: There is no r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11032:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11032:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:18:12"
																	},
																	{
																		"hexValue": "6f7574657220646566696e656420746f207377617020746f6b656e7320666f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11130:34:12",
																		"type": "",
																		"value": "outer defined to swap tokens for"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11185:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11196:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11181:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11181:19:12"
																	},
																	{
																		"hexValue": "20657468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11202:6:12",
																		"type": "",
																		"value": " eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11174:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11218:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11230:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11241:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11226:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11226:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11218:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10930:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10944:4:12",
														"type": ""
													}
												],
												"src": "10779:472:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11430:301:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11447:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11458:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11440:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11440:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11440:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11481:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11492:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11477:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11477:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11497:2:12",
																		"type": "",
																		"value": "71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11470:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11470:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11470:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11520:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11516:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11516:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11536:34:12",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11509:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11591:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11602:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11587:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:18:12"
																	},
																	{
																		"hexValue": "656e64206d6f72652072657761726473207468616e20696e2072657761726420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11607:34:12",
																		"type": "",
																		"value": "end more rewards than in reward "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11580:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11662:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11673:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11658:19:12"
																	},
																	{
																		"hexValue": "73797374656d21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11679:9:12",
																		"type": "",
																		"value": "system!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11651:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11698:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11710:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11721:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11706:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11706:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11698:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11407:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11421:4:12",
														"type": ""
													}
												],
												"src": "11256:475:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11910:253:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11927:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11938:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11920:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11920:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11961:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11972:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11957:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11957:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11977:2:12",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11950:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11950:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11950:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12000:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12011:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11996:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11996:18:12"
																	},
																	{
																		"hexValue": "41424f41543a757064617465526577617264546f6b656e3a20596f752063616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12016:34:12",
																		"type": "",
																		"value": "ABOAT:updateRewardToken: You can"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11989:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11989:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11989:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12071:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12082:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12067:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12067:18:12"
																	},
																	{
																		"hexValue": "277420757064617465207468652065786163742073616d6520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12087:33:12",
																		"type": "",
																		"value": "'t update the exact same tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12060:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12060:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12060:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12130:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12142:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12153:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12138:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12130:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11887:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11901:4:12",
														"type": ""
													}
												],
												"src": "11736:427:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:309:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12359:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12370:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12352:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12352:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12352:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12393:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12404:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12389:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12389:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12409:2:12",
																		"type": "",
																		"value": "79"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12382:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12432:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12443:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12428:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12428:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a636c61696d3a20416d6f756e74206f6620626e6220746f2063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12448:34:12",
																		"type": "",
																		"value": "ABOAT::claim: Amount of bnb to c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12421:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12421:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12503:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12514:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12499:18:12"
																	},
																	{
																		"hexValue": "6c61696d2073686f756c642063617272792074686520636f737420746f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12519:34:12",
																		"type": "",
																		"value": "laim should carry the cost to ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12492:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12492:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12492:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12574:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12585:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12570:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12570:19:12"
																	},
																	{
																		"hexValue": "642074686520636c61696d61626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12591:17:12",
																		"type": "",
																		"value": "d the claimable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12563:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12563:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12563:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12618:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12630:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12626:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12626:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12618:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d715c6e83422ef01a3bfa75f74ed99fb3911138cf52d99ccda01f4fe20d3c938__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12319:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12333:4:12",
														"type": ""
													}
												],
												"src": "12168:483:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12830:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12847:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12858:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12840:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12840:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12840:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12881:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12892:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12877:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12877:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12870:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12870:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12870:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12920:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12931:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12916:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12916:18:12"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12936:34:12",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12991:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13002:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12987:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:18:12"
																	},
																	{
																		"hexValue": "616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13007:15:12",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12980:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12980:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13032:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13044:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13055:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13040:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13040:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13032:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12807:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12821:4:12",
														"type": ""
													}
												],
												"src": "12656:409:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13244:243:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13261:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13254:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13254:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13295:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13306:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13291:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13291:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:2:12",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13284:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13284:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13284:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13334:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13345:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13330:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13330:18:12"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13350:34:12",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't claim m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13323:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13323:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13323:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13416:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13401:18:12"
																	},
																	{
																		"hexValue": "6f7265207468616e206f6e63652070657220646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13421:23:12",
																		"type": "",
																		"value": "ore than once per day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13394:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13394:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13394:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13454:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13466:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13477:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13462:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13454:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13221:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13235:4:12",
														"type": ""
													}
												],
												"src": "13070:417:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13593:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13603:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13615:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13611:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13603:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13645:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13656:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13638:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13638:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13562:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13573:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13584:4:12",
														"type": ""
													}
												],
												"src": "13492:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13945:709:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13955:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13973:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13984:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13969:19:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13959:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14004:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14015:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13997:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13997:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13997:25:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14031:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14041:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14035:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14063:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14074:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14059:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14059:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14079:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14052:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14052:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14052:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14106:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14117:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14102:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14102:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14122:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14095:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14095:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14095:31:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14135:17:12",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "14146:6:12"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "14139:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14161:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14181:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14175:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14175:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14165:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14204:6:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14212:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14197:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14197:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14197:22:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14228:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14239:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14250:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14235:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14235:19:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14228:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14263:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14281:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14289:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14277:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14277:15:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "14267:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14301:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14310:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14305:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14369:146:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14390:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "14405:6:12"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "14399:5:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14399:13:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "14422:3:12",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "14427:1:12",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "14418:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14418:11:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14431:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "14414:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14414:19:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "14395:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14395:39:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14383:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14383:52:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14383:52:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14448:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14459:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14464:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14455:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14455:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14448:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14480:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14494:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14502:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14490:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14490:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14480:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14331:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14334:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14328:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14328:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14342:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14344:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14353:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14356:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14349:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14349:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14344:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14324:3:12",
																"statements": []
															},
															"src": "14320:195:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14524:11:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14532:3:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14524:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14555:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14566:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14551:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14551:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "14575:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14591:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14596:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "14587:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14587:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14600:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "14583:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14583:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14571:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14544:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14544:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14624:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14635:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14620:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14620:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14641:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14613:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14613:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13882:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13893:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13901:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13909:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13917:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13925:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13936:4:12",
														"type": ""
													}
												],
												"src": "13674:980:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14707:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14734:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14736:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14736:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14736:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14723:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14730:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14726:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14726:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14720:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:13:12"
															},
															"nodeType": "YulIf",
															"src": "14717:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14765:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14776:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14779:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14772:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14765:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14690:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14693:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14699:3:12",
														"type": ""
													}
												],
												"src": "14659:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14838:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14869:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14890:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14897:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14902:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14893:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14893:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14883:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14883:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14883:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14934:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14937:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14927:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14927:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14927:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14962:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14965:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14955:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14955:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14955:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14858:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14851:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14851:9:12"
															},
															"nodeType": "YulIf",
															"src": "14848:132:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14989:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14998:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15001:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14994:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14989:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14823:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14826:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14832:1:12",
														"type": ""
													}
												],
												"src": "14792:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15066:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15125:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15127:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15127:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15127:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15097:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15090:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15090:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15083:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15083:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15105:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15116:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15112:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15112:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15120:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15108:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15108:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15102:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15102:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15079:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15079:45:12"
															},
															"nodeType": "YulIf",
															"src": "15076:71:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15156:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15171:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15174:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15167:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15167:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15156:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15045:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15048:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15054:7:12",
														"type": ""
													}
												],
												"src": "15014:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15236:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15258:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15260:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15260:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15260:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15252:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15255:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15249:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15249:8:12"
															},
															"nodeType": "YulIf",
															"src": "15246:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15289:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15301:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15304:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15297:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15297:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15289:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15218:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15221:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15227:4:12",
														"type": ""
													}
												],
												"src": "15187:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15370:205:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15380:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15389:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15384:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15449:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15474:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15479:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15470:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15470:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15493:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15498:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15489:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15489:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15483:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15483:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15463:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15463:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15463:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15410:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15413:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15407:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15421:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15423:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15432:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15435:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15428:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15428:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15423:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15403:3:12",
																"statements": []
															},
															"src": "15399:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15538:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15551:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15556:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15547:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15547:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15565:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15540:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15540:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15540:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15527:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15530:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15524:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15524:13:12"
															},
															"nodeType": "YulIf",
															"src": "15521:48:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15348:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15353:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15358:6:12",
														"type": ""
													}
												],
												"src": "15317:258:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15612:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15636:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15641:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15632:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15622:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15622:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15669:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15672:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15662:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15662:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15662:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15693:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15696:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15686:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15686:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15686:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15580:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15744:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15761:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15768:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15773:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15764:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15764:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15754:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15754:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15754:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15801:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15804:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15794:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15794:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15794:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15825:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15828:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15818:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15818:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15818:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15712:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15876:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15893:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15900:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15905:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15896:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15896:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15886:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15886:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15886:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15933:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15936:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15926:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15926:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15926:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15957:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15960:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15950:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15950:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15844:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16021:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16085:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16094:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16097:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16087:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16087:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16087:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16044:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16055:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16070:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16075:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16066:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16066:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16079:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16062:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16062:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16051:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16051:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16041:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16041:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16034:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16034:50:12"
															},
															"nodeType": "YulIf",
															"src": "16031:70:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16010:5:12",
														"type": ""
													}
												],
												"src": "15976:131:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$727(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IUniswapV2Router02_$1777(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1777__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't send mo\")\n        mstore(add(headStart, 96), \"re rewards than limit!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransferETH:\")\n        mstore(add(headStart, 96), \" ETH transfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_644b732325e6becb349d3ef887f96da16a07d566dc501e16920dbfee6b7e2970__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ABOAT::claim: Already allowed to\")\n        mstore(add(headStart, 96), \" recieve tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't send mo\")\n        mstore(add(headStart, 96), \"re rewards than in reward system\")\n        mstore(add(headStart, 128), \"!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"ABOAT::sendReward\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't s\")\n        mstore(add(headStart, 96), \"end more rewards than limit!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"ABOAT::setMaintainer: Maintainer\")\n        mstore(add(headStart, 96), \" can't equal previous maintainer\")\n        mstore(add(headStart, 128), \" or zero address\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: There i\")\n        mstore(add(headStart, 96), \"s no router defined to swap toke\")\n        mstore(add(headStart, 128), \"ns for eth\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't c\")\n        mstore(add(headStart, 96), \"laim more than once per day\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Function is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"operator: caller is not allowed \")\n        mstore(add(headStart, 96), \"to call this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: There is no r\")\n        mstore(add(headStart, 96), \"outer defined to swap tokens for\")\n        mstore(add(headStart, 128), \" eth\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't s\")\n        mstore(add(headStart, 96), \"end more rewards than in reward \")\n        mstore(add(headStart, 128), \"system!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ABOAT:updateRewardToken: You can\")\n        mstore(add(headStart, 96), \"'t update the exact same tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d715c6e83422ef01a3bfa75f74ed99fb3911138cf52d99ccda01f4fe20d3c938__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 79)\n        mstore(add(headStart, 64), \"ABOAT::claim: Amount of bnb to c\")\n        mstore(add(headStart, 96), \"laim should carry the cost to ad\")\n        mstore(add(headStart, 128), \"d the claimable\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't claim m\")\n        mstore(add(headStart, 96), \"ore than once per day\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101fd5760003560e01c80639f5311561161010d578063c4e977c8116100a0578063f2fde38b1161006f578063f2fde38b146105b5578063f4762fd6146105d5578063f8b2cb4f146105ea578063f8cf31cb1461060a578063f98080c01461062a57600080fd5b8063c4e977c81461053f578063de996a6e14610555578063e7b6ebba14610575578063edae876f1461059557600080fd5b8063a617e653116100dc578063a617e653146104c9578063b59c6e0e146104e9578063c07a1d4d14610509578063c0d786551461051f57600080fd5b80639f53115614610448578063a176459514610468578063a347511a14610488578063a607494a146104a957600080fd5b80636594793911610190578063715018a61161015f578063715018a61461039d5780637d6dfb7e146103b25780637ef189f8146103e25780638da5cb5b146103f85780639850d32b1461042a57600080fd5b8063659479391461032a5780636a1db1bf1461034a5780636ff1c9bc1461036a57806370ed0ada1461038a57600080fd5b80634b417886116101cc5780634b417886146102b45780634e71d92d146102ec5780635dd53826146102f45780636469b96e1461030a57600080fd5b80630126ffb91461020957806313ea5d29146102325780631f8c1d2b146102545780632fa075621461027457600080fd5b3661020457005b600080fd5b34801561021557600080fd5b5061021f600b5481565b6040519081526020015b60405180910390f35b34801561023e57600080fd5b5061025261024d366004612093565b610662565b005b34801561026057600080fd5b5061025261026f3660046121bc565b61089c565b34801561028057600080fd5b506102a461028f366004612093565b60056020526000908152604090205460ff1681565b6040519015158152602001610229565b3480156102c057600080fd5b5061021f6102cf3660046120b0565b600460209081526000928352604080842090915290825290205481565b6102526109d8565b34801561030057600080fd5b5061021f600a5481565b34801561031657600080fd5b506102526103253660046121bc565b610b3d565b34801561033657600080fd5b50610252610345366004612213565b610c7d565b34801561035657600080fd5b506102526103653660046121bc565b61104a565b34801561037657600080fd5b50610252610385366004612093565b611186565b34801561039657600080fd5b504761021f565b3480156103a957600080fd5b50610252611230565b3480156103be57600080fd5b506102a46103cd366004612093565b60036020526000908152604090205460ff1681565b3480156103ee57600080fd5b5061021f60085481565b34801561040457600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610229565b34801561043657600080fd5b506002546001600160a01b0316610412565b34801561045457600080fd5b5061025261046336600461210b565b611266565b34801561047457600080fd5b50600c54610412906001600160a01b031681565b34801561049457600080fd5b506000546102a490600160a01b900460ff1681565b3480156104b557600080fd5b506102526104c436600461210b565b6112d9565b3480156104d557600080fd5b506102a46104e43660046120b0565b6113b6565b3480156104f557600080fd5b50600954610412906001600160a01b031681565b34801561051557600080fd5b5061021f60065481565b34801561052b57600080fd5b5061025261053a366004612093565b611436565b34801561054b57600080fd5b5061021f60075481565b34801561056157600080fd5b506102526105703660046121bc565b611482565b34801561058157600080fd5b506102526105903660046121ee565b6115d2565b3480156105a157600080fd5b50600d54610412906001600160a01b031681565b3480156105c157600080fd5b506102526105d0366004612093565b6118ee565b3480156105e157600080fd5b50610252611989565b3480156105f657600080fd5b5061021f610605366004612093565b611a13565b34801561061657600080fd5b50610252610625366004612093565b611aa7565b34801561063657600080fd5b5061021f61064536600461210b565b805160208183018101805160018252928201919093012091525481565b336106756000546001600160a01b031690565b6001600160a01b0316148061069457506002546001600160a01b031633145b6106b95760405162461bcd60e51b81526004016106b0906122da565b60405180910390fd5b60408051808201909152600a81526936b0b4b73a30b4b732b960b11b6020820152600054600160a01b900460ff16158061077357506001816040516106fe919061225d565b90815260200160405180910390205460001415801561073b575042600182604051610729919061225d565b90815260200160405180910390205411155b801561077357504262015180600183604051610757919061225d565b90815260200160405180910390205461077091906123a0565b10155b61078f5760405162461bcd60e51b81526004016106b0906122ae565b6002546001600160a01b038381169116148015906107b557506001600160a01b03821615155b6108405760405162461bcd60e51b815260206004820152605060248201527f41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e657260448201527f2063616e277420657175616c2070726576696f7573206d61696e7461696e657260648201526f206f72207a65726f206164647265737360801b608482015260a4016106b0565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf0190600090a35061089881611266565b5050565b6000546001600160a01b031633146108c65760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff16158061097f575060018160405161090a919061225d565b908152602001604051809103902054600014158015610947575042600182604051610935919061225d565b90815260200160405180910390205411155b801561097f57504262015180600183604051610963919061225d565b90815260200160405180910390205461097c91906123a0565b10155b61099b5760405162461bcd60e51b81526004016106b0906122ae565b6007546040518391907f247a43c209c4066973ea0643d726236d3bf70967e8dc6d109b75630f351c890490600090a3600782905561089881611266565b3360009081526005602052604090205460ff1615610a505760405162461bcd60e51b815260206004820152602f60248201527f41424f41543a3a636c61696d3a20416c726561647920616c6c6f77656420746f60448201526e207265636965766520746f6b656e7360881b60648201526084016106b0565b600854341015610ae05760405162461bcd60e51b815260206004820152604f60248201527f41424f41543a3a636c61696d3a20416d6f756e74206f6620626e6220746f206360448201527f6c61696d2073686f756c642063617272792074686520636f737420746f20616460648201526e642074686520636c61696d61626c6560881b608482015260a4016106b0565b610afb610af56000546001600160a01b031690565b34611c90565b33600081815260056020526040808220805460ff19166001179055517f98716c616972f4ef0085deb59c20f6f6a840219c121ad1f3b5413097f3a103579190a2565b6000546001600160a01b03163314610b675760405162461bcd60e51b81526004016106b090612279565b60408051808201909152600d81526c18da185b99d951d85cd0dbdcdd609a1b6020820152600054600160a01b900460ff161580610c245750600181604051610baf919061225d565b908152602001604051809103902054600014158015610bec575042600182604051610bda919061225d565b90815260200160405180910390205411155b8015610c2457504262015180600183604051610c08919061225d565b908152602001604051809103902054610c2191906123a0565b10155b610c405760405162461bcd60e51b81526004016106b0906122ae565b6008546040518391907fc3dc19678fd7390a5c1197decfaec52d8a1c63c49f0a51db570f5fe5040c5f7390600090a3600882905561089881611266565b6000546001600160a01b03163314610ca75760405162461bcd60e51b81526004016106b090612279565b600d546001600160a01b0316610d335760405162461bcd60e51b8152602060048201526044602482018190527f41424f41543a3a73656e645265776172643a205468657265206973206e6f2072908201527f6f7574657220646566696e656420746f207377617020746f6b656e7320666f72606482015263040cae8d60e31b608482015260a4016106b0565b610d3c81611a13565b841115610dbb5760405162461bcd60e51b815260206004820152604160248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527f72652072657761726473207468616e20696e207265776172642073797374656d6064820152602160f81b608482015260a4016106b0565b600a54841115610e2c5760405162461bcd60e51b815260206004820152603660248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527572652072657761726473207468616e206c696d69742160501b60648201526084016106b0565b610e3683826113b6565b610ea05760405162461bcd60e51b815260206004820152603560248201527f41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6044820152746f7265207468616e206f6e6365207065722064617960581b60648201526084016106b0565b6001600160a01b038084166000908152600460209081526040808320858516808552925290912042905560095490911614610f6d576000610ef76064610ef160075488611d6f90919063ffffffff16565b90611d82565b90506000610f058683611d8e565b90506001600160a01b038316610f3f57610f30610f2a6000546001600160a01b031690565b83611c90565b610f3a8582611c90565b610f66565b610f5b83610f556000546001600160a01b031690565b84611d9a565b610f66838683611d9a565b5050611003565b818411610fb05760405162461bcd60e51b8152602060048201526011602482015270105093d0550e8e9cd95b9914995dd85c99607a1b60448201526064016106b0565b610fba8483611d8e565b935047610fc683611ecb565b610fea610fdb6000546001600160a01b031690565b610fe54784611d8e565b611c90565b600954611001906001600160a01b03168587611d9a565b505b806001600160a01b031684846001600160a01b03167fd8b141f2ea758469013a6478e6e9477d3a7a8527f7ec1f2e045ae15794fc390560405160405180910390a450505050565b6000546001600160a01b031633146110745760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff16158061112d57506001816040516110b8919061225d565b9081526020016040518091039020546000141580156110f55750426001826040516110e3919061225d565b90815260200160405180910390205411155b801561112d57504262015180600183604051611111919061225d565b90815260200160405180910390205461112a91906123a0565b10155b6111495760405162461bcd60e51b81526004016106b0906122ae565b6006546040518391907fce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb14990600090a3600682905561089881611266565b6000546001600160a01b031633146111b05760405162461bcd60e51b81526004016106b090612279565b6111d4816111c66000546001600160a01b031690565b6111cf84611a13565b611d9a565b4780156111f6576111f66111f06000546001600160a01b031690565b82611c90565b600080546040516001600160a01b03909116917f5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a291a25050565b6000546001600160a01b0316331461125a5760405162461bcd60e51b81526004016106b090612279565b6112646000612043565b565b336112796000546001600160a01b031690565b6001600160a01b0316148061129857506002546001600160a01b031633145b6112b45760405162461bcd60e51b81526004016106b0906122da565b60006001826040516112c6919061225d565b9081526040519081900360200190205550565b336112ec6000546001600160a01b031690565b6001600160a01b0316148061130b57506002546001600160a01b031633145b6113275760405162461bcd60e51b81526004016106b0906122da565b61133462015180426123a0565b600182604051611344919061225d565b908152602001604051809103902081905550600181604051611366919061225d565b90815260200160405180910390205481604051611383919061225d565b604051908190038120907ff77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c890600090a350565b6009546000906001906001600160a01b038481169116146113ef57506001600160a01b03831660009081526005602052604090205460ff165b80801561142e5750600b546001600160a01b03808616600090815260046020908152604080832093881683529290522054429161142b916123a0565b11155b949350505050565b6000546001600160a01b031633146114605760405162461bcd60e51b81526004016106b090612279565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146114ac5760405162461bcd60e51b81526004016106b090612279565b60408051808201909152601981527f61646a7573744d6178416d6f756e7450657252656365697665000000000000006020820152600054600160a01b900460ff1615806115795750600181604051611504919061225d565b90815260200160405180910390205460001415801561154157504260018260405161152f919061225d565b90815260200160405180910390205411155b80156115795750426201518060018360405161155d919061225d565b90815260200160405180910390205461157691906123a0565b10155b6115955760405162461bcd60e51b81526004016106b0906122ae565b600a546040518391907fd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd90600090a3600a82905561089881611266565b6000546001600160a01b031633146115fc5760405162461bcd60e51b81526004016106b090612279565b600d546001600160a01b031661168d5760405162461bcd60e51b815260206004820152604a60248201527f41424f41543a3a73656e645265776172647341734574683a205468657265206960448201527f73206e6f20726f7574657220646566696e656420746f207377617020746f6b656064820152690dce640ccdee440cae8d60b31b608482015260a4016106b0565b6009546116a2906001600160a01b0316611a13565b8211156117275760405162461bcd60e51b815260206004820152604760248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e20696e207265776172642060648201526673797374656d2160c81b608482015260a4016106b0565b600a5482111561179f5760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e206c696d6974210000000060648201526084016106b0565b6009546117b69082906001600160a01b03166113b6565b6118285760405162461bcd60e51b815260206004820152603b60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774206360448201527f6c61696d206d6f7265207468616e206f6e63652070657220646179000000000060648201526084016106b0565b6001600160a01b0380821660009081526004602090815260408083206009549094168352929052204290554761185d83611ecb565b60006118694783611d8e565b9050600061188260065483611d8290919063ffffffff16565b905061188e8282611d8e565b91506118a56111f06000546001600160a01b031690565b6118af8483611c90565b8082856001600160a01b03167f75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d5343160405160405180910390a45050505050565b6000546001600160a01b031633146119185760405162461bcd60e51b81526004016106b090612279565b6001600160a01b03811661197d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b0565b61198681612043565b50565b3361199c6000546001600160a01b031690565b6001600160a01b031614806119bb57506002546001600160a01b031633145b6119d75760405162461bcd60e51b81526004016106b0906122da565b6000805460ff60a01b1916600160a01b1781556040517f2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e9190a1565b60006001600160a01b038216611a2a575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015611a6957600080fd5b505afa158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa191906121d5565b92915050565b6000546001600160a01b03163314611ad15760405162461bcd60e51b81526004016106b090612279565b6040805180820190915260118152703ab83230ba32a932bbb0b9322a37b5b2b760791b6020820152600054600160a01b900460ff161580611b925750600181604051611b1d919061225d565b908152602001604051809103902054600014158015611b5a575042600182604051611b48919061225d565b90815260200160405180910390205411155b8015611b9257504262015180600183604051611b76919061225d565b908152602001604051809103902054611b8f91906123a0565b10155b611bae5760405162461bcd60e51b81526004016106b0906122ae565b6009546001600160a01b0383811691161415611c325760405162461bcd60e51b815260206004820152603f60248201527f41424f41543a757064617465526577617264546f6b656e3a20596f752063616e60448201527f277420757064617465207468652065786163742073616d6520746f6b656e730060648201526084016106b0565b6009546040516001600160a01b038085169216907fcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d690600090a3600980546001600160a01b0319166001600160a01b03841617905561089881611266565b604080516000808252602082019092526001600160a01b038416908390604051611cba919061225d565b60006040518083038185875af1925050503d8060008114611cf7576040519150601f19603f3d011682016040523d82523d6000602084013e611cfc565b606091505b5050905080611d6a5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106b0565b505050565b6000611d7b82846123da565b9392505050565b6000611d7b82846123b8565b6000611d7b82846123f9565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611df6919061225d565b6000604051808303816000865af19150503d8060008114611e33576040519150601f19603f3d011682016040523d82523d6000602084013e611e38565b606091505b5091509150818015611e62575080511580611e62575080806020019051810190611e6291906120e9565b611ec45760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016106b0565b5050505050565b604080516002808252606082018352600092602083019080368337505060095482519293506001600160a01b031691839150600090611f0c57611f0c612456565b6001600160a01b039283166020918202929092010152600c54825191169082906001908110611f3d57611f3d612456565b6001600160a01b039283166020918202929092010152600954600d5460405163095ea7b360e01b815290831660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015611f9b57600080fd5b505af1158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd391906120e9565b50600d5460405163791ac94760e01b81526001600160a01b039091169063791ac9479061200d90859060009086903090429060040161232f565b600060405180830381600087803b15801561202757600080fd5b505af115801561203b573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156120a557600080fd5b8135611d7b81612482565b600080604083850312156120c357600080fd5b82356120ce81612482565b915060208301356120de81612482565b809150509250929050565b6000602082840312156120fb57600080fd5b81518015158114611d7b57600080fd5b60006020828403121561211d57600080fd5b813567ffffffffffffffff8082111561213557600080fd5b818401915084601f83011261214957600080fd5b81358181111561215b5761215b61246c565b604051601f8201601f19908116603f011681019083821181831017156121835761218361246c565b8160405282815287602084870101111561219c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156121ce57600080fd5b5035919050565b6000602082840312156121e757600080fd5b5051919050565b6000806040838503121561220157600080fd5b8235915060208301356120de81612482565b6000806000806080858703121561222957600080fd5b84359350602085013561223b81612482565b925060408501359150606085013561225281612482565b939692955090935050565b6000825161226f818460208701612410565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271119d5b98dd1a5bdb881a5cc81b1bd8dad95960721b604082015260600190565b60208082526035908201527f6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f776564206040820152743a379031b0b636103a3434b990333ab731ba34b7b760591b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561237f5784516001600160a01b03168352938301939183019160010161235a565b50506001600160a01b03969096166060850152505050608001529392505050565b600082198211156123b3576123b3612440565b500190565b6000826123d557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156123f4576123f4612440565b500290565b60008282101561240b5761240b612440565b500390565b60005b8381101561242b578181015183820152602001612413565b8381111561243a576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461198657600080fdfea26469706673582212208a8357db7b5a9995b3286cb25f9f82a4d73246b308be66e08761528340cf9fbe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F531156 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC4E977C8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xF4762FD6 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xF98080C0 EQ PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4E977C8 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xDE996A6E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xE7B6EBBA EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xEDAE876F EQ PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA617E653 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA617E653 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xB59C6E0E EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xC07A1D4D EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9F531156 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA1764595 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xA347511A EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xA607494A EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65947939 GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x7EF189F8 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x9850D32B EQ PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65947939 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x70ED0ADA EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B417886 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x4B417886 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x5DD53826 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x6469B96E EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126FFB9 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x13EA5D29 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1F8C1D2B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2FA07562 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x204 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x252 PUSH2 0x9D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0xB3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x2213 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x1230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x412 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST PUSH2 0x1266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x2A4 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x4C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST PUSH2 0x12D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x1482 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EE JUMP JUMPDEST PUSH2 0x15D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x412 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x18EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x1989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x605 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1A13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x210B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x675 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x694 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x36B0B4B73A30B4B732B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x773 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FE SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x73B JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x773 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x757 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7B5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x840 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E277420657175616C2070726576696F7573206D61696E7461696E6572 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x206F72207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x97F JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0x247A43C209C4066973EA0643D726236D3BF70967E8DC6D109B75630F351C8904 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416C726561647920616C6C6F77656420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x207265636965766520746F6B656E73 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A636C61696D3A20416D6F756E74206F6620626E6220746F2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D2073686F756C642063617272792074686520636F737420746F206164 PUSH1 0x64 DUP3 ADD MSTORE PUSH15 0x642074686520636C61696D61626C65 PUSH1 0x88 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xAFB PUSH2 0xAF5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x1C90 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x98716C616972F4EF0085DEB59C20F6F6A840219C121AD1F3B5413097F3A10357 SWAP2 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x18DA185B99D951D85CD0DBDCDD PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xC24 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC24 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xC3DC19678FD7390A5C1197DECFAEC52D8A1C63C49F0A51DB570F5FE5040C5F73 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A205468657265206973206E6F2072 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7574657220646566696E656420746F207377617020746F6B656E7320666F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x40CAE8D PUSH1 0xE3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xD3C DUP2 PUSH2 0x1A13 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72652072657761726473207468616E20696E207265776172642073797374656D PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xA SLOAD DUP5 GT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x72652072657761726473207468616E206C696D697421 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xE36 DUP4 DUP3 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0xEA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6F7265207468616E206F6E63652070657220646179 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP2 AND EQ PUSH2 0xF6D JUMPI PUSH1 0x0 PUSH2 0xEF7 PUSH1 0x64 PUSH2 0xEF1 PUSH1 0x7 SLOAD DUP9 PUSH2 0x1D6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF05 DUP7 DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF3F JUMPI PUSH2 0xF30 PUSH2 0xF2A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0xF3A DUP6 DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH2 0xF66 JUMP JUMPDEST PUSH2 0xF5B DUP4 PUSH2 0xF55 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 PUSH2 0x1D9A JUMP JUMPDEST PUSH2 0xF66 DUP4 DUP7 DUP4 PUSH2 0x1D9A JUMP JUMPDEST POP POP PUSH2 0x1003 JUMP JUMPDEST DUP2 DUP5 GT PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105093D0550E8E9CD95B9914995DD85C99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0xFBA DUP5 DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP4 POP SELFBALANCE PUSH2 0xFC6 DUP4 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0xFEA PUSH2 0xFDB PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xFE5 SELFBALANCE DUP5 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1001 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH2 0x1D9A JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD8B141F2EA758469013A6478E6E9477D3A7A8527F7EC1F2E045AE15794FC3905 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x112D JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x10B8 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x112D JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1111 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xCE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x11D4 DUP2 PUSH2 0x11C6 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x11CF DUP5 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x1D9A JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F6 PUSH2 0x11F0 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2 SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0x1264 PUSH1 0x0 PUSH2 0x2043 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1279 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1298 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST CALLER PUSH2 0x12EC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x130B JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x1334 PUSH3 0x15180 TIMESTAMP PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xF77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x13EF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x142E JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x142B SWAP2 PUSH2 0x23A0 JUMP JUMPDEST GT ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x61646A7573744D6178416D6F756E745065725265636569766500000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1579 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1504 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1541 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1579 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x155D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1576 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xD07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xA DUP3 SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2054686572652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F20726F7574657220646566696E656420746F207377617020746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xDCE640CCDEE440CAE8D PUSH1 0xB3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x16A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A13 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E20696E2072657761726420 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x73797374656D21 PUSH1 0xC8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 GT ISZERO PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E206C696D69742100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x17B6 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1828 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D206D6F7265207468616E206F6E636520706572206461790000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE SELFBALANCE PUSH2 0x185D DUP4 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1869 SELFBALANCE DUP4 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1882 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1D82 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x188E DUP3 DUP3 PUSH2 0x1D8E JUMP JUMPDEST SWAP2 POP PUSH2 0x18A5 PUSH2 0x11F0 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x18AF DUP5 DUP4 PUSH2 0x1C90 JUMP JUMPDEST DUP1 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x197D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x2043 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x199C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x19BB JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A2A JUMPI POP SELFBALANCE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA1 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3AB83230BA32A932BBB0B9322A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1B92 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1B1D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x1B5A JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B48 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1B92 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B76 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1B8F SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B0 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1C32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A757064617465526577617264546F6B656E3A20596F752063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x277420757064617465207468652065786163742073616D6520746F6B656E7300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 AND SWAP1 PUSH32 0xCB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x898 DUP2 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1CBA SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7B DUP3 DUP5 PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E38 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1E62 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1E62 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x1EC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x9 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F0C JUMPI PUSH2 0x1F0C PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xC SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1F3D JUMPI PUSH2 0x1F3D PUSH2 0x2456 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x9 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD3 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x200D SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x232F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x203B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D7B DUP2 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20CE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x2482 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x211D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215B PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2183 PUSH2 0x246C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x219C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20DE DUP2 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x223B DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x2252 DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x226F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2410 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881A5CC81B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x3A379031B0B636103A3434B990333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x237F JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x235A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x23B3 JUMPI PUSH2 0x23B3 PUSH2 0x2440 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x23F4 JUMPI PUSH2 0x23F4 PUSH2 0x2440 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x240B JUMPI PUSH2 0x240B PUSH2 0x2440 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x242B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2413 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP4 JUMPI 0xDB PUSH28 0x5A9995B3286CB25F9F82A4D73246B308BE66E08761528340CF9FBE64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "454:9149:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:42;;;;;;;;;;;;;;;;;;;13638:25:12;;;13626:2;13611:18;1334:42:9;;;;;;;;3191:426:10;;;;;;;;;;-1:-1:-1;3191:426:10;;;;;:::i;:::-;;:::i;:::-;;4916:182:9;;;;;;;;;;-1:-1:-1;4916:182:9;;;;;:::i;:::-;;:::i;1044:40::-;;;;;;;;;;-1:-1:-1;1044:40:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4849:14:12;;4842:22;4824:41;;4812:2;4797:18;1044:40:9;4684:187:12;941:66:9;;;;;;;;;;-1:-1:-1;941:66:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;9203:397;;;:::i;1275:52::-;;;;;;;;;;;;;;;;5106:176;;;;;;;;;;-1:-1:-1;5106:176:9;;;;;:::i;:::-;;:::i;5977:1570::-;;;;;;;;;;-1:-1:-1;5977:1570:9;;;;;:::i;:::-;;:::i;4746:162::-;;;;;;;;;;-1:-1:-1;4746:162:9;;;;;:::i;:::-;;:::i;5290:351::-;;;;;;;;;;-1:-1:-1;5290:351:9;;;;;:::i;:::-;;:::i;3278:102::-;;;;;;;;;;-1:-1:-1;3351:21:9;3278:102;;1605:92:0;;;;;;;;;;;;;:::i;894:40:9:-;;;;;;;;;;-1:-1:-1;894:40:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;1189;;;;;;;;;;;;;;;;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;;-1:-1:-1;;;;;4361:32:12;;;4343:51;;4331:2;4316:18;973:85:0;4197:203:12;2770:87:10;;;;;;;;;;-1:-1:-1;2839:11:10;;-1:-1:-1;;;;;2839:11:10;2770:87;;4317:104;;;;;;;;;;-1:-1:-1;4317:104:10;;;;;:::i;:::-;;:::i;1383:65:9:-;;;;;;;;;;-1:-1:-1;1383:65:9;;;;-1:-1:-1;;;;;1383:65:9;;;737:33:10;;;;;;;;;;-1:-1:-1;737:33:10;;;;-1:-1:-1;;;737:33:10;;;;;;4100:184;;;;;;;;;;-1:-1:-1;4100:184:10;;;;;:::i;:::-;;:::i;3388:328:9:-;;;;;;;;;;-1:-1:-1;3388:328:9;;;;;:::i;:::-;;:::i;1242:26::-;;;;;;;;;;-1:-1:-1;1242:26:9;;;;-1:-1:-1;;;;;1242:26:9;;;1091:33;;;;;;;;;;;;;;;;4640:98;;;;;;;;;;-1:-1:-1;4640:98:9;;;;;:::i;:::-;;:::i;1141:32::-;;;;;;;;;;;;;;;;4053:233;;;;;;;;;;-1:-1:-1;4053:233:9;;;;;:::i;:::-;;:::i;7565:1059::-;;;;;;;;;;-1:-1:-1;7565:1059:9;;;;;:::i;:::-;;:::i;1457:98::-;;;;;;;;;;-1:-1:-1;1457:98:9;;;;-1:-1:-1;;;;;1457:98:9;;;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;3627:124:10:-;;;;;;;;;;;;;:::i;3052:218:9:-;;;;;;;;;;-1:-1:-1;3052:218:9;;;;;:::i;:::-;;:::i;4298:330::-;;;;;;;;;;-1:-1:-1;4298:330:9;;;;;:::i;:::-;;:::i;776:42:10:-;;;;;;;;;;-1:-1:-1;776:42:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:426;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:10;-1:-1:-1;;;;;2253:21:10;;:50;;;-1:-1:-1;2278:11:10;;-1:-1:-1;;;;;2278:11:10;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:10;;;;;;;:::i;:::-;;;;;;;;;1945:243:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:10::1;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;3324:11:::2;::::0;-1:-1:-1;;;;;3306:29:10;;::::2;3324:11:::0;::::2;3306:29;::::0;::::2;::::0;:61:::2;;-1:-1:-1::0;;;;;;3339:28:10;::::2;::::0;::::2;3306:61;3298:155;;;::::0;-1:-1:-1;;;3298:155:10;;8451:2:12;3298:155:10::2;::::0;::::2;8433:21:12::0;8490:2;8470:18;;;8463:30;8529:34;8509:18;;;8502:62;8600:34;8580:18;;;8573:62;-1:-1:-1;;;8651:19:12;;;8644:47;8708:19;;3298:155:10::2;8249:484:12::0;3298:155:10::2;3492:11;::::0;;-1:-1:-1;;;;;3513:28:10;;::::2;-1:-1:-1::0;;;;;;3513:28:10;::::2;::::0;::::2;::::0;;;3556:54:::2;::::0;3492:11;::::2;::::0;3513:28;3492:11;;3556:54:::2;::::0;3463:26:::2;::::0;3556:54:::2;3288:329;2164:17:::1;2177:3;2164:12;:17::i;:::-;2371:1;3191:426:::0;:::o;4916:182:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:10::1;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;5035:13:9::2;::::0;5014:43:::2;::::0;5050:6;;5035:13;5014:43:::2;::::0;;;::::2;5068:13;:22:::0;;;2164:17:10::1;2177:3:::0;2164:12:::1;:17::i;9203:397:9:-:0;9264:10;9255:20;;;;:8;:20;;;;;;;;9254:21;9246:81;;;;-1:-1:-1;;;9246:81:9;;6786:2:12;9246:81:9;;;6768:21:12;6825:2;6805:18;;;6798:30;6864:34;6844:18;;;6837:62;-1:-1:-1;;;6915:18:12;;;6908:45;6970:19;;9246:81:9;6584:411:12;9246:81:9;9359:8;;9346:9;:21;;9338:113;;;;-1:-1:-1;;;9338:113:9;;12370:2:12;9338:113:9;;;12352:21:12;12409:2;12389:18;;;12382:30;12448:34;12428:18;;;12421:62;12519:34;12499:18;;;12492:62;-1:-1:-1;;;12570:19:12;;;12563:46;12626:19;;9338:113:9;12168:483:12;9338:113:9;9462:50;9493:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;9493:7:9;9502:9;9462:30;:50::i;:::-;9532:10;9523:20;;;;:8;:20;;;;;;:27;;-1:-1:-1;;9523:27:9;9546:4;9523:27;;;9566:26;;;9523:20;9566:26;9203:397::o;5106:176::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:10::1;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;5221:8:9::2;::::0;5206:36:::2;::::0;5231:10;;5221:8;5206:36:::2;::::0;;;::::2;5253:8;:21:::0;;;2164:17:10::1;2177:3:::0;2164:12:::1;:17::i;5977:1570:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6100:7:9::1;::::0;-1:-1:-1;;;;;6100:7:9::1;6084:111;;;::::0;-1:-1:-1;;;6084:111:9;;10981:2:12;6084:111:9::1;::::0;::::1;10963:21:12::0;11020:2;11000:18;;;10993:30;;;11059:34;11039:18;;;11032:62;11130:34;11110:18;;;11103:62;-1:-1:-1;;;11181:19:12;;;11174:35;11226:19;;6084:111:9::1;10779:472:12::0;6084:111:9::1;6224:17;6235:5;6224:10;:17::i;:::-;6214:6;:27;;6206:105;;;::::0;-1:-1:-1;;;6206:105:9;;7202:2:12;6206:105:9::1;::::0;::::1;7184:21:12::0;7241:2;7221:18;;;7214:30;7280:34;7260:18;;;7253:62;7351:34;7331:18;;;7324:62;-1:-1:-1;;;7402:19:12;;;7395:32;7444:19;;6206:105:9::1;7000:469:12::0;6206:105:9::1;6340:20;;6330:6;:30;;6322:97;;;::::0;-1:-1:-1;;;6322:97:9;;5942:2:12;6322:97:9::1;::::0;::::1;5924:21:12::0;5981:2;5961:18;;;5954:30;6020:34;6000:18;;;5993:62;-1:-1:-1;;;6071:18:12;;;6064:52;6133:19;;6322:97:9::1;5740:418:12::0;6322:97:9::1;6438:21;6447:4;6453:5;6438:8;:21::i;:::-;6430:87;;;::::0;-1:-1:-1;;;6430:87:9;;13272:2:12;6430:87:9::1;::::0;::::1;13254:21:12::0;13311:2;13291:18;;;13284:30;13350:34;13330:18;;;13323:62;-1:-1:-1;;;13401:18:12;;;13394:51;13462:19;;6430:87:9::1;13070:417:12::0;6430:87:9::1;-1:-1:-1::0;;;;;6528:17:9;;::::1;;::::0;;;:11:::1;:17;::::0;;;;;;;:24;;::::1;::::0;;;;;;;;6555:15:::1;6528:42:::0;;6592:12:::1;::::0;;;::::1;6584:30;6581:911;;6631:17;6651:34;6681:3;6651:25;6662:13;;6651:6;:10;;:25;;;;:::i;:::-;:29:::0;::::1;:34::i;:::-;6631:54:::0;-1:-1:-1;6700:18:9::1;6721:21;:6:::0;6631:54;6721:10:::1;:21::i;:::-;6700:42:::0;-1:-1:-1;;;;;;6760:19:9;::::1;6757:342;;6800:50;6831:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;6831:7:9::1;6840:9;6800:30;:50::i;:::-;6869:48;6900:4;6906:10;6869:30;:48::i;:::-;6757:342;;;6958:54;6986:5;6993:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;6993:7:9::1;7002:9;6958:27;:54::i;:::-;7031:52;7059:5;7066:4;7072:10;7031:27;:52::i;:::-;6616:494;;6581:911;;;7148:3;7139:6;:12;7131:42;;;::::0;-1:-1:-1;;;7131:42:9;;7676:2:12;7131:42:9::1;::::0;::::1;7658:21:12::0;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:12;;;7727:47;7791:18;;7131:42:9::1;7474:341:12::0;7131:42:9::1;7197:15;:6:::0;7208:3;7197:10:::1;:15::i;:::-;7188:24:::0;-1:-1:-1;7245:21:9::1;7281;7298:3:::0;7281:16:::1;:21::i;:::-;7317:84;7356:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;7356:7:9::1;7366:34;:21;7392:7:::0;7366:25:::1;:34::i;:::-;7317:30;:84::i;:::-;7452:12;::::0;7416:64:::1;::::0;-1:-1:-1;;;;;7452:12:9::1;7467:4:::0;7473:6;7416:27:::1;:64::i;:::-;7116:376;6581:911;7533:5;-1:-1:-1::0;;;;;7507:32:9::1;7525:6;7519:4;-1:-1:-1::0;;;;;7507:32:9::1;;;;;;;;;;;5977:1570:::0;;;;:::o;4746:162::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:10::1;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;4845:13:9::2;::::0;4834:33:::2;::::0;4860:6;;4845:13;4834:33:::2;::::0;;;::::2;4878:13;:22:::0;;;2164:17:10::1;2177:3:::0;2164:12:::1;:17::i;5290:351:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5360:62:9::1;5388:5;5395:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;5395:7:9::1;5404:17;5415:5;5404:10;:17::i;:::-;5360:27;:62::i;:::-;5454:21;5489:14:::0;;5486:106:::1;;5520:60;5559:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;5559:7:9::1;5569:10;5520:30;:60::i;:::-;1019:7:0::0;1045:6;;5607:26:9::1;::::0;-1:-1:-1;;;;;1045:6:0;;;;5607:26:9::1;::::0;::::1;5349:292;5290:351:::0;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;4317:104:10:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:10;-1:-1:-1;;;;;2253:21:10;;:50;;;-1:-1:-1;2278:11:10;;-1:-1:-1;;;;;2278:11:10;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:10;;;;;;;:::i;:::-;4413:1:::1;4397:8;4406:3;4397:13;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:17;-1:-1:-1;4317:104:10:o;4100:184::-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:10;-1:-1:-1;;;;;2253:21:10;;:50;;;-1:-1:-1;2278:11:10;;-1:-1:-1;;;;;2278:11:10;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:10;;;;;;;:::i;:::-;4198:27:::1;861:6;4198:15;:27;:::i;:::-;4182:8;4191:3;4182:13;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;4262:8;4271:3;4262:13;;;;;;:::i;:::-;;;;;;;;;;;;;;4257:3;4240:36;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;4100:184:::0;:::o;3388:328:9:-;3532:12;;3456:4;;3497;;-1:-1:-1;;;;;3515:30:9;;;3532:12;;3515:30;3512:95;;-1:-1:-1;;;;;;3581:14:9;;;;;;:8;:14;;;;;;;;3512:95;3624:16;:84;;;;-1:-1:-1;3671:18:9;;-1:-1:-1;;;;;3644:17:9;;;;;;;:11;:17;;;;;;;;:24;;;;;;;;;;3693:15;;3644:45;;;:::i;:::-;:64;;3624:84;3617:91;3388:328;-1:-1:-1;;;;3388:328:9:o;4640:98::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4714:7:9::1;:16:::0;;-1:-1:-1;;;;;;4714:16:9::1;-1:-1:-1::0;;;;;4714:16:9;;;::::1;::::0;;;::::1;::::0;;4640:98::o;4053:233::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;4203:20:9::2;::::0;4176:59:::2;::::0;4225:9;;4203:20;4176:59:::2;::::0;;;::::2;4246:20;:32:::0;;;2164:17:10::1;2177:3:::0;2164:12:::1;:17::i;7565:1059:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;7664:7:9::1;::::0;-1:-1:-1;;;;;7664:7:9::1;7648:117;;;::::0;-1:-1:-1;;;7648:117:9;;9301:2:12;7648:117:9::1;::::0;::::1;9283:21:12::0;9340:2;9320:18;;;9313:30;9379:34;9359:18;;;9352:62;9450:34;9430:18;;;9423:62;-1:-1:-1;;;9501:19:12;;;9494:41;9552:19;;7648:117:9::1;9099:478:12::0;7648:117:9::1;7813:12;::::0;7794:33:::1;::::0;-1:-1:-1;;;;;7813:12:9::1;7794:10;:33::i;:::-;7784:6;:43;;7776:127;;;::::0;-1:-1:-1;;;7776:127:9;;11458:2:12;7776:127:9::1;::::0;::::1;11440:21:12::0;11497:2;11477:18;;;11470:30;11536:34;11516:18;;;11509:62;11607:34;11587:18;;;11580:62;-1:-1:-1;;;11658:19:12;;;11651:38;11706:19;;7776:127:9::1;11256:475:12::0;7776:127:9::1;7932:20;;7922:6;:30;;7914:103;;;::::0;-1:-1:-1;;;7914:103:9;;8022:2:12;7914:103:9::1;::::0;::::1;8004:21:12::0;8061:2;8041:18;;;8034:30;8100:34;8080:18;;;8073:62;8171:30;8151:18;;;8144:58;8219:19;;7914:103:9::1;7820:424:12::0;7914:103:9::1;8059:12;::::0;8036:37:::1;::::0;8045:4;;-1:-1:-1;;;;;8059:12:9::1;8036:8;:37::i;:::-;8028:109;;;::::0;-1:-1:-1;;;8028:109:9;;9784:2:12;8028:109:9::1;::::0;::::1;9766:21:12::0;9823:2;9803:18;;;9796:30;9862:34;9842:18;;;9835:62;9933:29;9913:18;;;9906:57;9980:19;;8028:109:9::1;9582:423:12::0;8028:109:9::1;-1:-1:-1::0;;;;;8148:17:9;;::::1;;::::0;;;:11:::1;:17;::::0;;;;;;;8174:12:::1;::::0;;;::::1;8148:40:::0;;;;;;8191:15:::1;8148:58:::0;;8237:21:::1;8269:24;8286:6:::0;8269:16:::1;:24::i;:::-;8304:15;8322:36;:21;8348:9:::0;8322:25:::1;:36::i;:::-;8304:54;;8369:11;8383:26;8395:13;;8383:7;:11;;:26;;;;:::i;:::-;8369:40:::0;-1:-1:-1;8430:16:9::1;:7:::0;8369:40;8430:11:::1;:16::i;:::-;8420:26;;8457:53;8496:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;8457:53:9::1;8521:45;8552:4;8558:7;8521:30;:45::i;:::-;8612:3;8603:7;8597:4;-1:-1:-1::0;;;;;8582:34:9::1;;;;;;;;;;;7637:987;;;7565:1059:::0;;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;5535:2:12;1926:73:0::1;::::0;::::1;5517:21:12::0;5574:2;5554:18;;;5547:30;5613:34;5593:18;;;5586:62;-1:-1:-1;;;5664:18:12;;;5657:36;5710:19;;1926:73:0::1;5333:402:12::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3627:124:10:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:10;-1:-1:-1;;;;;2253:21:10;;:50;;;-1:-1:-1;2278:11:10;;-1:-1:-1;;;;;2278:11:10;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:10;;;;;;;:::i;:::-;3696:13:::1;:20:::0;;-1:-1:-1;;;;3696:20:10::1;-1:-1:-1::0;;;3696:20:10::1;::::0;;3731:13:::1;::::0;::::1;::::0;3696;3731::::1;3627:124::o:0;3052:218:9:-;3108:7;-1:-1:-1;;;;;3131:19:9;;3128:79;;-1:-1:-1;3174:21:9;;3052:218;-1:-1:-1;3052:218:9:o;3128:79::-;3224:38;;-1:-1:-1;;;3224:38:9;;3256:4;3224:38;;;4343:51:12;-1:-1:-1;;;;;3224:23:9;;;;;4316:18:12;;3224:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3217:45;3052:218;-1:-1:-1;;3052:218:9:o;4298:330::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:10::1;::::0;::::1;::::0;-1:-1:-1;1999:13:10;-1:-1:-1;;;1999:13:10;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:10::1;;;;;;;:::i;:::-;4424:12:9::2;::::0;-1:-1:-1;;;;;4409:27:9;;::::2;4424:12:::0;::::2;4409:27;;4401:103;;;::::0;-1:-1:-1;;;4401:103:9;;11938:2:12;4401:103:9::2;::::0;::::2;11920:21:12::0;11977:2;11957:18;;;11950:30;12016:34;11996:18;;;11989:62;12087:33;12067:18;;;12060:61;12138:19;;4401:103:9::2;11736:427:12::0;4401:103:9::2;4547:12;::::0;4520:63:::2;::::0;-1:-1:-1;;;;;4520:63:9;;::::2;::::0;4547:12:::2;::::0;4520:63:::2;::::0;4547:12:::2;::::0;4520:63:::2;4594:12;:26:::0;;-1:-1:-1;;;;;;4594:26:9::2;-1:-1:-1::0;;;;;4594:26:9;::::2;;::::0;;2164:17:10::1;2177:3:::0;2164:12:::1;:17::i;1026:248:11:-:0;1138:12;;;1098;1138;;;;;;;;;-1:-1:-1;;;;;1116:7:11;;;1131:5;;1116:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:54;;;1182:7;1161:106;;;;-1:-1:-1;;;1161:106:11;;6365:2:12;1161:106:11;;;6347:21:12;6404:2;6384:18;;;6377:30;6443:34;6423:18;;;6416:62;-1:-1:-1;;;6494:18:12;;;6487:50;6554:19;;1161:106:11;6163:416:12;1161:106:11;1087:187;1026:248;;:::o;3382:96:6:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:6:o;3767:::-;3825:7;3851:5;3855:1;3851;:5;:::i;3039:96::-;3097:7;3123:5;3127:1;3123;:5;:::i;210:384:11:-;382:45;;;-1:-1:-1;;;;;4597:32:12;;;382:45:11;;;4579:51:12;4646:18;;;;4639:34;;;382:45:11;;;;;;;;;;4552:18:12;;;;382:45:11;;;;;;;-1:-1:-1;;;;;382:45:11;-1:-1:-1;;;382:45:11;;;371:57;;-1:-1:-1;;;;371:10:11;;;;:57;;382:45;371:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:105;;;;459:7;:57;;;;-1:-1:-1;471:11:11;;:16;;:44;;;502:4;491:24;;;;;;;;;;;;:::i;:::-;438:149;;;;-1:-1:-1;;;438:149:11;;12858:2:12;438:149:11;;;12840:21:12;12897:2;12877:18;;;12870:30;12936:34;12916:18;;;12909:62;-1:-1:-1;;;12987:18:12;;;12980:43;13040:19;;438:149:11;12656:409:12;438:149:11;313:281;;210:384;;;:::o;8636:559:9:-;8784:16;;;8798:1;8784:16;;;;;;;;8760:21;;8784:16;;;;;;;;-1:-1:-1;;8829:12:9;;8811:7;;;;-1:-1:-1;;;;;;8829:12:9;;8811:7;;-1:-1:-1;8829:12:9;;8811:7;;;;:::i;:::-;-1:-1:-1;;;;;8811:31:9;;;:7;;;;;;;;;:31;8863:5;;8853:7;;8863:5;;;8853:4;;8863:5;;8853:7;;;;;;:::i;:::-;-1:-1:-1;;;;;8853:15:9;;;:7;;;;;;;;;:15;8881:12;;8910:7;;8881:51;;-1:-1:-1;;;8881:51:9;;8910:7;;;8881:51;;;4579::12;4646:18;;;4639:34;;;8881:12:9;;;:20;;4552:18:12;;8881:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8971:7:9;;:216;;-1:-1:-1;;;8971:216:9;;-1:-1:-1;;;;;8971:7:9;;;;:58;;:216;;9044:11;;8971:7;;9114:4;;9141;;9161:15;;8971:216;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8691:504;8636:559;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:247:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:388::-;334:6;342;395:2;383:9;374:7;370:23;366:32;363:52;;;411:1;408;401:12;363:52;450:9;437:23;469:31;494:5;469:31;:::i;:::-;519:5;-1:-1:-1;576:2:12;561:18;;548:32;589:33;548:32;589:33;:::i;:::-;641:7;631:17;;;266:388;;;;;:::o;659:277::-;726:6;779:2;767:9;758:7;754:23;750:32;747:52;;;795:1;792;785:12;747:52;827:9;821:16;880:5;873:13;866:21;859:5;856:32;846:60;;902:1;899;892:12;1486:922;1555:6;1608:2;1596:9;1587:7;1583:23;1579:32;1576:52;;;1624:1;1621;1614:12;1576:52;1664:9;1651:23;1693:18;1734:2;1726:6;1723:14;1720:34;;;1750:1;1747;1740:12;1720:34;1788:6;1777:9;1773:22;1763:32;;1833:7;1826:4;1822:2;1818:13;1814:27;1804:55;;1855:1;1852;1845:12;1804:55;1891:2;1878:16;1913:2;1909;1906:10;1903:36;;;1919:18;;:::i;:::-;1994:2;1988:9;1962:2;2048:13;;-1:-1:-1;;2044:22:12;;;2068:2;2040:31;2036:40;2024:53;;;2092:18;;;2112:22;;;2089:46;2086:72;;;2138:18;;:::i;:::-;2178:10;2174:2;2167:22;2213:2;2205:6;2198:18;2253:7;2248:2;2243;2239;2235:11;2231:20;2228:33;2225:53;;;2274:1;2271;2264:12;2225:53;2330:2;2325;2321;2317:11;2312:2;2304:6;2300:15;2287:46;2375:1;2353:15;;;2370:2;2349:24;2342:35;;;;-1:-1:-1;2357:6:12;1486:922;-1:-1:-1;;;;;1486:922:12:o;2413:180::-;2472:6;2525:2;2513:9;2504:7;2500:23;2496:32;2493:52;;;2541:1;2538;2531:12;2493:52;-1:-1:-1;2564:23:12;;2413:180;-1:-1:-1;2413:180:12:o;2598:184::-;2668:6;2721:2;2709:9;2700:7;2696:23;2692:32;2689:52;;;2737:1;2734;2727:12;2689:52;-1:-1:-1;2760:16:12;;2598:184;-1:-1:-1;2598:184:12:o;2787:315::-;2855:6;2863;2916:2;2904:9;2895:7;2891:23;2887:32;2884:52;;;2932:1;2929;2922:12;2884:52;2968:9;2955:23;2945:33;;3028:2;3017:9;3013:18;3000:32;3041:31;3066:5;3041:31;:::i;3107:525::-;3193:6;3201;3209;3217;3270:3;3258:9;3249:7;3245:23;3241:33;3238:53;;;3287:1;3284;3277:12;3238:53;3323:9;3310:23;3300:33;;3383:2;3372:9;3368:18;3355:32;3396:31;3421:5;3396:31;:::i;:::-;3446:5;-1:-1:-1;3498:2:12;3483:18;;3470:32;;-1:-1:-1;3554:2:12;3539:18;;3526:32;3567:33;3526:32;3567:33;:::i;:::-;3107:525;;;;-1:-1:-1;3107:525:12;;-1:-1:-1;;3107:525:12:o;3637:274::-;3766:3;3804:6;3798:13;3820:53;3866:6;3861:3;3854:4;3846:6;3842:17;3820:53;:::i;:::-;3889:16;;;;;3637:274;-1:-1:-1;;3637:274:12:o;8738:356::-;8940:2;8922:21;;;8959:18;;;8952:30;9018:34;9013:2;8998:18;;8991:62;9085:2;9070:18;;8738:356::o;10010:342::-;10212:2;10194:21;;;10251:2;10231:18;;;10224:30;-1:-1:-1;;;10285:2:12;10270:18;;10263:48;10343:2;10328:18;;10010:342::o;10357:417::-;10559:2;10541:21;;;10598:2;10578:18;;;10571:30;10637:34;10632:2;10617:18;;10610:62;-1:-1:-1;;;10703:2:12;10688:18;;10681:51;10764:3;10749:19;;10357:417::o;13674:980::-;13936:4;13984:3;13973:9;13969:19;14015:6;14004:9;13997:25;14041:2;14079:6;14074:2;14063:9;14059:18;14052:34;14122:3;14117:2;14106:9;14102:18;14095:31;14146:6;14181;14175:13;14212:6;14204;14197:22;14250:3;14239:9;14235:19;14228:26;;14289:2;14281:6;14277:15;14263:29;;14310:1;14320:195;14334:6;14331:1;14328:13;14320:195;;;14399:13;;-1:-1:-1;;;;;14395:39:12;14383:52;;14490:15;;;;14455:12;;;;14431:1;14349:9;14320:195;;;-1:-1:-1;;;;;;;14571:32:12;;;;14566:2;14551:18;;14544:60;-1:-1:-1;;;14635:3:12;14620:19;14613:35;14532:3;13674:980;-1:-1:-1;;;13674:980:12:o;14659:128::-;14699:3;14730:1;14726:6;14723:1;14720:13;14717:39;;;14736:18;;:::i;:::-;-1:-1:-1;14772:9:12;;14659:128::o;14792:217::-;14832:1;14858;14848:132;;14902:10;14897:3;14893:20;14890:1;14883:31;14937:4;14934:1;14927:15;14965:4;14962:1;14955:15;14848:132;-1:-1:-1;14994:9:12;;14792:217::o;15014:168::-;15054:7;15120:1;15116;15112:6;15108:14;15105:1;15102:21;15097:1;15090:9;15083:17;15079:45;15076:71;;;15127:18;;:::i;:::-;-1:-1:-1;15167:9:12;;15014:168::o;15187:125::-;15227:4;15255:1;15252;15249:8;15246:34;;;15260:18;;:::i;:::-;-1:-1:-1;15297:9:12;;15187:125::o;15317:258::-;15389:1;15399:113;15413:6;15410:1;15407:13;15399:113;;;15489:11;;;15483:18;15470:11;;;15463:39;15435:2;15428:10;15399:113;;;15530:6;15527:1;15524:13;15521:48;;;15565:1;15556:6;15551:3;15547:16;15540:27;15521:48;;15317:258;;;:::o;15580:127::-;15641:10;15636:3;15632:20;15629:1;15622:31;15672:4;15669:1;15662:15;15696:4;15693:1;15686:15;15712:127;15773:10;15768:3;15764:20;15761:1;15754:31;15804:4;15801:1;15794:15;15828:4;15825:1;15818:15;15844:127;15905:10;15900:3;15896:20;15893:1;15886:31;15936:4;15933:1;15926:15;15960:4;15957:1;15950:15;15976:131;-1:-1:-1;;;;;16051:31:12;;16041:42;;16031:70;;16097:1;16094;16087:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1884200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_claimTimes(address,address)": "infinite",
								"_gasCost()": "2373",
								"_maxAmountPerReceive()": "2374",
								"_paidFee(address)": "2638",
								"_rewardToken()": "2404",
								"_rewards(address)": "2592",
								"_router()": "2448",
								"_timeBetweenClaims()": "2331",
								"_weth()": "2405",
								"adjustMaxAmountPerReceive(uint256)": "infinite",
								"canClaim(address,address)": "infinite",
								"changeFee(uint256)": "infinite",
								"changeGasCost(uint256)": "infinite",
								"changeThirdPartyFee(uint256)": "infinite",
								"claim()": "infinite",
								"emergencyWithdraw(address)": "infinite",
								"getBalance(address)": "infinite",
								"getEthBalance()": "295",
								"isLockEnabled()": "2417",
								"lockFunction(string)": "infinite",
								"maintainer()": "2464",
								"nativeSwapFee()": "2373",
								"owner()": "2431",
								"renounceOwnership()": "28159",
								"sendRewardAsEth(uint256,address)": "infinite",
								"sendRewards(uint256,address,uint256,address)": "infinite",
								"setMaintainer(address)": "infinite",
								"setRouter(address)": "26816",
								"setTimelockEnabled()": "29529",
								"thirdPartyFee()": "2329",
								"timelock(string)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockFunction(string)": "infinite",
								"updateRewardToken(address)": "infinite"
							},
							"internal": {
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 765,
									"end": 770,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 770,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 737,
									"end": 770,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1091,
									"end": 1124,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1091,
									"end": 1124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1091,
									"end": 1124,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1091,
									"end": 1124,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1172,
									"end": 1173,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1141,
									"end": 1173,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1141,
									"end": 1173,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1229,
									"name": "PUSH",
									"source": 9,
									"value": "1FAA3B500"
								},
								{
									"begin": 1189,
									"end": 1229,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1189,
									"end": 1229,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1327,
									"name": "PUSH",
									"source": 9,
									"value": "84595161401484A000000"
								},
								{
									"begin": 1275,
									"end": 1327,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1275,
									"end": 1327,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "PUSH",
									"source": 9,
									"value": "15180"
								},
								{
									"begin": 1334,
									"end": 1376,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1334,
									"end": 1376,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1406,
									"end": 1448,
									"name": "PUSH",
									"source": 9,
									"value": "BB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1448,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1554,
									"name": "PUSH",
									"source": 9,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1555,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2599,
									"end": 2676,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2409,
									"end": 2420,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2423,
									"end": 2433,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2642,
									"end": 2654,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2642,
									"end": 2668,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 98,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 130,
									"end": 137,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 126,
									"end": 149,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 122,
									"end": 154,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 119,
									"end": 171,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 119,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 119,
									"end": 171,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 238,
									"end": 269,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 238,
									"end": 269,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 228,
									"end": 270,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 228,
									"end": 270,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 218,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 284,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 274,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 218,
									"end": 288,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 14,
									"end": 318,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 9603,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a8357db7b5a9995b3286cb25f9f82a4d73246b308be66e08761528340cf9fbe64736f6c63430008070033",
									".code": [
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "9F531156"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "C4E977C8"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F4762FD6"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F8B2CB4F"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F8CF31CB"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "F98080C0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "C4E977C8"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "DE996A6E"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "E7B6EBBA"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "EDAE876F"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A617E653"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A617E653"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "B59C6E0E"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "C07A1D4D"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "C0D78655"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "9F531156"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A1764595"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A347511A"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A607494A"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "65947939"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "7D6DFB7E"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "7EF189F8"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "9850D32B"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "65947939"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "6A1DB1BF"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "6FF1C9BC"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "70ED0ADA"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "4B417886"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "4B417886"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "4E71D92D"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "5DD53826"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "6469B96E"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "126FFB9"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "13EA5D29"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "1F8C1D2B"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "2FA07562"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 454,
											"end": 9603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13638,
											"end": 13663,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13638,
											"end": 13663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13638,
											"end": 13663,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1376,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4849,
											"end": 4863,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4842,
											"end": 4864,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4865,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4684,
											"end": 4871,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1007,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1327,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3278,
											"end": 3380,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 894,
											"end": 934,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 894,
											"end": 934,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4394,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4394,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4197,
											"end": 4400,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1448,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1268,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1124,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1555,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36B0B4B73A30B4B732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8451,
											"end": 8453,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8454,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8463,
											"end": 8493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8563,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8502,
											"end": 8564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8634,
											"name": "PUSH",
											"source": 12,
											"value": "2063616E277420657175616C2070726576696F7573206D61696E7461696E6572"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8573,
											"end": 8635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206F72207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8651,
											"end": 8670,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8651,
											"end": 8670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8651,
											"end": 8670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8644,
											"end": 8691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8708,
											"end": 8727,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 8708,
											"end": 8727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8249,
											"end": 8733,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "PUSH",
											"source": 10,
											"value": "2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01"
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4916,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6368616E6765466565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "247A43C209C4066973EA0643D726236D3BF70967E8DC6D109B75630F351C8904"
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5057,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5081,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5068,
											"end": 5090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5090,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9274,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9263,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9255,
											"end": 9275,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9254,
											"end": 9275,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 6827,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6798,
											"end": 6828,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6898,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A636C61696D3A20416C726561647920616C6C6F77656420746F"
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6837,
											"end": 6899,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207265636965766520746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6989,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6970,
											"end": 6989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6584,
											"end": 6995,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9246,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9359,
											"end": 9367,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9359,
											"end": 9367,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12370,
											"end": 12372,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12352,
											"end": 12373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12409,
											"end": 12411,
											"name": "PUSH",
											"source": 12,
											"value": "4F"
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12389,
											"end": 12407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12412,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12482,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A636C61696D3A20416D6F756E74206F6620626E6220746F2063"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12421,
											"end": 12483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12519,
											"end": 12553,
											"name": "PUSH",
											"source": 12,
											"value": "6C61696D2073686F756C642063617272792074686520636F737420746F206164"
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12492,
											"end": 12554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "642074686520636C61696D61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12563,
											"end": 12609,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12626,
											"end": 12645,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 12626,
											"end": 12645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 12168,
											"end": 12651,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9338,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9462,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 9493,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9500,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 9493,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 9462,
											"end": 9512,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9462,
											"end": 9512,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 9462,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9542,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9531,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9550,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "98716C616972F4EF0085DEB59C20F6F6A840219C121AD1F3B5413097F3A10357"
										},
										{
											"begin": 9566,
											"end": 9592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9566,
											"end": 9592,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9600,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5106,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DA185B99D951D85CD0DBDCDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5221,
											"end": 5229,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5221,
											"end": 5229,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5241,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "PUSH",
											"source": 9,
											"value": "C3DC19678FD7390A5C1197DECFAEC52D8A1C63C49F0A51DB570F5FE5040C5F73"
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5242,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5253,
											"end": 5274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5274,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6107,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6100,
											"end": 6107,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6100,
											"end": 6107,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 10983,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11020,
											"end": 11022,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11023,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11093,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172643A205468657265206973206E6F2072"
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11032,
											"end": 11094,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11130,
											"end": 11164,
											"name": "PUSH",
											"source": 12,
											"value": "6F7574657220646566696E656420746F207377617020746F6B656E7320666F72"
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11165,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40CAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11181,
											"end": 11200,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11181,
											"end": 11200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11174,
											"end": 11209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11226,
											"end": 11245,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 11226,
											"end": 11245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10779,
											"end": 11251,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6084,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6235,
											"end": 6240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6224,
											"end": 6241,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6241,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6224,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6241,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6214,
											"end": 6241,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7202,
											"end": 7204,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7205,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7221,
											"end": 7239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7214,
											"end": 7244,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7280,
											"end": 7314,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7351,
											"end": 7385,
											"name": "PUSH",
											"source": 12,
											"value": "72652072657761726473207468616E20696E207265776172642073797374656D"
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7324,
											"end": 7386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7402,
											"end": 7421,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7402,
											"end": 7421,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7402,
											"end": 7421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 7444,
											"end": 7463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7000,
											"end": 7469,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6206,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6340,
											"end": 6360,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6360,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6360,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5924,
											"end": 5945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 5983,
											"name": "PUSH",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6020,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72652072657761726473207468616E206C696D697421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6133,
											"end": 6152,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6133,
											"end": 6152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5740,
											"end": 6158,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6322,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6447,
											"end": 6451,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 6438,
											"end": 6459,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6438,
											"end": 6459,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6438,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13272,
											"end": 13274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13254,
											"end": 13275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "PUSH",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 13291,
											"end": 13309,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13291,
											"end": 13309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13291,
											"end": 13309,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13284,
											"end": 13314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13384,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D"
										},
										{
											"begin": 13330,
											"end": 13348,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13330,
											"end": 13348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13330,
											"end": 13348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13323,
											"end": 13385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7265207468616E206F6E63652070657220646179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13401,
											"end": 13419,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13394,
											"end": 13445,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13481,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 13462,
											"end": 13481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 13070,
											"end": 13487,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6430,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6539,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6545,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6552,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6555,
											"end": 6570,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6528,
											"end": 6570,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6584,
											"end": 6614,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6681,
											"end": 6684,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6662,
											"end": 6675,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6662,
											"end": 6675,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6651,
											"end": 6661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6651,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6651,
											"end": 6685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6651,
											"end": 6685,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6651,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6685,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6721,
											"end": 6742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6742,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6721,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6849,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6800,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6900,
											"end": 6904,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6906,
											"end": 6916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 6869,
											"end": 6917,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6869,
											"end": 6917,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6869,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6757,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6986,
											"end": 6991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6958,
											"end": 7012,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 7012,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6958,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7059,
											"end": 7064,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7072,
											"end": 7082,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 7031,
											"end": 7083,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7083,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7031,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6616,
											"end": 7110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6616,
											"end": 7110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7148,
											"end": 7151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7145,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7151,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7715,
											"end": 7717,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7688,
											"end": 7718,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105093D0550E8E9CD95B9914995DD85C99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7774,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7474,
											"end": 7815,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7197,
											"end": 7203,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7197,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7212,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7245,
											"end": 7266,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7281,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7317,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7366,
											"end": 7387,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7399,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7366,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7317,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7317,
											"end": 7401,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7317,
											"end": 7401,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7317,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7416,
											"end": 7480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7452,
											"end": 7464,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7467,
											"end": 7471,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7416,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 7416,
											"end": 7480,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7416,
											"end": 7480,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7416,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 6581,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7531,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "PUSH",
											"source": 9,
											"value": "D8B141F2EA758469013A6478E6E9477D3A7A8527F7EC1F2E045AE15794FC3905"
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7539,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 7547,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4746,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6368616E6765466565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4845,
											"end": 4858,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4845,
											"end": 4858,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "CE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149"
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4867,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4900,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5388,
											"end": 5393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5415,
											"end": 5420,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5360,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5360,
											"end": 5422,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5360,
											"end": 5422,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5360,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 5489,
											"end": 5503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5489,
											"end": 5503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5486,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5486,
											"end": 5592,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5559,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5559,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5559,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5569,
											"end": 5579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5520,
											"end": 5580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5520,
											"end": 5580,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5520,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH",
											"source": 9,
											"value": "5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2"
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5641,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4405,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4414,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4270,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4271,
											"end": 4274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 10,
											"value": "F77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3544,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3532,
											"end": 3544,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3544,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3512,
											"end": 3607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3589,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3607,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3512,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3661,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3644,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3708,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3708,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 3624,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3708,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3716,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4730,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4738,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 4053,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "61646A7573744D6178416D6F756E745065725265636569766500000000000000"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4223,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4203,
											"end": 4223,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "D07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD"
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4235,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7671,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7664,
											"end": 7671,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7664,
											"end": 7671,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9301,
											"end": 9303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9342,
											"name": "PUSH",
											"source": 12,
											"value": "4A"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9313,
											"end": 9343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9379,
											"end": 9413,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172647341734574683A2054686572652069"
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9414,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9450,
											"end": 9484,
											"name": "PUSH",
											"source": 12,
											"value": "73206E6F20726F7574657220646566696E656420746F207377617020746F6B65"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9423,
											"end": 9485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DCE640CCDEE440CAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9494,
											"end": 9535,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9552,
											"end": 9571,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 9552,
											"end": 9571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9099,
											"end": 9577,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7648,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7813,
											"end": 7825,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7813,
											"end": 7825,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7813,
											"end": 7825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7827,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11458,
											"end": 11460,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11440,
											"end": 11461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11497,
											"end": 11499,
											"name": "PUSH",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 11477,
											"end": 11495,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11477,
											"end": 11495,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11477,
											"end": 11495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11470,
											"end": 11500,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11536,
											"end": 11570,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742073"
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11509,
											"end": 11571,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11607,
											"end": 11641,
											"name": "PUSH",
											"source": 12,
											"value": "656E64206D6F72652072657761726473207468616E20696E2072657761726420"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11580,
											"end": 11642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73797374656D21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11677,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11658,
											"end": 11677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11651,
											"end": 11689,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11706,
											"end": 11725,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 11706,
											"end": 11725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11256,
											"end": 11731,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7776,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7932,
											"end": 7952,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7932,
											"end": 7952,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7952,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8034,
											"end": 8064,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8100,
											"end": 8134,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742073"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8073,
											"end": 8135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8171,
											"end": 8201,
											"name": "PUSH",
											"source": 12,
											"value": "656E64206D6F72652072657761726473207468616E206C696D69742100000000"
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8144,
											"end": 8202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8219,
											"end": 8238,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8219,
											"end": 8238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7820,
											"end": 8244,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7914,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8036,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9786,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 12,
											"value": "3B"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9826,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9862,
											"end": 9896,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742063"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9835,
											"end": 9897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9933,
											"end": 9962,
											"name": "PUSH",
											"source": 12,
											"value": "6C61696D206D6F7265207468616E206F6E636520706572206461790000000000"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9906,
											"end": 9963,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9980,
											"end": 9999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 9582,
											"end": 10005,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 8028,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8165,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8188,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8191,
											"end": 8206,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8206,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8237,
											"end": 8258,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8269,
											"end": 8293,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8269,
											"end": 8293,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8269,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8322,
											"end": 8343,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8395,
											"end": 8408,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8395,
											"end": 8408,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8390,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 8383,
											"end": 8394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8383,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8430,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8430,
											"end": 8437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8430,
											"end": 8446,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8446,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8430,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8420,
											"end": 8446,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8420,
											"end": 8446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8496,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8558,
											"end": 8565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8521,
											"end": 8566,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8521,
											"end": 8566,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8521,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8603,
											"end": 8610,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8597,
											"end": 8601,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "PUSH",
											"source": 9,
											"value": "75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431"
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8582,
											"end": 8616,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 8624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 8624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 8624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7565,
											"end": 8624,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5537,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5517,
											"end": 5538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5613,
											"end": 5647,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5593,
											"end": 5611,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5593,
											"end": 5611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5593,
											"end": 5611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5586,
											"end": 5648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5657,
											"end": 5693,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5333,
											"end": 5735,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 10,
											"value": "2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3150,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3195,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 3128,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3260,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4394,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3224,
											"end": 3247,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3247,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3247,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3224,
											"end": 3247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4316,
											"end": 4334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 3224,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3262,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3270,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4298,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB83230BA32A932BBB0B9322A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4436,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4436,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4436,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11938,
											"end": 11940,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 11979,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 11975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11950,
											"end": 11980,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12050,
											"name": "PUSH",
											"source": 12,
											"value": "41424F41543A757064617465526577617264546F6B656E3A20596F752063616E"
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11989,
											"end": 12051,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12087,
											"end": 12120,
											"name": "PUSH",
											"source": 12,
											"value": "277420757064617465207468652065786163742073616D6520746F6B656E7300"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12121,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12138,
											"end": 12157,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12138,
											"end": 12157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11736,
											"end": 12163,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 4401,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "PUSH",
											"source": 9,
											"value": "CB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6"
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4583,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6365,
											"end": 6367,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6368,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6404,
											"end": 6406,
											"name": "PUSH",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6443,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6423,
											"end": 6441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6416,
											"end": 6478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6573,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6554,
											"end": 6573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 6163,
											"end": 6579,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4629,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4597,
											"end": 4629,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4597,
											"end": 4629,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4579,
											"end": 4630,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 371,
											"end": 381,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 371,
											"end": 381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 459,
											"end": 466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 459,
											"end": 516,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 459,
											"end": 516,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 459,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 459,
											"end": 516,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 482,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 482,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 471,
											"end": 487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 471,
											"end": 487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 471,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 471,
											"end": 515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 471,
											"end": 515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 502,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12858,
											"end": 12860,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 438,
											"end": 587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12840,
											"end": 12861,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12897,
											"end": 12899,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 12877,
											"end": 12895,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12877,
											"end": 12895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12870,
											"end": 12900,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12970,
											"name": "PUSH",
											"source": 12,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 12916,
											"end": 12934,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12916,
											"end": 12934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12971,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13023,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13059,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 13040,
											"end": 13059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 12656,
											"end": 13065,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8636,
											"end": 9195,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8636,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8760,
											"end": 8781,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8784,
											"end": 8800,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8811,
											"end": 8842,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8842,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8842,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8863,
											"end": 8868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8853,
											"end": 8868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8868,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8868,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8893,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8881,
											"end": 8893,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8917,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8910,
											"end": 8917,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8910,
											"end": 8917,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4630,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4639,
											"end": 4673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8881,
											"end": 8893,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8893,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8901,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 8881,
											"end": 8901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4552,
											"end": 4570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 8881,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9029,
											"name": "PUSH",
											"source": 9,
											"value": "791AC947"
										},
										{
											"begin": 8971,
											"end": 9029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9055,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 8978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9145,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8691,
											"end": 9195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8636,
											"end": 9195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8636,
											"end": 9195,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 654,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 266,
											"end": 654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 334,
											"end": 340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 395,
											"end": 397,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 374,
											"end": 381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 366,
											"end": 398,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 363,
											"end": 415,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 363,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 363,
											"end": 415,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 409,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 401,
											"end": 413,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 363,
											"end": 415,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 363,
											"end": 415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 437,
											"end": 460,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 469,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 469,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 469,
											"end": 500,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 500,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 469,
											"end": 500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 548,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 589,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 548,
											"end": 580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 589,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 589,
											"end": 622,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 589,
											"end": 622,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 589,
											"end": 622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 648,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 631,
											"end": 648,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 654,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 936,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 659,
											"end": 936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 754,
											"end": 777,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 747,
											"end": 799,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 747,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 747,
											"end": 799,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 785,
											"end": 797,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 747,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 747,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 827,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 821,
											"end": 837,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 880,
											"end": 885,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 886,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 866,
											"end": 887,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 859,
											"end": 864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 856,
											"end": 888,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 846,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 846,
											"end": 906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 902,
											"end": 903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 900,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 892,
											"end": 904,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 2408,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1486,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1611,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1651,
											"end": 1674,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1693,
											"end": 1711,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1737,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1752,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 1720,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1795,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1840,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1822,
											"end": 1824,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1814,
											"end": 1841,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1804,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 1804,
											"end": 1859,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1857,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1804,
											"end": 1859,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 1804,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1878,
											"end": 1894,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1906,
											"end": 1916,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1939,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1903,
											"end": 1939,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 1919,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2048,
											"end": 2061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2068,
											"end": 2070,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2076,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2134,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2135,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2158,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2086,
											"end": 2158,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2188,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2174,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2198,
											"end": 2216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2235,
											"end": 2246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2228,
											"end": 2261,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2278,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 2225,
											"end": 2278,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2278,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 2225,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2377,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 2408,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1486,
											"end": 2408,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2413,
											"end": 2593,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2413,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2527,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2511,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2523,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2545,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 2493,
											"end": 2545,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2539,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2531,
											"end": 2543,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2545,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 2493,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2587,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2593,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2413,
											"end": 2593,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2598,
											"end": 2782,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 2598,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2707,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2741,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 2689,
											"end": 2741,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2739,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2741,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 2689,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2782,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2787,
											"end": 3102,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2787,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2869,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2913,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2932,
											"end": 2933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2934,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 2884,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2955,
											"end": 2978,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3032,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 3041,
											"end": 3072,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3241,
											"end": 3274,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3238,
											"end": 3291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3238,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 3238,
											"end": 3291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3238,
											"end": 3291,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 3238,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3333,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 3421,
											"end": 3426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3451,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3483,
											"end": 3501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 3567,
											"end": 3600,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3567,
											"end": 3600,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 3567,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3632,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3637,
											"end": 3911,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 3637,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 3811,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 3866,
											"end": 3872,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3854,
											"end": 3858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3852,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3905,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3637,
											"end": 3911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3911,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8738,
											"end": 9094,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 8738,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 8977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8952,
											"end": 8982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9052,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9013,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8991,
											"end": 9053,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9085,
											"end": 9087,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8738,
											"end": 9094,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10010,
											"end": 10352,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 10010,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10212,
											"end": 10214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10194,
											"end": 10215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10194,
											"end": 10215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10253,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10224,
											"end": 10254,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119D5B98DD1A5BDB881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10285,
											"end": 10287,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10311,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10345,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10352,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10357,
											"end": 10774,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 10357,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10559,
											"end": 10561,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10562,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10541,
											"end": 10562,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10598,
											"end": 10600,
											"name": "PUSH",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 10578,
											"end": 10596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10578,
											"end": 10596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10578,
											"end": 10596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10571,
											"end": 10601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10637,
											"end": 10671,
											"name": "PUSH",
											"source": 12,
											"value": "6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420"
										},
										{
											"begin": 10632,
											"end": 10634,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10610,
											"end": 10672,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A379031B0B636103A3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 10705,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10688,
											"end": 10706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10688,
											"end": 10706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10681,
											"end": 10732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10767,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10357,
											"end": 10774,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13674,
											"end": 14654,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 13674,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13936,
											"end": 13940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13984,
											"end": 13987,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 13973,
											"end": 13982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13969,
											"end": 13988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14015,
											"end": 14021,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14004,
											"end": 14013,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14041,
											"end": 14043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14079,
											"end": 14085,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14063,
											"end": 14072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14052,
											"end": 14086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14122,
											"end": 14125,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 14117,
											"end": 14119,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14095,
											"end": 14126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14146,
											"end": 14152,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14187,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14175,
											"end": 14188,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14212,
											"end": 14218,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14197,
											"end": 14219,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14250,
											"end": 14253,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 14239,
											"end": 14248,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14235,
											"end": 14254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14228,
											"end": 14254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14228,
											"end": 14254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14289,
											"end": 14291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14281,
											"end": 14287,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 14277,
											"end": 14292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14292,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14310,
											"end": 14311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14334,
											"end": 14340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14328,
											"end": 14341,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14412,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14399,
											"end": 14412,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14395,
											"end": 14434,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14435,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14505,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14505,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14455,
											"end": 14467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14455,
											"end": 14467,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14455,
											"end": 14467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14455,
											"end": 14467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14349,
											"end": 14358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 14320,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 14571,
											"end": 14603,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14566,
											"end": 14568,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14551,
											"end": 14569,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14544,
											"end": 14604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14638,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 14620,
											"end": 14639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14613,
											"end": 14648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14532,
											"end": 14535,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13674,
											"end": 14654,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13674,
											"end": 14654,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14659,
											"end": 14787,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 14659,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14730,
											"end": 14731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14723,
											"end": 14724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14720,
											"end": 14733,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14717,
											"end": 14756,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14717,
											"end": 14756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 14717,
											"end": 14756,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14772,
											"end": 14781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 14781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14659,
											"end": 14787,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14792,
											"end": 15009,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 14792,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14859,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 14848,
											"end": 14980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14912,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 14897,
											"end": 14900,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 14893,
											"end": 14913,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 14890,
											"end": 14891,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14937,
											"end": 14941,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14934,
											"end": 14935,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14965,
											"end": 14969,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14962,
											"end": 14963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14955,
											"end": 14970,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14848,
											"end": 14980,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 14848,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14994,
											"end": 15003,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14994,
											"end": 15003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14792,
											"end": 15009,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15014,
											"end": 15182,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 15014,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15112,
											"end": 15118,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15108,
											"end": 15122,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15105,
											"end": 15106,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15083,
											"end": 15100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15079,
											"end": 15124,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15076,
											"end": 15147,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15076,
											"end": 15147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 15076,
											"end": 15147,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15167,
											"end": 15176,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15167,
											"end": 15176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15182,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15187,
											"end": 15312,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 15187,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15255,
											"end": 15256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15252,
											"end": 15253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15249,
											"end": 15257,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15246,
											"end": 15280,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15246,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 15246,
											"end": 15280,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 15260,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15297,
											"end": 15306,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15297,
											"end": 15306,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15187,
											"end": 15312,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15389,
											"end": 15390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15419,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15410,
											"end": 15411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15407,
											"end": 15420,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15489,
											"end": 15500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15489,
											"end": 15500,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15489,
											"end": 15500,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15470,
											"end": 15481,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15470,
											"end": 15481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15470,
											"end": 15481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15463,
											"end": 15502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15435,
											"end": 15437,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15428,
											"end": 15438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 15399,
											"end": 15512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15530,
											"end": 15536,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15527,
											"end": 15528,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15524,
											"end": 15537,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15556,
											"end": 15562,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15551,
											"end": 15554,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15547,
											"end": 15563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15540,
											"end": 15567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15521,
											"end": 15569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15575,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15580,
											"end": 15707,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 15580,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15641,
											"end": 15651,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 15636,
											"end": 15639,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 15632,
											"end": 15652,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15622,
											"end": 15653,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15672,
											"end": 15676,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15669,
											"end": 15670,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15662,
											"end": 15677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15696,
											"end": 15700,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15693,
											"end": 15694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15686,
											"end": 15701,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15712,
											"end": 15839,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 15712,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15773,
											"end": 15783,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 15768,
											"end": 15771,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15761,
											"end": 15762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15785,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15804,
											"end": 15808,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 15801,
											"end": 15802,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15794,
											"end": 15809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15825,
											"end": 15826,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15833,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15844,
											"end": 15971,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 15844,
											"end": 15971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15905,
											"end": 15915,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 15900,
											"end": 15903,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 15896,
											"end": 15916,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15893,
											"end": 15894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15917,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15936,
											"end": 15940,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 15933,
											"end": 15934,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15926,
											"end": 15941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15960,
											"end": 15964,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15957,
											"end": 15958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15950,
											"end": 15965,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15976,
											"end": 16107,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16051,
											"end": 16082,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16082,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16041,
											"end": 16083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16041,
											"end": 16083,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16031,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16031,
											"end": 16101,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16094,
											"end": 16095,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16087,
											"end": 16099,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_claimTimes(address,address)": "4b417886",
							"_gasCost()": "7ef189f8",
							"_maxAmountPerReceive()": "5dd53826",
							"_paidFee(address)": "2fa07562",
							"_rewardToken()": "b59c6e0e",
							"_rewards(address)": "7d6dfb7e",
							"_router()": "edae876f",
							"_timeBetweenClaims()": "0126ffb9",
							"_weth()": "a1764595",
							"adjustMaxAmountPerReceive(uint256)": "de996a6e",
							"canClaim(address,address)": "a617e653",
							"changeFee(uint256)": "6a1db1bf",
							"changeGasCost(uint256)": "6469b96e",
							"changeThirdPartyFee(uint256)": "1f8c1d2b",
							"claim()": "4e71d92d",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"getBalance(address)": "f8b2cb4f",
							"getEthBalance()": "70ed0ada",
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"nativeSwapFee()": "c07a1d4d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sendRewardAsEth(uint256,address)": "e7b6ebba",
							"sendRewards(uint256,address,uint256,address)": "65947939",
							"setMaintainer(address)": "13ea5d29",
							"setRouter(address)": "c0d78655",
							"setTimelockEnabled()": "f4762fd6",
							"thirdPartyFee()": "c4e977c8",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a",
							"updateRewardToken(address)": "f8cf31cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ChangedFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousGas\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"ChangedGasCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChangedMaxAmountPerReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"ChangedRewardToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ChangedThirdPartyFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"EnabledRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SentRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"SentRewardsETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_claimTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_gasCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxAmountPerReceive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_paidFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_rewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_timeBetweenClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"adjustMaxAmountPerReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasCost\",\"type\":\"uint256\"}],\"name\":\"changeGasCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeThirdPartyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"sendRewardAsEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sendRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thirdPartyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chains/binance/RewardSystem.sol\":\"RewardSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/chains/binance/RewardSystem.sol\":{\"keccak256\":\"0x940734bab55335c6804cee4ed26b974d69473d325d8778e67ba23c39429b13fc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bbfa8767be4115ea533cff3855206bc12d3c533069a332049c17aba2b4f3d878\",\"dweb:/ipfs/QmUkZkwVMbFziM3TrFnGYa87voyz9gN39vkKwC333EL7Tk\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2594,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2598,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2603,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1800,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_rewards",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1806,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_claimTimes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1810,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_paidFee",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1813,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "nativeSwapFee",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1816,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "thirdPartyFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1819,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_gasCost",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1822,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_rewardToken",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IERC20)727"
							},
							{
								"astId": 1825,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_maxAmountPerReceive",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1828,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_timeBetweenClaims",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1831,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_weth",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 1837,
								"contract": "contracts/chains/binance/RewardSystem.sol:RewardSystem",
								"label": "_router",
								"offset": 0,
								"slot": "13",
								"type": "t_contract(IUniswapV2Router02)1777"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)727": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1777": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TimeLock.sol": {
				"TimeLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaintainer(address)": "13ea5d29",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TimeLock.sol\":\"TimeLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2594,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2598,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2603,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:1095:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1070,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1069
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 728,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 753,
							"src": "81:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1070,
							"src": "123:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 110,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "1339:7:1"
									},
									"id": 111,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:1"
								},
								{
									"baseName": {
										"id": 112,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1348:6:1"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:1"
								},
								{
									"baseName": {
										"id": 114,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 752,
										"src": "1356:14:1"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 109,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								752,
								727,
								1069
							],
							"name": "ERC20",
							"nameLocation": "1330:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1413:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1377:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 117,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1485:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1429:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 124,
										"keyType": {
											"id": 120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 123,
											"keyType": {
												"id": 121,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1467:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1519:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1503:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1553:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1538:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 128,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1579:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1564:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 130,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1564:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1593:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 649,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2143:29:1",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "2160:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "2153:12:1"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2110:8:1"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2128:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2128:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:15:1"
									},
									"scope": 649,
									"src": "2074:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2356:31:1",
										"statements": [
											{
												"expression": {
													"id": 165,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "2373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 164,
												"id": 166,
												"nodeType": "Return",
												"src": "2366:14:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2178:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2294:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2323:8:1"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:2:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2341:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2341:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:15:1"
									},
									"scope": 649,
									"src": "2285:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "3076:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "3086:9:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2393:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3020:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3069:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3069:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:7:1"
									},
									"scope": 649,
									"src": "3011:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3232:36:1",
										"statements": [
											{
												"expression": {
													"id": 185,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "3249:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 186,
												"nodeType": "Return",
												"src": "3242:19:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "3108:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3171:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3223:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:1"
									},
									"scope": 649,
									"src": "3162:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3409:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 197,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3426:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 199,
													"indexExpression": {
														"id": 198,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 196,
												"id": 200,
												"nodeType": "Return",
												"src": "3419:25:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3274:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3335:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:1"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3353:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3345:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3400:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:9:1"
									},
									"scope": 649,
									"src": "3326:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3746:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3766:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3780:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3791:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "3756:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3756:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 212,
												"id": 221,
												"nodeType": "Return",
												"src": "3808:11:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3457:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3663:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3680:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3672:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3699:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3691:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:35:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3740:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:1"
									},
									"scope": 649,
									"src": "3654:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3982:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 234,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3999:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4011:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3999:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 238,
													"indexExpression": {
														"id": 237,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4018:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3999:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "3992:34:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3832:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3893:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3955:8:1"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3911:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3903:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3918:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:32:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3973:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:9:1"
									},
									"scope": 649,
									"src": "3884:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4260:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "4279:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4279:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4293:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4302:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4270:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4270:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 260,
												"nodeType": "Return",
												"src": "4319:11:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4039:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4180:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:1"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4196:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4188:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:33:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4254:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:6:1"
									},
									"scope": 649,
									"src": "4171:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										708
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "4946:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4966:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4974:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4985:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4956:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4956:36:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5011:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5003:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 283,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "5030:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5042:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5030:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 288,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 286,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "5050:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5050:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5030:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "5081:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5101:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5081:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "5073:79:1"
											},
											{
												"id": 306,
												"nodeType": "UncheckedBlock",
												"src": "5162:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 298,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5195:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 299,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "5203:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5203:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 301,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "5217:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 302,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "5236:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5217:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5186:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5186:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 305,
														"nodeType": "ExpressionStatement",
														"src": "5186:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5271:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 308,
												"nodeType": "Return",
												"src": "5264:11:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "4343:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4813:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4922:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4843:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4835:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4867:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4859:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4894:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4886:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:81:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4940:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:6:1"
									},
									"scope": 649,
									"src": "4804:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5771:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 321,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5790:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 324,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "5813:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 327,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 325,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "5825:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5825:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5813:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 329,
																"indexExpression": {
																	"id": 328,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "5839:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5813:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 330,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5850:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5813:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 320,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "5781:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5781:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5781:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5878:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 319,
												"id": 335,
												"nodeType": "Return",
												"src": "5871:11:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5288:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5686:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5712:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5704:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5721:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:37:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5765:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:6:1"
									},
									"scope": 649,
									"src": "5677:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "6475:306:1",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6493:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "6485:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6485:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 349,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "6512:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 350,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6524:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6512:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "6538:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6485:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6564:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "6584:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6564:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6601:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6556:85:1"
											},
											{
												"id": 372,
												"nodeType": "UncheckedBlock",
												"src": "6651:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 364,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "6684:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 366,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "6698:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 367,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "6707:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 368,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "6726:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6707:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 363,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6675:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 371,
														"nodeType": "ExpressionStatement",
														"src": "6675:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 346,
												"id": 374,
												"nodeType": "Return",
												"src": "6763:11:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5895:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6385:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6411:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6403:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6428:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6420:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:42:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:6:1"
									},
									"scope": 649,
									"src": "6376:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7372:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7390:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 388,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7390:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7470:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7470:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7462:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7565:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7573:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7584:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7544:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7610:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "7602:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"baseExpression": {
														"id": 414,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "7626:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 416,
													"indexExpression": {
														"id": 415,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "7636:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7626:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "7661:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 420,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "7678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7661:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7686:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "7653:74:1"
											},
											{
												"id": 433,
												"nodeType": "UncheckedBlock",
												"src": "7737:77:1",
												"statements": [
													{
														"expression": {
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 425,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "7761:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 427,
																"indexExpression": {
																	"id": 426,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7771:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7761:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 428,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7781:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 429,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "7797:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7761:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 432,
														"nodeType": "ExpressionStatement",
														"src": "7761:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 434,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "7823:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 436,
														"indexExpression": {
															"id": 435,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7833:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7823:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "7847:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "7823:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7878:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7886:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7897:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7869:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "7864:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7935:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7943:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "7915:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7915:46:1"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "6787:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7264:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7291:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7283:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7315:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7307:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7342:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7334:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:81:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:1"
									},
									"scope": 649,
									"src": "7255:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "8309:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8327:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8346:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8338:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8338:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8327:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8319:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "8319:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8424:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8416:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8416:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8416:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8437:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8395:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8395:49:1"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "8455:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8471:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "8455:22:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "8487:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8487:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8487:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8487:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8547:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8539:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8539:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8560:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "8530:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "8525:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8606:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8598:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8598:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8598:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8610:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8619:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "8578:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "8578:48:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "7974:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8253:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8284:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8276:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:33:1"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8309:0:1"
									},
									"scope": 649,
									"src": "8244:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "9018:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9036:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9055:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9047:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9047:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9047:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9036:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9059:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "9028:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9127:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9144:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9148:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "9106:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "9106:49:1"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9174:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "9166:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9166:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"baseExpression": {
														"id": 538,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9201:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9191:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "9227:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 544,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "9245:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9227:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9219:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9219:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9219:71:1"
											},
											{
												"id": 557,
												"nodeType": "UncheckedBlock",
												"src": "9300:79:1",
												"statements": [
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "9324:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"id": 550,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9334:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9324:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 552,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "9345:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 553,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9362:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9345:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9324:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "9324:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "9388:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "9404:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9388:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9388:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9435:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9426:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "9421:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9511:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9503:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9503:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "9474:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9474:48:1"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "8639:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8962:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8976:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8968:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8993:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8985:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8967:33:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:1"
									},
									"scope": 649,
									"src": "8953:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "10065:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10083:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10092:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 593,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10092:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10092:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "10075:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "10161:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10180:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10172:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10172:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10172:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10161:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10184:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "10153:68:1"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 611,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "10232:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 614,
															"indexExpression": {
																"id": 612,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10244:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10232:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 615,
														"indexExpression": {
															"id": 613,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10251:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10232:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 616,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "10262:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "10232:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 620,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10292:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "10308:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10283:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10283:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "EmitStatement",
												"src": "10278:37:1"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "9535:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "9979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10010:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10002:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10035:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10027:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:78:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:1"
									},
									"scope": 649,
									"src": "9952:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "11025:2:1",
										"statements": []
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "10328:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10915:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10953:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10945:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10975:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10967:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10995:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10987:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:72:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11025:0:1"
									},
									"scope": 649,
									"src": "10906:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "11733:2:1",
										"statements": []
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "11033:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11624:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11683:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11675:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11703:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:72:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:1"
									},
									"scope": 649,
									"src": "11615:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 650,
							"src": "1321:10416:1",
							"usedErrors": []
						}
					],
					"src": "33:11705:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 727,
							"linearizedBaseContracts": [
								727
							],
							"name": "IERC20",
							"nameLocation": "139:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 727,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 727,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 727,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 727,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 727,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2149:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2173:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2200:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2239:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:2"
									},
									"scope": 727,
									"src": "2118:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 717,
									"name": "Transfer",
									"nameLocation": "2420:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2429:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2451:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:2"
									},
									"src": "2414:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 726,
									"name": "Approval",
									"nameLocation": "2651:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2660:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2683:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:2"
									},
									"src": "2645:78:2"
								}
							],
							"scope": 728,
							"src": "129:2596:2",
							"usedErrors": []
						}
					],
					"src": "33:2693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 728,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "228:6:3"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 752,
							"linearizedBaseContracts": [
								752,
								727
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "339:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:3"
									},
									"scope": 752,
									"src": "300:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "462:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:3"
									},
									"scope": 752,
									"src": "421:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "596:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 748,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:3"
									},
									"scope": 752,
									"src": "553:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 753,
							"src": "200:405:3",
							"usedErrors": []
						}
					],
					"src": "33:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 755,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "Address",
							"nameLocation": "134:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "784:311:4",
										"statements": [
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:4",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:4",
														"valueSize": 1
													}
												],
												"id": 766,
												"nodeType": "InlineAssembly",
												"src": "1003:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "1080:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 770,
												"nodeType": "Return",
												"src": "1073:15:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 1048,
									"src": "718:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2083:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 783,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 781,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2126:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:4"
											},
											{
												"assignments": [
													792,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "2178:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 799,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 793,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2196:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 795,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2218:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2247:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2031:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2058:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:4"
									},
									"scope": 1048,
									"src": "2012:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "3155:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3185:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 816,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															823,
															843
														],
														"referencedDeclaration": 843,
														"src": "3172:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 815,
												"id": 821,
												"nodeType": "Return",
												"src": "3165:67:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3088:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3104:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3141:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:4"
									},
									"scope": 1048,
									"src": "3066:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "3608:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3647:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "3655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 839,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3664:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 835,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "3625:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 834,
												"id": 841,
												"nodeType": "Return",
												"src": "3618:59:4"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3492:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3516:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3543:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3594:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:4"
									},
									"scope": 1048,
									"src": "3461:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "4189:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "4228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4236:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4242:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 855,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "4206:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 861,
												"nodeType": "Return",
												"src": "4199:94:4"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4110:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4175:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:4"
									},
									"scope": 1048,
									"src": "4046:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "4727:321:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 880,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 878,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4770:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "4847:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 889,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4836:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:4"
											},
											{
												"assignments": [
													896,
													898
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4900:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 895,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4914:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 897,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4967:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 899,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "4941:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 901,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4960:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5007:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 908,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "5016:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 909,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5028:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 906,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4989:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 911,
												"nodeType": "Return",
												"src": "4982:59:4"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4588:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4639:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4662:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:4"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4713:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:4"
									},
									"scope": 1048,
									"src": "4548:500:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "5325:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "5361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5369:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 923,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															965
														],
														"referencedDeclaration": 965,
														"src": "5342:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 922,
												"id": 928,
												"nodeType": "Return",
												"src": "5335:80:4"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5253:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5269:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5311:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:4"
									},
									"scope": 1048,
									"src": "5225:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "5764:229:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 944,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "5793:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 943,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "5782:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:4"
											},
											{
												"assignments": [
													950,
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5853:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 949,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5867:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "5912:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 953,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5952:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 960,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "5961:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 961,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5973:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 958,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "5934:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 941,
												"id": 963,
												"nodeType": "Return",
												"src": "5927:59:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5643:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5667:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5694:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5750:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:4"
									},
									"scope": 1048,
									"src": "5606:387:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "6269:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "6307:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "6315:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 975,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															982,
															1017
														],
														"referencedDeclaration": 1017,
														"src": "6286:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 974,
												"id": 980,
												"nodeType": "Return",
												"src": "6279:84:4"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6202:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6218:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6255:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:4"
									},
									"scope": 1048,
									"src": "6172:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "6711:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 996,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "6740:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 995,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "6729:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:4"
											},
											{
												"assignments": [
													1002,
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6802:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6816:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1003,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "6863:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1005,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6843:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "6903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1012,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6912:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1013,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6924:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1010,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "6885:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 993,
												"id": 1015,
												"nodeType": "Return",
												"src": "6878:59:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6595:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6646:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6697:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:4"
									},
									"scope": 1048,
									"src": "6556:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "7110:532:4",
										"statements": [
											{
												"condition": {
													"id": 1028,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "7124:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "7181:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1032,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "7265:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1042,
																"nodeType": "Block",
																"src": "7573:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "7598:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1038,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1041,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:4"
																	}
																]
															},
															"id": 1043,
															"nodeType": "IfStatement",
															"src": "7261:365:4",
															"trueBody": {
																"id": 1037,
																"nodeType": "Block",
																"src": "7288:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1036,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "7120:516:4",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7133:42:4",
													"statements": [
														{
															"expression": {
																"id": 1029,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "7154:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1030,
															"nodeType": "Return",
															"src": "7147:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6986:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7008:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7041:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7096:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:4"
									},
									"scope": 1048,
									"src": "6950:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1049,
							"src": "126:7518:4",
							"usedErrors": []
						}
					],
					"src": "33:7612:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1069
						]
					},
					"id": 1070,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1069,
							"linearizedBaseContracts": [
								1069
							],
							"name": "Context",
							"nameLocation": "572:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "648:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1055,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1057,
												"nodeType": "Return",
												"src": "658:17:5"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"scope": 1069,
									"src": "586:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "755:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1064,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1066,
												"nodeType": "Return",
												"src": "765:15:5"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:5"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "739:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:5"
									},
									"scope": 1069,
									"src": "688:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1070,
							"src": "554:235:5",
							"usedErrors": []
						}
					],
					"src": "33:757:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1071,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1072,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "SafeMath",
							"nameLocation": "406:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "633:140:6",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "643:124:6",
												"statements": [
													{
														"assignments": [
															1085
														],
														"declarations": [
															{
																"constant": false,
																"id": 1085,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "667:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1089,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "702:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1091,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "706:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "698:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1083,
															"id": 1096,
															"nodeType": "Return",
															"src": "709:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1099,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "754:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1083,
														"id": 1101,
														"nodeType": "Return",
														"src": "740:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "573:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "618:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:6"
									},
									"scope": 1381,
									"src": "557:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "995:113:6",
										"statements": [
											{
												"id": 1130,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "1033:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "1037:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "1029:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1115,
															"id": 1122,
															"nodeType": "Return",
															"src": "1040:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1085:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "1089:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1115,
														"id": 1129,
														"nodeType": "Return",
														"src": "1071:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "946:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "980:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "986:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:6"
									},
									"scope": 1381,
									"src": "919:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1332:417:6",
										"statements": [
											{
												"id": 1172,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1600:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "1596:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1150,
															"nodeType": "Return",
															"src": "1608:16:6"
														}
													},
													{
														"assignments": [
															1153
														],
														"declarations": [
															{
																"constant": false,
																"id": 1153,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1172,
																"src": "1638:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1157,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1650:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1654:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1158,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1673:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1159,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "1677:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1682:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "1669:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1166,
															"nodeType": "Return",
															"src": "1685:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1730:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1170,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1143,
														"id": 1171,
														"nodeType": "Return",
														"src": "1716:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1272:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1283:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1317:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1323:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:6"
									},
									"scope": 1381,
									"src": "1256:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1974:114:6",
										"statements": [
											{
												"id": 1200,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "2012:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1193,
														"nodeType": "IfStatement",
														"src": "2008:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1185,
															"id": 1192,
															"nodeType": "Return",
															"src": "2020:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1195,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2065:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1196,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "2069:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1198,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1185,
														"id": 1199,
														"nodeType": "Return",
														"src": "2051:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1914:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1925:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1959:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1965:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:6"
									},
									"scope": 1381,
									"src": "1898:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "2323:114:6",
										"statements": [
											{
												"id": 1228,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2361:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1221,
														"nodeType": "IfStatement",
														"src": "2357:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1220,
															"nodeType": "Return",
															"src": "2369:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1223,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "2414:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1224,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "2418:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1226,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1213,
														"id": 1227,
														"nodeType": "Return",
														"src": "2400:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2263:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2274:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2308:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2314:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:6"
									},
									"scope": 1381,
									"src": "2247:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2739:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "2756:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2760:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1243,
												"nodeType": "Return",
												"src": "2749:12:6"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2685:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2696:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:6"
									},
									"scope": 1381,
									"src": "2672:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3106:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "3127:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1254,
												"id": 1258,
												"nodeType": "Return",
												"src": "3116:12:6"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3052:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:6"
									},
									"scope": 1381,
									"src": "3039:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "3449:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "3466:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3470:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1273,
												"nodeType": "Return",
												"src": "3459:12:6"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:6"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:6"
									},
									"scope": 1381,
									"src": "3382:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3834:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3851:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3855:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "3844:12:6"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3780:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3825:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:6"
									},
									"scope": 1381,
									"src": "3767:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4383:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4400:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4404:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1303,
												"nodeType": "Return",
												"src": "4393:12:6"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4329:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4340:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4374:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:6"
									},
									"scope": 1381,
									"src": "4316:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5001:106:6",
										"statements": [
											{
												"id": 1328,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "5043:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1319,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "5048:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1321,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "5051:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1317,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5085:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5089:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1327,
														"nodeType": "Return",
														"src": "5078:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4898:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4917:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4936:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4992:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:6"
									},
									"scope": 1381,
									"src": "4876:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "5716:105:6",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "5758:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1346,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "5765:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1342,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5803:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1341,
														"id": 1352,
														"nodeType": "Return",
														"src": "5792:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5613:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5632:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5707:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:6"
									},
									"scope": 1381,
									"src": "5591:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "6592:105:6",
										"statements": [
											{
												"id": 1378,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1368,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "6634:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1371,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "6641:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1367,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1373,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "6675:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1375,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "6679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1366,
														"id": 1377,
														"nodeType": "Return",
														"src": "6668:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6508:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6527:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6583:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:6"
									},
									"scope": 1381,
									"src": "6467:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "398:6301:6",
							"usedErrors": []
						}
					],
					"src": "33:6667:6"
				},
				"id": 6
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1689
						]
					},
					"id": 1690,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1689,
							"linearizedBaseContracts": [
								1689
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:7"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "103:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:7"
									},
									"scope": 1689,
									"src": "61:51:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:7"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "156:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:7"
									},
									"scope": 1689,
									"src": "117:48:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "202:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "226:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "250:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "279:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "308:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "333:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "358:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "378:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:7"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "416:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "430:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "444:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:7"
									},
									"scope": 1689,
									"src": "171:289:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "499:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "522:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "555:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "584:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "611:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "631:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:7"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "677:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "695:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "711:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:7"
									},
									"scope": 1689,
									"src": "465:262:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "766:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "790:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "814:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "838:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "863:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "888:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "908:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "946:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "960:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:7"
									},
									"scope": 1689,
									"src": "732:242:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1039:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1063:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1092:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1119:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1139:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1177:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1195:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:7"
									},
									"scope": 1689,
									"src": "979:232:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1260:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1284:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1308:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1382:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1402:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1425:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1442:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1496,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1451:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1462:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1496:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1510:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:7"
									},
									"scope": 1689,
									"src": "1216:308:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1623:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1652:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1679:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1699:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1722:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1739:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1748:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1759:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:7"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1793:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1811:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:7"
									},
									"scope": 1689,
									"src": "1529:298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1898:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1925:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1958:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1978:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:7"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2016:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:7"
									},
									"scope": 1689,
									"src": "1832:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2087:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2111:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2137:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1557,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1558,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2170:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2190:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2228:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1565,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1566,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:7"
									},
									"scope": 1689,
									"src": "2044:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2287:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2306:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2331:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:7"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2408:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1580,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1581,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:7"
									},
									"scope": 1689,
									"src": "2256:175:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2467:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2483:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2501:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1589,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1590,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2526:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2538:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2587:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1597,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1598,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:7"
									},
									"scope": 1689,
									"src": "2436:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2646:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2661:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2680:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1606,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1607,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2705:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2717:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:7"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2766:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:7"
									},
									"scope": 1689,
									"src": "2615:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2825:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2841:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2866:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2878:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:7"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2943:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1629,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1630,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:7"
									},
									"scope": 1689,
									"src": "2794:172:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "2987:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3001:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3054:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:7"
									},
									"scope": 1689,
									"src": "2972:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3095:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3166:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:7"
									},
									"scope": 1689,
									"src": "3073:109:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3224:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3240:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:7"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3280:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:7"
									},
									"scope": 1689,
									"src": "3187:108:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3323:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3338:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1669,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1670,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3386:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1673,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1674,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:7"
									},
									"scope": 1689,
									"src": "3300:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3436:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3452:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3500:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1684,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1685,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:7"
									},
									"scope": 1689,
									"src": "3414:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1690,
							"src": "26:3499:7",
							"usedErrors": []
						}
					],
					"src": "0:3526:7"
				},
				"id": 7
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1689
						],
						"IUniswapV2Router02": [
							1777
						]
					},
					"id": 1778,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 1690,
							"src": "26:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1693,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "94:18:8"
									},
									"id": 1694,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777,
								1689
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "185:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "232:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "261:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "288:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "308:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "346:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:8"
									},
									"scope": 1777,
									"src": "119:243:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "443:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "490:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "519:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "546:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "566:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "589:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "606:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1726,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "615:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "626:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:8"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "660:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:8"
									},
									"scope": 1777,
									"src": "367:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "754:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "777:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "804:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1741,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1742,
													"nodeType": "ArrayTypeName",
													"src": "804:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "837:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "857:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:8"
									},
									"scope": 1777,
									"src": "682:204:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "960:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "987:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1753,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1754,
													"nodeType": "ArrayTypeName",
													"src": "987:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1020:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1040:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:8"
									},
									"scope": 1777,
									"src": "891:186:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1151:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1174:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1201:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1767,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1768,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1234:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1254:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:8"
									},
									"scope": 1777,
									"src": "1082:201:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "62:1223:8",
							"usedErrors": []
						}
					],
					"src": "0:1286:8"
				},
				"id": 8
			},
			"contracts/chains/binance/RewardSystem.sol": {
				"ast": {
					"absolutePath": "contracts/chains/binance/RewardSystem.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"IUniswapV2Router01": [
							1689
						],
						"IUniswapV2Router02": [
							1777
						],
						"Ownable": [
							103
						],
						"RewardSystem": [
							2579
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2781
						],
						"TransferHelper": [
							2898
						]
					},
					"id": 2580,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 1049,
							"src": "65:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 104,
							"src": "118:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 728,
							"src": "172:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 1382,
							"src": "230:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 1778,
							"src": "289:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "../../libraries/TransferHelper.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 2899,
							"src": "366:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TimeLock.sol",
							"file": "../../libraries/TimeLock.sol",
							"id": 1786,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2580,
							"sourceUnit": 2782,
							"src": "412:38:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1787,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "479:7:9"
									},
									"id": 1788,
									"nodeType": "InheritanceSpecifier",
									"src": "479:7:9"
								},
								{
									"baseName": {
										"id": 1789,
										"name": "TimeLock",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2781,
										"src": "488:8:9"
									},
									"id": 1790,
									"nodeType": "InheritanceSpecifier",
									"src": "488:8:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2579,
							"linearizedBaseContracts": [
								2579,
								2781,
								103,
								1069
							],
							"name": "RewardSystem",
							"nameLocation": "463:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1793,
									"libraryName": {
										"id": 1791,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "510:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "504:26:9",
									"typeName": {
										"id": 1792,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1796,
									"libraryName": {
										"id": 1794,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1381,
										"src": "542:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "536:27:9",
									"typeName": {
										"id": 1795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "555:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "7d6dfb7e",
									"id": 1800,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "926:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "894:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1799,
										"keyType": {
											"id": 1797,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "902:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "894:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1798,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "913:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b417886",
									"id": 1806,
									"mutability": "mutable",
									"name": "_claimTimes",
									"nameLocation": "996:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "941:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1805,
										"keyType": {
											"id": 1801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "949:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "941:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1804,
											"keyType": {
												"id": 1802,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "968:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "960:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1803,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "979:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2fa07562",
									"id": 1810,
									"mutability": "mutable",
									"name": "_paidFee",
									"nameLocation": "1076:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1044:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1809,
										"keyType": {
											"id": 1807,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1052:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1044:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1808,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1063:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c07a1d4d",
									"id": 1813,
									"mutability": "mutable",
									"name": "nativeSwapFee",
									"nameLocation": "1106:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1091:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1122:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4e977c8",
									"id": 1816,
									"mutability": "mutable",
									"name": "thirdPartyFee",
									"nameLocation": "1156:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1141:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1141:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1815,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1172:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ef189f8",
									"id": 1819,
									"mutability": "mutable",
									"name": "_gasCost",
									"nameLocation": "1204:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1189:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1189:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38353030303030303030",
										"id": 1818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1215:14:9",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8500000000_by_1",
											"typeString": "int_const 8500000000"
										},
										"value": "8500000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b59c6e0e",
									"id": 1822,
									"mutability": "mutable",
									"name": "_rewardToken",
									"nameLocation": "1256:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1242:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$727",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1821,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1820,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 727,
											"src": "1242:6:9"
										},
										"referencedDeclaration": 727,
										"src": "1242:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$727",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dd53826",
									"id": 1825,
									"mutability": "mutable",
									"name": "_maxAmountPerReceive",
									"nameLocation": "1290:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1275:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1275:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030",
										"id": 1824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1313:14:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0126ffb9",
									"id": 1828,
									"mutability": "mutable",
									"name": "_timeBetweenClaims",
									"nameLocation": "1349:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1334:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1334:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1370:6:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1764595",
									"id": 1831,
									"mutability": "mutable",
									"name": "_weth",
									"nameLocation": "1398:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1383:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1829,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1383:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
										"id": 1830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1406:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edae876f",
									"id": 1837,
									"mutability": "mutable",
									"name": "_router",
									"nameLocation": "1483:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2579,
									"src": "1457:98:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1777,
											"src": "1457:18:9"
										},
										"referencedDeclaration": 1777,
										"src": "1457:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
												"id": 1835,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1512:42:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1834,
											"name": "IUniswapV2Router02",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1777,
											"src": "1493:18:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1777_$",
												"typeString": "type(contract IUniswapV2Router02)"
											}
										},
										"id": 1836,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1493:62:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1845,
									"name": "SentRewards",
									"nameLocation": "1890:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1918:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "1902:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1941:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "1925:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1965:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "1949:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:70:9"
									},
									"src": "1884:88:9"
								},
								{
									"anonymous": false,
									"id": 1853,
									"name": "SentRewardsETH",
									"nameLocation": "1984:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2015:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1999:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2038:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2022:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": true,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "2062:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "2046:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:69:9"
									},
									"src": "1978:90:9"
								},
								{
									"anonymous": false,
									"id": 1857,
									"name": "EnabledRewards",
									"nameLocation": "2080:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2111:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2095:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:23:9"
									},
									"src": "2074:44:9"
								},
								{
									"anonymous": false,
									"id": 1863,
									"name": "ChangedFee",
									"nameLocation": "2130:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousFee",
												"nameLocation": "2157:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "2141:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2186:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "2170:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2140:50:9"
									},
									"src": "2124:67:9"
								},
								{
									"anonymous": false,
									"id": 1869,
									"name": "ChangedThirdPartyFee",
									"nameLocation": "2203:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousFee",
												"nameLocation": "2240:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "2224:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2269:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "2253:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:50:9"
									},
									"src": "2197:77:9"
								},
								{
									"anonymous": false,
									"id": 1875,
									"name": "ChangedGasCost",
									"nameLocation": "2286:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousGas",
												"nameLocation": "2317:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2301:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": true,
												"mutability": "mutable",
												"name": "gas",
												"nameLocation": "2346:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "2330:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:50:9"
									},
									"src": "2280:71:9"
								},
								{
									"anonymous": false,
									"id": 1881,
									"name": "ChangedRewardToken",
									"nameLocation": "2363:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousToken",
												"nameLocation": "2398:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "2382:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"indexed": true,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "2429:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "2413:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:57:9"
									},
									"src": "2357:82:9"
								},
								{
									"anonymous": false,
									"id": 1887,
									"name": "ChangedMaxAmountPerReceive",
									"nameLocation": "2451:26:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAmount",
												"nameLocation": "2494:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "2478:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2526:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "2510:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:56:9"
									},
									"src": "2445:89:9"
								},
								{
									"anonymous": false,
									"id": 1891,
									"name": "EmergencyWithdraw",
									"nameLocation": "2546:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2580:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "2564:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:23:9"
									},
									"src": "2540:47:9"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "2631:45:9",
										"statements": [
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "2642:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "2657:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"src": "2642:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "2642:26:9"
											}
										]
									},
									"id": 1902,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "2618:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "2611:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$727",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1892,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 727,
														"src": "2611:6:9"
													},
													"referencedDeclaration": 727,
													"src": "2611:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:20:9"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:0:9"
									},
									"scope": 2579,
									"src": "2599:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "2715:2:9",
										"statements": []
									},
									"id": 1906,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2695:2:9"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:0:9"
									},
									"scope": 2579,
									"src": "2688:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "3117:153:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1913,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "3131:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3148:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3140:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3140:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3140:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3131:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "IfStatement",
												"src": "3128:79:9",
												"trueBody": {
													"id": 1925,
													"nodeType": "Block",
													"src": "3152:55:9",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1921,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3182:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_RewardSystem_$2579",
																				"typeString": "contract RewardSystem"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_RewardSystem_$2579",
																				"typeString": "contract RewardSystem"
																			}
																		],
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3174:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1919,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3174:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3174:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3174:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1912,
															"id": 1924,
															"nodeType": "Return",
															"src": "3167:28:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1933,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3256:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardSystem_$2579",
																		"typeString": "contract RewardSystem"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardSystem_$2579",
																		"typeString": "contract RewardSystem"
																	}
																],
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3248:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3248:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3248:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "3231:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1927,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "3224:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$727_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3224:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															}
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 666,
														"src": "3224:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1912,
												"id": 1936,
												"nodeType": "Return",
												"src": "3217:45:9"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3061:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3080:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "3072:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:15:9"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "3108:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:9:9"
									},
									"scope": 2579,
									"src": "3052:218:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "3333:47:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1945,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3359:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3351:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1943,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3351:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3351:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3351:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1948,
												"nodeType": "Return",
												"src": "3344:28:9"
											}
										]
									},
									"functionSelector": "70ed0ada",
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthBalance",
									"nameLocation": "3287:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3300:2:9"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "3324:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:9:9"
									},
									"scope": 2579,
									"src": "3278:102:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "3462:254:9",
										"statements": [
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "isPreconditionOk",
														"nameLocation": "3478:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1990,
														"src": "3473:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1959,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3473:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3497:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3473:28:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1963,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "3515:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1966,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "3532:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3524:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1964,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3524:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3524:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3515:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "3512:95:9",
												"trueBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "3547:60:9",
													"statements": [
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1969,
																	"name": "isPreconditionOk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "3562:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1970,
																		"name": "_paidFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "3581:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1972,
																	"indexExpression": {
																		"id": 1971,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1952,
																		"src": "3590:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3581:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3562:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "3562:33:9"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "isPreconditionOk",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "3624:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1978,
																		"name": "_claimTimes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "3644:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1980,
																	"indexExpression": {
																		"id": 1979,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1952,
																		"src": "3656:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3644:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1982,
																"indexExpression": {
																	"id": 1981,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "3662:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3644:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1983,
																"name": "_timeBetweenClaims",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "3671:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3644:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"expression": {
																"id": 1985,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3693:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3693:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3644:64:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3624:84:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1989,
												"nodeType": "Return",
												"src": "3617:91:9"
											}
										]
									},
									"functionSelector": "a617e653",
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaim",
									"nameLocation": "3397:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3414:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "3406:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3428:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "3420:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:29:9"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "3456:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3456:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:6:9"
									},
									"scope": 2579,
									"src": "3388:328:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "4160:126:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2002,
															"name": "_maxAmountPerReceive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "4203:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2003,
															"name": "newAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "4225:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2001,
														"name": "ChangedMaxAmountPerReceive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "4176:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4176:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "EmitStatement",
												"src": "4171:64:9"
											},
											{
												"expression": {
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2006,
														"name": "_maxAmountPerReceive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "4246:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2007,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "4269:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4246:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "4246:32:9"
											}
										]
									},
									"functionSelector": "de996a6e",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1995,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4114:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4114:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "61646a7573744d6178416d6f756e7450657252656365697665",
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4131:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cbcc65ad171c8d46fe010e7cf5a33e88c6ee5faecd052e87d18440041ee8dd14",
														"typeString": "literal_string \"adjustMaxAmountPerReceive\""
													},
													"value": "adjustMaxAmountPerReceive"
												}
											],
											"id": 1999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1997,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "4124:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4124:35:9"
										}
									],
									"name": "adjustMaxAmountPerReceive",
									"nameLocation": "4062:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "4096:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "4088:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4088:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:19:9"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4160:0:9"
									},
									"scope": 2579,
									"src": "4053:233:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "4390:238:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2023,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "4409:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2024,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "4424:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															},
															"src": "4409:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a757064617465526577617264546f6b656e3a20596f752063616e277420757064617465207468652065786163742073616d6520746f6b656e73",
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4",
																"typeString": "literal_string \"ABOAT:updateRewardToken: You can't update the exact same tokens\""
															},
															"value": "ABOAT:updateRewardToken: You can't update the exact same tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4",
																"typeString": "literal_string \"ABOAT:updateRewardToken: You can't update the exact same tokens\""
															}
														],
														"id": 2022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4401:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "4401:103:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2032,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "4547:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4539:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4539:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4539:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2036,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "4570:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4562:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4562:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4562:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2029,
														"name": "ChangedRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "4520:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "EmitStatement",
												"src": "4515:68:9"
											},
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2040,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "4594:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2041,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "4609:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"src": "4594:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "4594:26:9"
											}
										]
									},
									"functionSelector": "f8cf31cb",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2016,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4352:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4352:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "757064617465526577617264546f6b656e",
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4369:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b233b15b7a0f628e9af8c1942e4e0f2d9d24d47bdc346a408ec09f18c3c8c5e2",
														"typeString": "literal_string \"updateRewardToken\""
													},
													"value": "updateRewardToken"
												}
											],
											"id": 2020,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2018,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "4362:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4362:27:9"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "4307:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "4332:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "4325:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$727",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2012,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 727,
														"src": "4325:6:9"
													},
													"referencedDeclaration": 727,
													"src": "4325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4324:20:9"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4390:0:9"
									},
									"scope": 2579,
									"src": "4298:330:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "4703:35:9",
										"statements": [
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2053,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "4714:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2054,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "4724:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "4714:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "4714:16:9"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2051,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2050,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4693:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4693:9:9"
										}
									],
									"name": "setRouter",
									"nameLocation": "4649:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "4678:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4659:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 2047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2046,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1777,
														"src": "4659:18:9"
													},
													"referencedDeclaration": 1777,
													"src": "4659:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:27:9"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4703:0:9"
									},
									"scope": 2579,
									"src": "4640:98:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2077,
										"nodeType": "Block",
										"src": "4818:90:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2069,
															"name": "nativeSwapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "4845:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2070,
															"name": "newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "4860:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"name": "ChangedFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "4834:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "EmitStatement",
												"src": "4829:38:9"
											},
											{
												"expression": {
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2073,
														"name": "nativeSwapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "4878:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2074,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "4894:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4878:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "4878:22:9"
											}
										]
									},
									"functionSelector": "6a1db1bf",
									"id": 2078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2063,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2062,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4788:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4788:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "6368616e6765466565",
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4805:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_85fecea0123deaf1ec6b125dfb3ebb67d43ae1820f1cfddfd04748c2bb8723f2",
														"typeString": "literal_string \"changeFee\""
													},
													"value": "changeFee"
												}
											],
											"id": 2066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2064,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "4798:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4798:19:9"
										}
									],
									"name": "changeFee",
									"nameLocation": "4755:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "4773:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "4765:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:16:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4818:0:9"
									},
									"scope": 2579,
									"src": "4746:162:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "4998:100:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2089,
															"name": "thirdPartyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "5035:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2090,
															"name": "newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "5050:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2088,
														"name": "ChangedThirdPartyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "5014:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2092,
												"nodeType": "EmitStatement",
												"src": "5009:48:9"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2093,
														"name": "thirdPartyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "5068:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2094,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "5084:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5068:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "5068:22:9"
											}
										]
									},
									"functionSelector": "1f8c1d2b",
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2082,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4968:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4968:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "6368616e6765466565",
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4985:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_85fecea0123deaf1ec6b125dfb3ebb67d43ae1820f1cfddfd04748c2bb8723f2",
														"typeString": "literal_string \"changeFee\""
													},
													"value": "changeFee"
												}
											],
											"id": 2086,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2084,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "4978:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4978:19:9"
										}
									],
									"name": "changeThirdPartyFee",
									"nameLocation": "4925:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "4953:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "4945:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4944:16:9"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4998:0:9"
									},
									"scope": 2579,
									"src": "4916:182:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "5190:92:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2109,
															"name": "_gasCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "5221:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2110,
															"name": "newGasCost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "5231:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2108,
														"name": "ChangedGasCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "5206:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5206:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "EmitStatement",
												"src": "5201:41:9"
											},
											{
												"expression": {
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2113,
														"name": "_gasCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "5253:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2114,
														"name": "newGasCost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "5264:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5253:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "5253:21:9"
											}
										]
									},
									"functionSelector": "6469b96e",
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2102,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5156:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5156:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "6368616e6765476173436f7374",
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5173:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_07b728a7fd50cc28b1225fd4ade3a4aaedd28cf0519a667d013ed85a3e58fa9f",
														"typeString": "literal_string \"changeGasCost\""
													},
													"value": "changeGasCost"
												}
											],
											"id": 2106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2104,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "5166:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5166:23:9"
										}
									],
									"name": "changeGasCost",
									"nameLocation": "5115:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "newGasCost",
												"nameLocation": "5137:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "5129:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5128:20:9"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5190:0:9"
									},
									"scope": 2579,
									"src": "5106:176:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "5349:292:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "5388:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2129,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "5395:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5395:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2132,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "5415:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2131,
																"name": "getBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "5404:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5404:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2125,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "5360:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2826,
														"src": "5360:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5360:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "5360:62:9"
											},
											{
												"assignments": [
													2137
												],
												"declarations": [
													{
														"constant": false,
														"id": 2137,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "5441:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2165,
														"src": "5433:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5433:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2143,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2140,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5462:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5454:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2138,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5454:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5454:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5454:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5433:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2144,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "5489:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5502:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5489:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2159,
												"nodeType": "IfStatement",
												"src": "5486:106:9",
												"trueBody": {
													"id": 2158,
													"nodeType": "Block",
													"src": "5505:87:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2152,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "5559:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5559:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5551:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2150,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5551:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5551:16:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2155,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "5569:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2147,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2898,
																		"src": "5520:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2897,
																	"src": "5520:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5520:60:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2157,
															"nodeType": "ExpressionStatement",
															"src": "5520:60:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2161,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "5625:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5625:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2160,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "5607:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5607:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "EmitStatement",
												"src": "5602:31:9"
											}
										]
									},
									"functionSelector": "6ff1c9bc",
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2122,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5339:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5339:9:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "5299:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5325:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5317:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:15:9"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5349:0:9"
									},
									"scope": 2579,
									"src": "5290:351:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2353,
										"nodeType": "Block",
										"src": "6073:1474:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2182,
																		"name": "_router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "6100:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	],
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6092:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2180,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6092:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6092:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6120:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6112:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2184,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6112:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6112:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6092:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a205468657265206973206e6f20726f7574657220646566696e656420746f207377617020746f6b656e7320666f7220657468",
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6124:70:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4",
																"typeString": "literal_string \"ABOAT::sendReward: There is no router defined to swap tokens for eth\""
															},
															"value": "ABOAT::sendReward: There is no router defined to swap tokens for eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4",
																"typeString": "literal_string \"ABOAT::sendReward: There is no router defined to swap tokens for eth\""
															}
														],
														"id": 2179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6084:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6084:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "6084:111:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2193,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "6214:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2195,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "6235:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2194,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "6224:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6224:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6214:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f72652072657761726473207468616e20696e207265776172642073797374656d21",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:67:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than in reward system!\""
															},
															"value": "ABOAT::sendReward: Can't send more rewards than in reward system!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than in reward system!\""
															}
														],
														"id": 2192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6206:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6206:105:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "6206:105:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "6330:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2203,
																"name": "_maxAmountPerReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "6340:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6330:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f72652072657761726473207468616e206c696d697421",
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6362:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than limit!\""
															},
															"value": "ABOAT::sendReward: Can't send more rewards than limit!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than limit!\""
															}
														],
														"id": 2201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6322:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "6322:97:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2210,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "6447:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2211,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "6453:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2209,
																"name": "canClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "6438:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6438:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6f7265207468616e206f6e63652070657220646179",
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6461:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a",
																"typeString": "literal_string \"ABOAT::sendReward: Can't claim more than once per day\""
															},
															"value": "ABOAT::sendReward: Can't claim more than once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a",
																"typeString": "literal_string \"ABOAT::sendReward: Can't claim more than once per day\""
															}
														],
														"id": 2208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6430:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "6430:87:9"
											},
											{
												"expression": {
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2216,
																"name": "_claimTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "6528:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2219,
															"indexExpression": {
																"id": 2217,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "6540:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6528:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2220,
														"indexExpression": {
															"id": 2218,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "6546:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6528:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2221,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6555:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6555:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6528:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "6528:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2227,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "6592:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6584:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2225,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6584:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6584:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2229,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "6609:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6584:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2345,
													"nodeType": "Block",
													"src": "7116:376:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2291,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2168,
																			"src": "7139:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2292,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "7148:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7139:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "41424f41543a3a73656e64526577617264",
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7153:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f",
																			"typeString": "literal_string \"ABOAT::sendReward\""
																		},
																		"value": "ABOAT::sendReward"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f",
																			"typeString": "literal_string \"ABOAT::sendReward\""
																		}
																	],
																	"id": 2290,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7131:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7131:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2296,
															"nodeType": "ExpressionStatement",
															"src": "7131:42:9"
														},
														{
															"expression": {
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2297,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "7188:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2300,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2172,
																			"src": "7208:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2298,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2168,
																			"src": "7197:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1260,
																		"src": "7197:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7197:15:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7188:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2303,
															"nodeType": "ExpressionStatement",
															"src": "7188:24:9"
														},
														{
															"assignments": [
																2305
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2305,
																	"mutability": "mutable",
																	"name": "userEth",
																	"nameLocation": "7235:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2345,
																	"src": "7227:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7227:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2311,
															"initialValue": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7253:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_RewardSystem_$2579",
																				"typeString": "contract RewardSystem"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_RewardSystem_$2579",
																				"typeString": "contract RewardSystem"
																			}
																		],
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7245:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7245:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7245:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7245:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7227:39:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2313,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "7298:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2312,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "7281:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7281:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2315,
															"nodeType": "ExpressionStatement",
															"src": "7281:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2321,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "7356:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7356:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7348:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2319,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7348:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7348:16:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2330,
																				"name": "userEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2305,
																				"src": "7392:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2326,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "7374:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_RewardSystem_$2579",
																								"typeString": "contract RewardSystem"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_RewardSystem_$2579",
																								"typeString": "contract RewardSystem"
																							}
																						],
																						"id": 2325,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7366:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2324,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "7366:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2327,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7366:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"src": "7366:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1260,
																			"src": "7366:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7366:34:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2316,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2898,
																		"src": "7317:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2897,
																	"src": "7317:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7317:84:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2333,
															"nodeType": "ExpressionStatement",
															"src": "7317:84:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2339,
																				"name": "_rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1822,
																				"src": "7452:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$727",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$727",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7444:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2337,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7444:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7444:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2341,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "7467:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2342,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7473:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2334,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2898,
																		"src": "7416:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2826,
																	"src": "7416:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7416:64:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2344,
															"nodeType": "ExpressionStatement",
															"src": "7416:64:9"
														}
													]
												},
												"id": 2346,
												"nodeType": "IfStatement",
												"src": "6581:911:9",
												"trueBody": {
													"id": 2289,
													"nodeType": "Block",
													"src": "6616:494:9",
													"statements": [
														{
															"assignments": [
																2232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2232,
																	"mutability": "mutable",
																	"name": "feeAmount",
																	"nameLocation": "6639:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2289,
																	"src": "6631:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6631:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2240,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6681:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2235,
																				"name": "thirdPartyFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1816,
																				"src": "6662:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2233,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2168,
																				"src": "6651:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1275,
																			"src": "6651:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6651:25:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1290,
																	"src": "6651:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6651:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6631:54:9"
														},
														{
															"assignments": [
																2242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2242,
																	"mutability": "mutable",
																	"name": "userAmount",
																	"nameLocation": "6708:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2289,
																	"src": "6700:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6700:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2247,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2245,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "6732:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2243,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "6721:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1260,
																	"src": "6721:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6721:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6700:42:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2248,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "6760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6769:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2249,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6769:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6769:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6760:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2287,
																"nodeType": "Block",
																"src": "6939:160:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2273,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "6986:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2274,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 32,
																						"src": "6993:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6993:7:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2276,
																					"name": "feeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2232,
																					"src": "7002:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2270,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2898,
																					"src": "6958:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2826,
																				"src": "6958:27:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6958:54:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2278,
																		"nodeType": "ExpressionStatement",
																		"src": "6958:54:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2282,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "7059:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2283,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2170,
																					"src": "7066:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2284,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2242,
																					"src": "7072:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2279,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2898,
																					"src": "7031:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2826,
																				"src": "7031:27:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:52:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2286,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:52:9"
																	}
																]
															},
															"id": 2288,
															"nodeType": "IfStatement",
															"src": "6757:342:9",
															"trueBody": {
																"id": 2269,
																"nodeType": "Block",
																"src": "6781:152:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2257,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 32,
																						"src": "6831:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6831:7:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2259,
																					"name": "feeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2232,
																					"src": "6840:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2254,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2898,
																					"src": "6800:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2897,
																				"src": "6800:30:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6800:50:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2261,
																		"nodeType": "ExpressionStatement",
																		"src": "6800:50:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2265,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2170,
																					"src": "6900:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2266,
																					"name": "userAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2242,
																					"src": "6906:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2262,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2898,
																					"src": "6869:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2897,
																				"src": "6869:30:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6869:48:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2268,
																		"nodeType": "ExpressionStatement",
																		"src": "6869:48:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2348,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "7519:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "7525:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "7533:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2347,
														"name": "SentRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "7507:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7507:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2352,
												"nodeType": "EmitStatement",
												"src": "7502:37:9"
											}
										]
									},
									"functionSelector": "65947939",
									"id": 2354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2176,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6063:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6063:9:9"
										}
									],
									"name": "sendRewards",
									"nameLocation": "5986:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6006:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "5998:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5998:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6022:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "6014:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6036:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "6028:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6049:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "6041:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6041:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5997:58:9"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6073:0:9"
									},
									"scope": 2579,
									"src": "5977:1570:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "7637:987:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2366,
																		"name": "_router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "7664:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	],
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7656:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7656:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7656:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7684:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7676:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7676:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7676:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7656:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a205468657265206973206e6f20726f7574657220646566696e656420746f207377617020746f6b656e7320666f7220657468",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7688:76:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\""
															},
															"value": "ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\""
															}
														],
														"id": 2363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7648:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7648:117:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "7648:117:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2377,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "7784:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2381,
																				"name": "_rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1822,
																				"src": "7813:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$727",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$727",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7805:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2379,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7805:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7805:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2378,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "7794:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7794:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7784:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073656e64206d6f72652072657761726473207468616e20696e207265776172642073797374656d21",
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7829:73:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\""
															}
														],
														"id": 2376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7776:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7776:127:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "7776:127:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2389,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "7922:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2390,
																"name": "_maxAmountPerReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "7932:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7922:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073656e64206d6f72652072657761726473207468616e206c696d697421",
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7954:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't send more rewards than limit!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\""
															}
														],
														"id": 2388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7914:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7914:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "7914:103:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2397,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "8045:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2400,
																			"name": "_rewardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "8059:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$727",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$727",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8051:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2398,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8051:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8051:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2396,
																"name": "canClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "8036:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8036:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e277420636c61696d206d6f7265207468616e206f6e63652070657220646179",
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8075:61:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't claim more than once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\""
															}
														],
														"id": 2395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8028:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8028:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2405,
												"nodeType": "ExpressionStatement",
												"src": "8028:109:9"
											},
											{
												"expression": {
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2406,
																"name": "_claimTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "8148:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2412,
															"indexExpression": {
																"id": 2407,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "8160:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8148:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2413,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2410,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1822,
																	"src": "8174:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8166:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8166:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8166:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8148:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2414,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8191:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8191:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8148:58:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "8148:58:9"
											},
											{
												"assignments": [
													2419
												],
												"declarations": [
													{
														"constant": false,
														"id": 2419,
														"mutability": "mutable",
														"name": "ethBefore",
														"nameLocation": "8225:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 2479,
														"src": "8217:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8217:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2422,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8245:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2579",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8237:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2420,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8237:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8237:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8237:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8217:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "8286:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2426,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2536,
														"src": "8269:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8269:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "8269:24:9"
											},
											{
												"assignments": [
													2431
												],
												"declarations": [
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "userEth",
														"nameLocation": "8312:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2479,
														"src": "8304:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8304:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"arguments": [
														{
															"id": 2438,
															"name": "ethBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "8348:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2434,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8330:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RewardSystem_$2579",
																			"typeString": "contract RewardSystem"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RewardSystem_$2579",
																			"typeString": "contract RewardSystem"
																		}
																	],
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8322:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2432,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8322:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8322:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "8322:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1260,
														"src": "8322:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8322:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8304:54:9"
											},
											{
												"assignments": [
													2442
												],
												"declarations": [
													{
														"constant": false,
														"id": 2442,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "8377:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 2479,
														"src": "8369:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8369:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2447,
												"initialValue": {
													"arguments": [
														{
															"id": 2445,
															"name": "nativeSwapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "8395:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2443,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "8383:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "8383:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8383:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8369:40:9"
											},
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2448,
														"name": "userEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2431,
														"src": "8420:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2451,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "8442:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2449,
																"name": "userEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "8430:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1260,
															"src": "8430:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8430:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8420:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "8420:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2460,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "8496:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8496:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8488:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8488:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8488:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2463,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "8506:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2455,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "8457:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2897,
														"src": "8457:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8457:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2465,
												"nodeType": "ExpressionStatement",
												"src": "8457:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2469,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "8552:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2470,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "8558:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2466,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "8521:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2897,
														"src": "8521:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8521:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "8521:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2474,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "8597:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2475,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "8603:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2476,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "8612:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2473,
														"name": "SentRewardsETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "8582:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8582:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "EmitStatement",
												"src": "8577:39:9"
											}
										]
									},
									"functionSelector": "e7b6ebba",
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2360,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7627:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7627:9:9"
										}
									],
									"name": "sendRewardAsEth",
									"nameLocation": "7574:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7598:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "7590:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7590:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7614:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "7606:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7589:30:9"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7637:0:9"
									},
									"scope": 2579,
									"src": "7565:1059:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "8691:504:9",
										"statements": [
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "8777:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2535,
														"src": "8760:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2487,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8760:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2488,
															"nodeType": "ArrayTypeName",
															"src": "8760:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2495,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8798:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8784:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2490,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8788:7:9",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2491,
															"nodeType": "ArrayTypeName",
															"src": "8788:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8784:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8760:40:9"
											},
											{
												"expression": {
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2496,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "8811:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2498,
														"indexExpression": {
															"hexValue": "30",
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8816:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8811:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2501,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "8829:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8821:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2499,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8821:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8821:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8811:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "8811:31:9"
											},
											{
												"expression": {
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2505,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "8853:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2507,
														"indexExpression": {
															"hexValue": "31",
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8858:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8853:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2508,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "8863:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8853:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "8853:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2516,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "8910:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8902:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8902:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2518,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "8920:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2511,
															"name": "_rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "8881:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															}
														},
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "8881:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8881:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "8881:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2524,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "9044:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9070:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2526,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "9114:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9141:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardSystem_$2579",
																		"typeString": "contract RewardSystem"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardSystem_$2579",
																		"typeString": "contract RewardSystem"
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9133:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9133:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9133:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2531,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9161:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9161:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2521,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "8971:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$1777",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1776,
														"src": "8971:58:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8971:216:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "8971:216:9"
											}
										]
									},
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "8645:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "8670:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "8662:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8662:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8661:21:9"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8691:0:9"
									},
									"scope": 2579,
									"src": "8636:559:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2577,
										"nodeType": "Block",
										"src": "9235:365:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9254:21:9",
															"subExpression": {
																"baseExpression": {
																	"id": 2540,
																	"name": "_paidFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "9255:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2543,
																"indexExpression": {
																	"expression": {
																		"id": 2541,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9264:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9264:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9255:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20416c726561647920616c6c6f77656420746f207265636965766520746f6b656e73",
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9277:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_644b732325e6becb349d3ef887f96da16a07d566dc501e16920dbfee6b7e2970",
																"typeString": "literal_string \"ABOAT::claim: Already allowed to recieve tokens\""
															},
															"value": "ABOAT::claim: Already allowed to recieve tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_644b732325e6becb349d3ef887f96da16a07d566dc501e16920dbfee6b7e2970",
																"typeString": "literal_string \"ABOAT::claim: Already allowed to recieve tokens\""
															}
														],
														"id": 2539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9246:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9246:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "9246:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2549,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9346:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "9346:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2551,
																"name": "_gasCost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "9359:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9346:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a636c61696d3a20416d6f756e74206f6620626e6220746f20636c61696d2073686f756c642063617272792074686520636f737420746f206164642074686520636c61696d61626c65",
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9369:81:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d715c6e83422ef01a3bfa75f74ed99fb3911138cf52d99ccda01f4fe20d3c938",
																"typeString": "literal_string \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\""
															},
															"value": "ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d715c6e83422ef01a3bfa75f74ed99fb3911138cf52d99ccda01f4fe20d3c938",
																"typeString": "literal_string \"ABOAT::claim: Amount of bnb to claim should carry the cost to add the claimable\""
															}
														],
														"id": 2548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9338:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9338:113:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "9338:113:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2559,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "9493:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9493:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9502:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9502:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2556,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "9462:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$2898_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2897,
														"src": "9462:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9462:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2564,
												"nodeType": "ExpressionStatement",
												"src": "9462:50:9"
											},
											{
												"expression": {
													"id": 2570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2565,
															"name": "_paidFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "9523:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2568,
														"indexExpression": {
															"expression": {
																"id": 2566,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9532:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9532:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9523:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9546:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9523:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2571,
												"nodeType": "ExpressionStatement",
												"src": "9523:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2573,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9581:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9581:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2572,
														"name": "EnabledRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "9566:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9566:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2576,
												"nodeType": "EmitStatement",
												"src": "9561:31:9"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 2578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "9212:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9217:2:9"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9235:0:9"
									},
									"scope": 2579,
									"src": "9203:397:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2580,
							"src": "454:9149:9",
							"usedErrors": []
						}
					],
					"src": "39:9564:9"
				},
				"id": 9
			},
			"contracts/libraries/TimeLock.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TimeLock.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2781
						]
					},
					"id": 2782,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2581,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2782,
							"sourceUnit": 650,
							"src": "61:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2782,
							"sourceUnit": 728,
							"src": "117:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2782,
							"sourceUnit": 1049,
							"src": "174:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2782,
							"sourceUnit": 1382,
							"src": "226:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2782,
							"sourceUnit": 104,
							"src": "284:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2587,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "368:7:10"
									},
									"id": 2588,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:10"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2781,
							"linearizedBaseContracts": [
								2781,
								103,
								1069
							],
							"name": "TimeLock",
							"nameLocation": "356:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2591,
									"libraryName": {
										"id": 2589,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "388:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "382:26:10",
									"typeName": {
										"id": 2590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a347511a",
									"id": 2594,
									"mutability": "mutable",
									"name": "isLockEnabled",
									"nameLocation": "749:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2781,
									"src": "737:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2592,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "737:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f98080c0",
									"id": 2598,
									"mutability": "mutable",
									"name": "timelock",
									"nameLocation": "810:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2781,
									"src": "776:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 2597,
										"keyType": {
											"id": 2595,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "784:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "776:26:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueType": {
											"id": 2596,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2601,
									"mutability": "constant",
									"name": "_TIMELOCK",
									"nameLocation": "849:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 2781,
									"src": "824:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2599,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2600,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:6:10",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2603,
									"mutability": "mutable",
									"name": "_maintainer",
									"nameLocation": "889:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2781,
									"src": "873:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2602,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2609,
									"name": "MaintainerTransferred",
									"nameLocation": "1236:21:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousMaintainer",
												"nameLocation": "1274:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "1258:34:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMaintainer",
												"nameLocation": "1310:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "1294:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:67:10"
									},
									"src": "1230:95:10"
								},
								{
									"anonymous": false,
									"id": 2615,
									"name": "UnlockedFunction",
									"nameLocation": "1336:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"indexed": true,
												"mutability": "mutable",
												"name": "functionName",
												"nameLocation": "1368:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1353:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"indexed": true,
												"mutability": "mutable",
												"name": "unlockedAt",
												"nameLocation": "1398:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1382:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:57:10"
									},
									"src": "1330:80:10"
								},
								{
									"anonymous": false,
									"id": 2617,
									"name": "EnabledLock",
									"nameLocation": "1421:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:10"
									},
									"src": "1415:20:10"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "1980:208:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1998:14:10",
																"subExpression": {
																	"id": 2622,
																	"name": "isLockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2594,
																	"src": "1999:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2624,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2598,
																						"src": "2017:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2626,
																					"indexExpression": {
																						"id": 2625,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "2026:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2017:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2034:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2017:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2629,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2598,
																						"src": "2039:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2631,
																					"indexExpression": {
																						"id": 2630,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "2048:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2039:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 2632,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2056:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 2633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2056:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2039:32:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2017:54:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2636,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2598,
																						"src": "2075:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2638,
																					"indexExpression": {
																						"id": 2637,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2619,
																						"src": "2084:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2075:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2639,
																					"name": "_TIMELOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2601,
																					"src": "2091:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2075:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 2641,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2104:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2104:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2075:44:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2017:102:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2016:104:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1998:122:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206973206c6f636b6564",
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2122:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															},
															"value": "Function is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															}
														],
														"id": 2621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1990:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:153:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2649,
												"nodeType": "ExpressionStatement",
												"src": "1990:153:10"
											},
											{
												"id": 2650,
												"nodeType": "PlaceholderStatement",
												"src": "2153:1:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2652,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "2177:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2651,
														"name": "lockFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2780,
														"src": "2164:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "2164:17:10"
											}
										]
									},
									"id": 2656,
									"name": "locked",
									"nameLocation": "1954:6:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "1975:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1961:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:19:10"
									},
									"src": "1945:243:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "2235:144:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2659,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "2253:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2253:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2661,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2264:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2253:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2664,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2603,
																	"src": "2278:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2665,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2293:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2293:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2278:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2253:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:55:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															},
															"value": "operator: caller is not allowed to call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															}
														],
														"id": 2658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:116:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "2245:116:10"
											},
											{
												"id": 2672,
												"nodeType": "PlaceholderStatement",
												"src": "2371:1:10"
											}
										]
									},
									"id": 2674,
									"name": "onlyMaintainerOrOwner",
									"nameLocation": "2211:21:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:10"
									},
									"src": "2202:177:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "2399:41:10",
										"statements": [
											{
												"expression": {
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2677,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "2409:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2678,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2423:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2423:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2409:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "2409:24:10"
											}
										]
									},
									"id": 2683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:2:10"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:0:10"
									},
									"scope": 2781,
									"src": "2385:55:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "2822:35:10",
										"statements": [
											{
												"expression": {
													"id": 2688,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2603,
													"src": "2839:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2687,
												"id": 2689,
												"nodeType": "Return",
												"src": "2832:18:10"
											}
										]
									},
									"functionSelector": "9850d32b",
									"id": 2691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maintainer",
									"nameLocation": "2779:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:2:10"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "2813:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:10"
									},
									"scope": 2781,
									"src": "2770:87:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2728,
										"nodeType": "Block",
										"src": "3288:329:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2702,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2693,
																	"src": "3306:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2703,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2603,
																	"src": "3324:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3306:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2705,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2693,
																	"src": "3339:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3365:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3357:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2706,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3357:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3357:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3339:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3306:61:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e65722063616e277420657175616c2070726576696f7573206d61696e7461696e6572206f72207a65726f2061646472657373",
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:83:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															},
															"value": "ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															}
														],
														"id": 2701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3298:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:155:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "3298:155:10"
											},
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "previousMaintainer",
														"nameLocation": "3471:18:10",
														"nodeType": "VariableDeclaration",
														"scope": 2728,
														"src": "3463:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2715,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3463:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2718,
												"initialValue": {
													"id": 2717,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2603,
													"src": "3492:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:40:10"
											},
											{
												"expression": {
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2719,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "3513:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2720,
														"name": "_newMaintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2693,
														"src": "3527:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3513:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2722,
												"nodeType": "ExpressionStatement",
												"src": "3513:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2724,
															"name": "previousMaintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "3578:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2725,
															"name": "_maintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "3598:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2723,
														"name": "MaintainerTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2609,
														"src": "3556:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2727,
												"nodeType": "EmitStatement",
												"src": "3551:59:10"
											}
										]
									},
									"functionSelector": "13ea5d29",
									"id": 2729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2695,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2674,
												"src": "3245:21:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3245:21:10"
										},
										{
											"arguments": [
												{
													"hexValue": "6d61696e7461696e6572",
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3274:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddb9610f823ee4fc79a9d6f81490c93108f5c8a62aad74abbdf4620bfc3e24cd",
														"typeString": "literal_string \"maintainer\""
													},
													"value": "maintainer"
												}
											],
											"id": 2699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2697,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2656,
												"src": "3267:6:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3267:20:10"
										}
									],
									"name": "setMaintainer",
									"nameLocation": "3200:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "_newMaintainer",
												"nameLocation": "3222:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2729,
												"src": "3214:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:24:10"
									},
									"returnParameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:10"
									},
									"scope": 2781,
									"src": "3191:426:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "3686:65:10",
										"statements": [
											{
												"expression": {
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2734,
														"name": "isLockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2594,
														"src": "3696:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3696:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2737,
												"nodeType": "ExpressionStatement",
												"src": "3696:20:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2738,
														"name": "EnabledLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2617,
														"src": "3731:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2740,
												"nodeType": "EmitStatement",
												"src": "3726:18:10"
											}
										]
									},
									"functionSelector": "f4762fd6",
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2731,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2674,
												"src": "3664:21:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3664:21:10"
										}
									],
									"name": "setTimelockEnabled",
									"nameLocation": "3636:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:10"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3686:0:10"
									},
									"scope": 2781,
									"src": "3627:124:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "4172:112:10",
										"statements": [
											{
												"expression": {
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2749,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "4182:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2751,
														"indexExpression": {
															"id": 2750,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "4191:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4182:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2752,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4198:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4198:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2754,
															"name": "_TIMELOCK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "4216:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4198:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4182:43:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "4182:43:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2759,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "4257:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"baseExpression": {
																"id": 2760,
																"name": "timelock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "4262:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(string memory => uint256)"
																}
															},
															"id": 2762,
															"indexExpression": {
																"id": 2761,
																"name": "_fn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2744,
																"src": "4271:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4262:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2758,
														"name": "UnlockedFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "4240:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2764,
												"nodeType": "EmitStatement",
												"src": "4235:41:10"
											}
										]
									},
									"functionSelector": "a607494a",
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2747,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2746,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2674,
												"src": "4150:21:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4150:21:10"
										}
									],
									"name": "unlockFunction",
									"nameLocation": "4109:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4138:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4124:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4124:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:19:10"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4172:0:10"
									},
									"scope": 2781,
									"src": "4100:184:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "4387:34:10",
										"statements": [
											{
												"expression": {
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2773,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "4397:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2775,
														"indexExpression": {
															"id": 2774,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "4406:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4413:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4397:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "4397:17:10"
											}
										]
									},
									"functionSelector": "9f531156",
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2771,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2770,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2674,
												"src": "4365:21:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4365:21:10"
										}
									],
									"name": "lockFunction",
									"nameLocation": "4326:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4353:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "4339:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:19:10"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:10"
									},
									"scope": 2781,
									"src": "4317:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2782,
							"src": "338:4085:10",
							"usedErrors": []
						}
					],
					"src": "37:4386:10"
				},
				"id": 10
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							2898
						]
					},
					"id": 2899,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2783,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2898,
							"linearizedBaseContracts": [
								2898
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2825,
										"nodeType": "Block",
										"src": "313:281:11",
										"statements": [
											{
												"assignments": [
													2793,
													2795
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2825,
														"src": "324:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2792,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2795,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2825,
														"src": "338:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2794,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2805,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 2801,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "417:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2789,
																	"src": "421:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2798,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2796,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "371:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2807,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "459:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2795,
																					"src": "471:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2814,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2795,
																					"src": "502:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2816,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2815,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2817,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2812,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2820,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 2806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "438:149:11"
											}
										]
									},
									"id": 2826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "241:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "264:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "284:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:11"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:11"
									},
									"scope": 2898,
									"src": "210:384:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "729:291:11",
										"statements": [
											{
												"assignments": [
													2838,
													2840
												],
												"declarations": [
													{
														"constant": false,
														"id": 2838,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2871,
														"src": "740:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2837,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2840,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2871,
														"src": "754:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2839,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2851,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 2846,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2830,
																	"src": "833:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2847,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2832,
																	"src": "839:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2834,
																	"src": "843:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2843,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2841,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2828,
															"src": "787:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2853,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "881:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2854,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "893:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2860,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "924:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 2862,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 2861,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 2863,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 2858,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 2852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2870,
												"nodeType": "ExpressionStatement",
												"src": "860:153:11"
											}
										]
									},
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "635:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "658:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "680:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "700:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:11"
									},
									"returnParameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:11"
									},
									"scope": 2898,
									"src": "600:420:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "1087:187:11",
										"statements": [
											{
												"assignments": [
													2880,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2880,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2896,
														"src": "1098:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2879,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2890,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 2885,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2881,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2874,
																"src": "1116:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "1131:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2892,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "1182:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 2891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:11"
											}
										]
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "1051:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "1063:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:11"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:11"
									},
									"scope": 2898,
									"src": "1026:248:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2899,
							"src": "181:1095:11",
							"usedErrors": []
						}
					],
					"src": "46:1231:11"
				},
				"id": 11
			}
		}
	}
}