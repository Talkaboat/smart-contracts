{
	"id": "0f168a5c9dba9c42314e5c4cefb046e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/chains/kardiachain/RewardSystem.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"../../libraries/TransferHelper.sol\";\nimport \"../../libraries/TimeLock.sol\";\nimport \"./interfaces/IKaiDexRouter.sol\";\n\ncontract RewardSystem is Ownable, TimeLock {\n    using Address for address;\n    using SafeMath for uint256;\n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    mapping(address => bool) public _rewards;\n    mapping(address => uint256) public _claimTimes;\n    uint256 public nativeSwapFee = 10; //10% fee\n    \n    address public _oracleWallet = 0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19;\n    address public _devWallet = 0xc559aCc356D3037EC6dbc33a20587051188b8634;\n    \n    IERC20 public _rewardToken;\n    uint256 public _maxAmountPerReceive = 10000000 ether;\n    uint256 public _timeBetweenClaims = 1 days;\n    address public _weth = 0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d;\n\n    IKaiDexRouter public _router = IKaiDexRouter(0xbAFcdabe65A03825a131298bE7670c0aEC77B37f);\n    \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event SentRewards(address indexed owner, uint256 indexed amount);\n    event SentRewardsETH(address indexed owner, uint256 indexed amount, uint256 indexed fees);\n    event EnabledRewards(address indexed owner);\n    event ChangedFee(uint256 indexed previousFee, uint256 indexed fee);\n    event ChangedRewardToken(address indexed previousToken, address indexed newToken);\n    event ChangedOracleWallet(address indexed previousAddress, address indexed newAddress);\n    event ChangedMaxAmountPerReceive(uint256 indexed previousAmount, uint256 indexed amount);\n    event EmergencyWithdraw(address indexed owner);\n    \n    constructor(IERC20 rewardToken) {\n        _rewardToken = rewardToken;\n        changeOracleWallet(_oracleWallet);\n    }\n    \n    receive() external payable {}\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function getBalance() public view returns (uint256) {\n        return _rewardToken.balanceOf(address(this));\n    }\n\n    function getEthBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n\n\n    function canClaim(address user) public view returns (bool) {\n        return _claimTimes[user] + _timeBetweenClaims <= block.timestamp;\n    }\n    \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n\n    function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {\n        emit ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount);\n        _maxAmountPerReceive = newAmount;\n    }\n    \n    function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {\n        require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\");\n        emit ChangedRewardToken(address(_rewardToken), address(rewardToken));\n        _rewardToken = rewardToken;\n    }\n    \n    function changeOracleWallet(address oracleWallet) public onlyOwner locked(\"changeOracleWallet\") {\n        transferOwnership(oracleWallet);\n        address previous = _oracleWallet;\n        _oracleWallet = oracleWallet;\n        emit ChangedOracleWallet(previous, _oracleWallet);\n    }\n    \n    function setRouter(IKaiDexRouter router) public onlyOwner {\n        _router = router;\n    }\n\n    function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {\n        emit ChangedFee(nativeSwapFee, newFee);\n        nativeSwapFee = newFee;\n    }\n\n    function emergencyWithdraw() public onlyOwner {\n        TransferHelper.safeTransfer(address(_rewardToken), owner(), getBalance());\n        uint256 ethBalance = address(this).balance;\n        if(ethBalance > 0) {\n            TransferHelper.safeTransferETH(address(owner()), ethBalance);\n        }\n        emit EmergencyWithdraw(owner());\n    }\n    \n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    function sendRewards(uint256 amount, address user, uint256 fee) public onlyOwner {\n        require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\");\n        require(amount <= getBalance(), \"ABOAT::sendReward: Can't send more rewards than in reward system!\");\n        require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\");\n        require(canClaim(user), \"ABOAT::sendReward: Can't claim more than once per day\");\n        require(amount > fee, \"ABOAT::sendReward\");\n        _claimTimes[user] = block.timestamp;\n        amount = amount.sub(fee);\n        uint256 userEth = address(this).balance;\n        swapTokensForEth(fee);\n        TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth));\n        TransferHelper.safeTransfer(address(_rewardToken), user, amount);\n        emit SentRewards(user, amount);\n    }\n    \n    function sendRewardAsEth(uint256 amount, address user) public onlyOwner {\n        require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\");\n        require(amount <= getBalance(), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\");\n        require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\");\n        require(canClaim(user), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\");\n        _claimTimes[user] = block.timestamp;\n        uint256 ethBefore = address(this).balance;\n        swapTokensForEth(amount);\n        uint256 userEth = address(this).balance.sub(ethBefore);\n        uint256 fee = userEth.div(nativeSwapFee);\n        userEth = userEth.sub(fee);\n        TransferHelper.safeTransferETH(address(owner()), fee);\n        TransferHelper.safeTransferETH(user, userEth);\n        emit SentRewardsETH(user, userEth, fee);\n    }\n    \n    function swapTokensForEth(uint256 tokenAmount) private {\n        // generate the Enodi pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(_rewardToken);\n        path[1] = _weth;\n\n        _rewardToken.approve(address(_router), tokenAmount);\n\n        // make the swap\n        _router.swapExactTokensForKAISupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, // accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n}"
			},
			"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol": {
				"content": "pragma solidity 0.8.7;\n\ninterface IKaiDexRouter {\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityKAI(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountKAIMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountKAI, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityKAI(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountKAIMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountKAI);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactKAIForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactKAI(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForKAI(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapKAIForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n        \n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint256 liquidity,\n        uint256 amountAMin,\n        uint256 amountBMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountA, uint256 amountB);\n\n    function removeLiquidityKAIWithPermit(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountKAIMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountToken, uint256 amountKAI);\n    \n    \n    function removeLiquidityKAISupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountKAIMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountKAI);\n\n    function removeLiquidityKAIWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountKAIMin,\n        address to,\n        uint256 deadline,\n        bool approveMax,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountKAI);\n  \n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    \n    function swapExactKAIForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForKAISupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"contracts/libraries/TimeLock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nabstract contract TimeLock is Ownable {\n    using Address for address;   \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    bool public isLockEnabled = false;\n    mapping(string => uint256) public timelock;\n    uint256 private constant _TIMELOCK = 1 days;\n    address private _maintainer;  \n        \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event MaintainerTransferred(address indexed previousMaintainer, address indexed newMaintainer);\n    event UnlockedFunction(string indexed functionName, uint256 indexed unlockedAt);\n    event EnabledLock();\n    \n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    //After unlock we have to wait for _TIMELOCK before we can call the Function\n    //Additionally we have a time window of 24 hours to call the function to prevent pre-unlocked calls\n    modifier locked(string memory _fn) {\n        require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\");\n        _;\n        lockFunction(_fn);\n    }\n        \n    modifier onlyMaintainerOrOwner() {\n        require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\");\n        _;\n    }\n\n    constructor() {\n        _maintainer = msg.sender;\n    }\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function maintainer() public view returns (address) {\n        return _maintainer;\n    }\n        \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {\n        require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\");\n        address previousMaintainer = _maintainer;\n        _maintainer = _newMaintainer;\n        emit MaintainerTransferred(previousMaintainer, _maintainer);\n    }\n    \n    function setTimelockEnabled() public onlyMaintainerOrOwner {\n        isLockEnabled = true;\n        emit EnabledLock();\n    }\n\n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    //unlock timelock\n    function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = block.timestamp + _TIMELOCK;\n        emit UnlockedFunction(_fn, timelock[_fn]);\n     }\n      \n     //lock timelock\n    function lockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = 0;\n    }\n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3249:3261  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3095  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3973:3980  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4010  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2128:2141  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2160:2165  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2153:2165  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4254:4258  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4300  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4302:4308  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4278  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4326:4330  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4940:4944  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4972  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4974:4983  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4985:4991  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4965  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5027  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5041  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5107  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5195:5201  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5236:5242  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5233  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5242  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5194  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5271:5275  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5824  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5804:5811  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5850:5860  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5789  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2341:2354  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2373:2380  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2366:2380  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6469:6473  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6523  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6599  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6705  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6726:6741  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6723  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6741  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6683  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6774  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3744  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3780:3789  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3791:3797  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3765  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10243  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10268  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7623  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7684  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7803  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7803  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7886:7895  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7878:7884  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7897:7903  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7968  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:13"
															},
															"nodeType": "YulIf",
															"src": "88:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:13"
															},
															"nodeType": "YulIf",
															"src": "221:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:13"
															},
															"nodeType": "YulIf",
															"src": "404:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:13"
															},
															"nodeType": "YulIf",
															"src": "566:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:13",
																"statements": []
															},
															"src": "647:133:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:13"
															},
															"nodeType": "YulIf",
															"src": "789:80:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:13",
														"type": ""
													}
												],
												"src": "14:885:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:13"
															},
															"nodeType": "YulIf",
															"src": "1032:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:13"
															},
															"nodeType": "YulIf",
															"src": "1169:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:13"
															},
															"nodeType": "YulIf",
															"src": "1342:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:13",
														"type": ""
													}
												],
												"src": "904:562:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:13"
															},
															"nodeType": "YulIf",
															"src": "1614:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:13"
															},
															"nodeType": "YulIf",
															"src": "1684:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:13",
														"type": ""
													}
												],
												"src": "1471:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;1896:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1985:17:1;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;1321:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:10416:1;;;-1:-1:-1;1321:10416:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:13;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:13;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:13;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:13:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:13;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1321:10416:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_626": {
									"entryPoint": 1038,
									"id": 626,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_637": {
									"entryPoint": null,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_453": {
									"entryPoint": 1330,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_262": {
									"entryPoint": 600,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_376": {
									"entryPoint": 872,
									"id": 376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_337": {
									"entryPoint": 797,
									"id": 337,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_158": {
									"entryPoint": 454,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_168": {
									"entryPoint": 857,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_310": {
									"entryPoint": 622,
									"id": 310,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_223": {
									"entryPoint": 1025,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:13"
															},
															"nodeType": "YulIf",
															"src": "272:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:13",
														"type": ""
													}
												],
												"src": "192:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:13"
															},
															"nodeType": "YulIf",
															"src": "480:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:13",
														"type": ""
													}
												],
												"src": "383:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:13"
															},
															"nodeType": "YulIf",
															"src": "762:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:13",
														"type": ""
													}
												],
												"src": "648:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:13"
															},
															"nodeType": "YulIf",
															"src": "1078:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:13",
														"type": ""
													}
												],
												"src": "981:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:13",
														"type": ""
													}
												],
												"src": "1240:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:13",
																"statements": []
															},
															"src": "1712:140:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:13"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:13"
															},
															"nodeType": "YulIf",
															"src": "1861:91:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:13",
														"type": ""
													}
												],
												"src": "1432:597:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:13",
														"type": ""
													}
												],
												"src": "2034:399:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:13",
														"type": ""
													}
												],
												"src": "2438:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:13",
														"type": ""
													}
												],
												"src": "2841:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:13"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:13",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:13",
														"type": ""
													}
												],
												"src": "3248:404:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:13",
														"type": ""
													}
												],
												"src": "3657:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:13",
														"type": ""
													}
												],
												"src": "4063:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:13",
														"type": ""
													}
												],
												"src": "4468:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:13",
														"type": ""
													}
												],
												"src": "4874:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:13",
														"type": ""
													}
												],
												"src": "5056:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:13"
															},
															"nodeType": "YulIf",
															"src": "5303:136:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:13",
														"type": ""
													}
												],
												"src": "5245:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:13"
															},
															"nodeType": "YulIf",
															"src": "5618:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:13"
															},
															"nodeType": "YulIf",
															"src": "5688:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:13",
														"type": ""
													}
												],
												"src": "5475:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP2 EXTCODEHASH OR SWAP14 0xDD PUSH8 0xDC31F5E072C57F2A DUP5 SWAP13 0xA7 MUL 0xC7 SDIV ADDMOD CALLER 0xC2 EXTCODEHASH PUSH2 0xBD65 0xFB EXTCODESIZE 0x21 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1321:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:13;;1398:22;1380:41;;1368:2;1353:18;4171:166:1;1240:187:13;3162:106:1;3249:12;;3162:106;;;5020:25:13;;;5008:2;4993:18;3162:106:1;4874:177:13;4804:478:1;;;;;;:::i;:::-;;:::i;3011:91::-;;;3093:2;5198:36:13;;5186:2;5171:18;3011:91:1;5056:184:13;5677:212:1;;;;;;:::i;:::-;;:::i;3326:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3426:18:1;3400:7;3426:18;;;;;;;;;;;;3326:125;2285:102;;;:::i;6376:405::-;;;;;;:::i;:::-;;:::i;3654:172::-;;;;;;:::i;:::-;;:::i;3884:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:1;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;665:10:5;4293:7:1;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:1;4171:166;;;;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:1;;5003:24;5030:19;;;:11;:19;;;;;;;;665:10:5;5030:33:1;;;;;;;;5081:26;;;;5073:79;;;;-1:-1:-1;;;5073:79:1;;3450:2:13;5073:79:1;;;3432:21:13;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:13;;;3572:38;3627:19;;5073:79:1;;;;;;;;;5186:57;5195:6;665:10:5;5236:6:1;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:1;;4804:478;-1:-1:-1;;;;4804:478:1:o;5677:212::-;665:10:5;5765:4:1;5813:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5813:34:1;;;;;;;;;;5765:4;;5781:80;;5804:7;;5813:47;;5850:10;;5813:47;:::i;:::-;5781:8;:80::i;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;6376:405::-;665:10:5;6469:4:1;6512:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6512:34:1;;;;;;;;;;6564:35;;;;6556:85;;;;-1:-1:-1;;;6556:85:1;;4670:2:13;6556:85:1;;;4652:21:13;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:13;;;4792:35;4844:19;;6556:85:1;4468:401:13;6556:85:1;6675:67;665:10:5;6698:7:1;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:1;;6376:405;-1:-1:-1;;;6376:405:1:o;3654:172::-;3740:4;3756:42;665:10:5;3780:9:1;3791:6;3756:9;:42::i;9952:370::-;-1:-1:-1;;;;;10083:19:1;;10075:68;;;;-1:-1:-1;;;10075:68:1;;4265:2:13;10075:68:1;;;4247:21:13;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:13;;;4387:34;4438:19;;10075:68:1;4063:400:13;10075:68:1;-1:-1:-1;;;;;10161:21:1;;10153:68;;;;-1:-1:-1;;;10153:68:1;;2640:2:13;10153:68:1;;;2622:21:13;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:13;;;2762:32;2811:19;;10153:68:1;2438:398:13;10153:68:1;-1:-1:-1;;;;;10232:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10283:32;;5020:25:13;;;10283:32:1;;4993:18:13;10283:32:1;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:1;;7382:70;;;;-1:-1:-1;;;7382:70:1;;3859:2:13;7382:70:1;;;3841:21:13;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:13;;;3981:35;4033:19;;7382:70:1;3657:401:13;7382:70:1;-1:-1:-1;;;;;7470:23:1;;7462:71;;;;-1:-1:-1;;;7462:71:1;;2236:2:13;7462:71:1;;;2218:21:13;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:13;;;2358:33;2408:19;;7462:71:1;2034:399:13;7462:71:1;-1:-1:-1;;;;;7626:17:1;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:1;;3043:2:13;7653:74:1;;;3025:21:13;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:13;;;3165:36;3218:19;;7653:74:1;2841:402:13;7653:74:1;-1:-1:-1;;;;;7761:17:1;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:1;7878:6;-1:-1:-1;;;;;7869:35:1;;7897:6;7869:35;;;;5020:25:13;;5008:2;4993:18;;4874:177;7869:35:1;;;;;;;;7372:596;7255:713;;;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:13:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:13:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:13;1992:15;-1:-1:-1;;1988:29:13;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:13:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:13;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d913f179ddd67dc31f5e072c57f2a849ca702c7050833c23f61bd65fb3b214e64736f6c63430008070033",
									".code": [
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 119,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 125,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 127,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 131,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7518:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP2 PUSH19 0x36EA324C6089A89723964C09C65C4EFCCDDEAD 0xD6 PUSH15 0xBB7AD707EE6A66D364736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001817236ea324c6089a89723964c09c65c4efccddeadd66ebb7ad707ee6a66d364736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;398:6301:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x5D PUSH31 0x1A311286B46BF95E8A0E977CEDB7964D5B8B00AE9F01D43F1D773788586473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "398:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220945d7e1a311286b46bf95e8a0e977cedb7964d5b8b00ae9f01d43f1d7737885864736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chains/kardiachain/RewardSystem.sol": {
				"RewardSystem": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousFee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "ChangedFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "previousAmount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ChangedMaxAmountPerReceive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ChangedOracleWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousToken",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "ChangedRewardToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "EnabledRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "SentRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "SentRewardsETH",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_claimTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_devWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxAmountPerReceive",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_oracleWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_rewards",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_router",
							"outputs": [
								{
									"internalType": "contract IKaiDexRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_timeBetweenClaims",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "adjustMaxAmountPerReceive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "canClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "changeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracleWallet",
									"type": "address"
								}
							],
							"name": "changeOracleWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nativeSwapFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "sendRewardAsEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "sendRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IKaiDexRouter",
									"name": "router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/chains/kardiachain/RewardSystem.sol\":483:7933  contract RewardSystem is Ownable, TimeLock {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/libraries/TimeLock.sol\":765:770  false */\n  0x00\n    /* \"contracts/libraries/TimeLock.sol\":737:770  bool public isLockEnabled = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1045:1047  10 */\n  0x0a\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1014:1047  uint256 public nativeSwapFee = 10 */\n  0x05\n  dup2\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1068:1141  address public _oracleWallet = 0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19 */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1099:1141  0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19 */\n  0x76049b7caab30b8bbbdcff3a1059d9147dbf7b19\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1068:1141  address public _oracleWallet = 0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1147:1217  address public _devWallet = 0xc559aCc356D3037EC6dbc33a20587051188b8634 */\n  0x07\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1175:1217  0xc559aCc356D3037EC6dbc33a20587051188b8634 */\n  0xc559acc356d3037ec6dbc33a20587051188b8634\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1147:1217  address public _devWallet = 0xc559aCc356D3037EC6dbc33a20587051188b8634 */\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1298:1312  10000000 ether */\n  0x084595161401484a000000\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1260:1312  uint256 public _maxAmountPerReceive = 10000000 ether */\n  0x09\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1354:1360  1 days */\n  0x015180\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1318:1360  uint256 public _timeBetweenClaims = 1 days */\n  swap1\n  swap2\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1366:1431  address public _weth = 0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d */\n  0x0b\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1389:1431  0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d */\n  0xaf984e23eaa3e7967f3c5e007fbe397d8566d23d\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1366:1431  address public _weth = 0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d */\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1438:1526  IKaiDexRouter public _router = IKaiDexRouter(0xbAFcdabe65A03825a131298bE7670c0aEC77B37f) */\n  0x0c\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1483:1525  0xbAFcdabe65A03825a131298bE7670c0aEC77B37f */\n  0xbafcdabe65a03825a131298be7670c0aec77b37f\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":1438:1526  IKaiDexRouter public _router = IKaiDexRouter(0xbAFcdabe65A03825a131298bE7670c0aEC77B37f) */\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2466:2584  constructor(IERC20 rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"contracts/libraries/TimeLock.sol\":2409:2420  _maintainer */\n  0x02\n    /* \"contracts/libraries/TimeLock.sol\":2409:2433  _maintainer = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/libraries/TimeLock.sol\":2423:2433  msg.sender */\n  caller\n    /* \"contracts/libraries/TimeLock.sol\":2409:2433  _maintainer = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2508:2520  _rewardToken */\n  0x08\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2508:2534  _rewardToken = rewardToken */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2563:2576  _oracleWallet */\n  sload(0x06)\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2544:2577  changeOracleWallet(_oracleWallet) */\n  tag_14\n  swap2\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2563:2576  _oracleWallet */\n  and\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2544:2562  changeOracleWallet */\n  tag_15\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2544:2577  changeOracleWallet(_oracleWallet) */\n  jump\t// in\ntag_14:\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":2466:2584  constructor(IERC20 rewardToken) {... */\n  pop\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":483:7933  contract RewardSystem is Ownable, TimeLock {... */\n  jump(tag_63)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4227:4510  function changeOracleWallet(address oracleWallet) public onlyOwner locked(\"changeOracleWallet\") {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1365:1367   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1347:1368   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1384:1402   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1377:1407   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":1423:1441   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1416:1478   */\n  mstore\n    /* \"#utility.yul\":1495:1513   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x12\n  dup2\n  mstore\n  shl(0x72, 0x18da185b99d953dc9858db1955d85b1b195d)\n  0x20\n  dup3\n  add\n  mstore\n  0x00\n    /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n  sload\n  shl(0xa0, 0x01)\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n  iszero\n  dup1\n    /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n  tag_32\n  jumpi\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n  0x01\n    /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n  dup2\n    /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n  mload(0x40)\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n  sload\n    /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n  0x00\n    /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n  eq\n  iszero\n    /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n  dup1\n  iszero\n  tag_30\n  jumpi\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n  timestamp\n    /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n  0x01\n    /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n  dup3\n    /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n  mload(0x40)\n  tag_31\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_31:\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n  sload\n    /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n  gt\n  iszero\n    /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\ntag_30:\n    /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n  dup1\n  iszero\n  tag_32\n  jumpi\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n  timestamp\n    /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n  0x015180\n    /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n  0x01\n    /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n  dup4\n    /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n  mload(0x40)\n  tag_33\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_33:\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n  sload\n    /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n  lt\n  iszero\n    /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\ntag_32:\n    /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1726:1728   */\n  0x20\n    /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1708:1729   */\n  mstore\n    /* \"#utility.yul\":1765:1767   */\n  0x12\n    /* \"#utility.yul\":1745:1763   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1738:1768   */\n  mstore\n  shl(0x72, 0x119d5b98dd1a5bdb881a5cc81b1bd8dad959)\n    /* \"#utility.yul\":1784:1802   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1777:1825   */\n  mstore\n    /* \"#utility.yul\":1842:1860   */\n  0x64\n  add\n    /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n  tag_24\n    /* \"#utility.yul\":1524:1866   */\n  jump\n    /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\ntag_36:\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4364  transferOwnership(oracleWallet) */\n  tag_40\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4351:4363  oracleWallet */\n  dup3\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4350  transferOwnership */\n  tag_41\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4364  transferOwnership(oracleWallet) */\n  jump\t// in\ntag_40:\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4416:4444  _oracleWallet = oracleWallet */\n  dup5\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n  mload(0x40)\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n  swap2\n  and\n  swap2\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4416:4444  _oracleWallet = oracleWallet */\n  swap1\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n  dup3\n  swap1\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n  0x3920ecd0f25e4e6ce57aaec91e57df499cb7e3e70d6c9604f866ae9265382cf3\n  swap1\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4374:4390  address previous */\n  0x00\n  swap1\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n  log3\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n  tag_42\n    /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n  dup2\n    /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n  tag_43\n    /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1255:1256  _ */\n  pop\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":4227:4510  function changeOracleWallet(address oracleWallet) public onlyOwner locked(\"changeOracleWallet\") {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_41:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_48\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1365:1367   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1347:1368   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1384:1402   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1377:1407   */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"#utility.yul\":1423:1441   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1416:1478   */\n  mstore\n    /* \"#utility.yul\":1495:1513   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_24\n    /* \"#utility.yul\":1163:1519   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\ntag_48:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":958:960   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":940:961   */\n  mstore\n    /* \"#utility.yul\":997:999   */\n  0x26\n    /* \"#utility.yul\":977:995   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":970:1000   */\n  mstore\n    /* \"#utility.yul\":1036:1070   */\n  0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n    /* \"#utility.yul\":1016:1034   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1009:1071   */\n  mstore\n  shl(0xd0, 0x646472657373)\n    /* \"#utility.yul\":1087:1105   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1080:1116   */\n  mstore\n    /* \"#utility.yul\":1133:1152   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n  tag_24\n    /* \"#utility.yul\":756:1158   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\ntag_51:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n  tag_54\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n  jump\t// in\ntag_54:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\ntag_43:\n    /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n  caller\n    /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n  tag_56\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\ntag_56:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n  and\n  eq\n    /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n  dup1\n  tag_57\n  jumpi\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n    /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n  caller\n    /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n  eq\n    /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\ntag_57:\n    /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n  tag_58\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2073:2075   */\n  0x20\n    /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2055:2076   */\n  mstore\n    /* \"#utility.yul\":2112:2114   */\n  0x35\n    /* \"#utility.yul\":2092:2110   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2085:2115   */\n  mstore\n    /* \"#utility.yul\":2151:2185   */\n  0x6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420\n    /* \"#utility.yul\":2131:2149   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2124:2186   */\n  mstore\n    /* \"#utility.yul\":2222:2245   */\n  0x746f2063616c6c20746869732066756e6374696f6e0000000000000000000000\n    /* \"#utility.yul\":2202:2220   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2195:2246   */\n  mstore\n    /* \"#utility.yul\":2263:2282   */\n  0x84\n  add\n    /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n  tag_24\n    /* \"#utility.yul\":1871:2288   */\n  jump\n    /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\ntag_58:\n    /* \"contracts/libraries/TimeLock.sol\":4413:4414  0 */\n  0x00\n    /* \"contracts/libraries/TimeLock.sol\":4397:4405  timelock */\n  0x01\n    /* \"contracts/libraries/TimeLock.sol\":4406:4409  _fn */\n  dup3\n    /* \"contracts/libraries/TimeLock.sol\":4397:4410  timelock[_fn] */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_62:\n  swap1\n  dup2\n  mstore\n  mload(0x40)\n  swap1\n  dup2\n  swap1\n  sub\n  0x20\n  add\n  swap1\n  keccak256\n    /* \"contracts/libraries/TimeLock.sol\":4397:4414  timelock[_fn] = 0 */\n  sstore\n  pop\n    /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n  jump\t// out\n    /* \"#utility.yul\":14:318   */\ntag_3:\n    /* \"#utility.yul\":98:104   */\n  0x00\n    /* \"#utility.yul\":151:153   */\n  0x20\n    /* \"#utility.yul\":139:148   */\n  dup3\n    /* \"#utility.yul\":130:137   */\n  dup5\n    /* \"#utility.yul\":126:149   */\n  sub\n    /* \"#utility.yul\":122:154   */\n  slt\n    /* \"#utility.yul\":119:171   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":167:168   */\n  0x00\n    /* \"#utility.yul\":164:165   */\n  dup1\n    /* \"#utility.yul\":157:169   */\n  revert\n    /* \"#utility.yul\":119:171   */\ntag_65:\n    /* \"#utility.yul\":193:209   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":238:269   */\n  dup2\n  and\n    /* \"#utility.yul\":228:270   */\n  dup2\n  eq\n    /* \"#utility.yul\":218:288   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":284:285   */\n  0x00\n    /* \"#utility.yul\":281:282   */\n  dup1\n    /* \"#utility.yul\":274:286   */\n  revert\n    /* \"#utility.yul\":218:288   */\ntag_66:\n    /* \"#utility.yul\":307:312   */\n  swap4\n    /* \"#utility.yul\":14:318   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":323:751   */\ntag_29:\n    /* \"#utility.yul\":454:457   */\n  0x00\n    /* \"#utility.yul\":492:498   */\n  dup3\n    /* \"#utility.yul\":486:499   */\n  mload\n    /* \"#utility.yul\":517:518   */\n  0x00\n    /* \"#utility.yul\":527:656   */\ntag_68:\n    /* \"#utility.yul\":541:547   */\n  dup2\n    /* \"#utility.yul\":538:539   */\n  dup2\n    /* \"#utility.yul\":535:548   */\n  lt\n    /* \"#utility.yul\":527:656   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":639:643   */\n  0x20\n    /* \"#utility.yul\":623:637   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":619:644   */\n  dup2\n  add\n    /* \"#utility.yul\":613:645   */\n  mload\n    /* \"#utility.yul\":600:611   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":593:646   */\n  mstore\n    /* \"#utility.yul\":556:568   */\n  add\n    /* \"#utility.yul\":527:656   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":674:680   */\n  dup2\n    /* \"#utility.yul\":671:672   */\n  dup2\n    /* \"#utility.yul\":668:681   */\n  gt\n    /* \"#utility.yul\":665:713   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":709:710   */\n  0x00\n    /* \"#utility.yul\":700:706   */\n  dup3\n    /* \"#utility.yul\":695:698   */\n  dup6\n    /* \"#utility.yul\":691:707   */\n  add\n    /* \"#utility.yul\":684:711   */\n  mstore\n    /* \"#utility.yul\":665:713   */\ntag_71:\n  pop\n    /* \"#utility.yul\":729:745   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":323:751   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2293:2518   */\ntag_35:\n    /* \"#utility.yul\":2333:2336   */\n  0x00\n    /* \"#utility.yul\":2364:2365   */\n  dup3\n    /* \"#utility.yul\":2360:2366   */\n  not\n    /* \"#utility.yul\":2357:2358   */\n  dup3\n    /* \"#utility.yul\":2354:2367   */\n  gt\n    /* \"#utility.yul\":2351:2487   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2409:2419   */\n  0x4e487b71\n    /* \"#utility.yul\":2404:2407   */\n  0xe0\n    /* \"#utility.yul\":2400:2420   */\n  shl\n    /* \"#utility.yul\":2397:2398   */\n  0x00\n    /* \"#utility.yul\":2390:2421   */\n  mstore\n    /* \"#utility.yul\":2444:2448   */\n  0x11\n    /* \"#utility.yul\":2441:2442   */\n  0x04\n    /* \"#utility.yul\":2434:2449   */\n  mstore\n    /* \"#utility.yul\":2472:2476   */\n  0x24\n    /* \"#utility.yul\":2469:2470   */\n  0x00\n    /* \"#utility.yul\":2462:2477   */\n  revert\n    /* \"#utility.yul\":2351:2487   */\ntag_77:\n  pop\n    /* \"#utility.yul\":2503:2512   */\n  add\n  swap1\n    /* \"#utility.yul\":2293:2518   */\n  jump\t// out\ntag_63:\n    /* \"contracts/chains/kardiachain/RewardSystem.sol\":483:7933  contract RewardSystem is Ownable, TimeLock {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n\nsub_0: assembly {\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":483:7933  contract RewardSystem is Ownable, TimeLock {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa221a15f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xde996a6e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf4762fd6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf4762fd6\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf7e77bc2\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf98080c0\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xde996a6e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe7b6ebba\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xedae876f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xbf3506c1\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xbf3506c1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc07a1d4d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0xa221a15f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa347511a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa607494a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb59c6e0e\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x70ed0ada\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x9850d32b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x9850d32b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f371995\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9f531156\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa1764595\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x70ed0ada\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7d6dfb7e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x13ea5d29\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x13ea5d29\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5dd53826\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x63cd79b7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a1db1bf\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x0126ffb9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x11a63e17\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1318:1360  uint256 public _timeBetweenClaims = 1 days */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      sload(0x0a)\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":12189:12214   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":12177:12179   */\n      0x20\n        /* \"#utility.yul\":12162:12180   */\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1318:1360  uint256 public _timeBetweenClaims = 1 days */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1147:1217  address public _devWallet = 0xc559aCc356D3037EC6dbc33a20587051188b8634 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sload(0x07)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3821:3853   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3803:3854   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3791:3793   */\n      0x20\n        /* \"#utility.yul\":3776:3794   */\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1147:1217  address public _devWallet = 0xc559aCc356D3037EC6dbc33a20587051188b8634 */\n      tag_46\n        /* \"#utility.yul\":3657:3860   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":2953:3066  function getBalance() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_44\n      tag_55\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1260:1312  uint256 public _maxAmountPerReceive = 10000000 ether */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_44\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4227:4510  function changeOracleWallet(address oracleWallet) public onlyOwner locked(\"changeOracleWallet\") {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_58\n      tag_68\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4617:4776  function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_58\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3072:3172  function getEthBalance() public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3144:3165  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3072:3172  function getEthBalance() public view returns (uint256) {... */\n      jump(tag_44)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_58\n      tag_81\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":916:956  mapping(address => bool) public _rewards */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_83:\n      mload(0x40)\n        /* \"#utility.yul\":4309:4323   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4302:4324   */\n      iszero\n        /* \"#utility.yul\":4284:4325   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4272:4274   */\n      0x20\n        /* \"#utility.yul\":4257:4275   */\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":916:956  mapping(address => bool) public _rewards */\n      tag_46\n        /* \"#utility.yul\":4144:4331   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump(tag_49)\n        /* \"contracts/libraries/TimeLock.sol\":2770:2857  function maintainer() public view returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2839:2850  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2770:2857  function maintainer() public view returns (address) {... */\n      jump(tag_49)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5455:6390  function sendRewards(uint256 amount, address user, uint256 fee) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_58\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_58\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1366:1431  address public _weth = 0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      sload(0x0b)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1068:1141  address public _oracleWallet = 0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      sload(0x06)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":737:770  bool public isLockEnabled = false */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      sload(0x00)\n      tag_83\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_58\n      tag_120\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1228:1254  IERC20 public _rewardToken */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      sload(0x08)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3180:3320  function canClaim(address user) public view returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_83\n      tag_129\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1014:1047  uint256 public nativeSwapFee = 10 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_44\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4520:4611  function setRouter(IKaiDexRouter router) public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_58\n      tag_138\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_138:\n      tag_140\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4782:5124  function emergencyWithdraw() public onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_58\n      tag_143\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3651:3881  function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_58\n      tag_146\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6400:7378  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_58\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":1438:1526  IKaiDexRouter public _router = IKaiDexRouter(0xbAFcdabe65A03825a131298bE7670c0aEC77B37f) */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      sload(0x0c)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_58\n      tag_160\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_58\n      tag_164\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":962:1008  mapping(address => uint256) public _claimTimes */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_44\n      tag_167\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_167:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3891:4217  function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_58\n      tag_172\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_172:\n      tag_174\n      jump\t// in\n        /* \"contracts/libraries/TimeLock.sol\":776:818  mapping(string => uint256) public timelock */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_44\n      tag_177\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_177:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x01\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      dup2\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":2953:3066  function getBalance() public view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3034  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3059  _rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3053:3057  this */\n      address\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3059  _rewardToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3803:3854   */\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":2996:3003  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3034  _rewardToken */\n      and\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3044  _rewardToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3776:3794   */\n      0x24\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3022:3059  _rewardToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3015:3059  return _rewardToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":2953:3066  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n    tag_61:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_189\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_189:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0a\n      dup2\n      mstore\n      shl(0xb1, 0x36b0b4b73a30b4b732b9)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_195:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_198:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_197:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_200:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_199:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_205\n      jump\t// in\n    tag_203:\n        /* \"contracts/libraries/TimeLock.sol\":3324:3335  _maintainer */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3306:3335  _newMaintainer != _maintainer */\n      dup4\n      dup2\n      and\n        /* \"contracts/libraries/TimeLock.sol\":3324:3335  _maintainer */\n      swap2\n      and\n        /* \"contracts/libraries/TimeLock.sol\":3306:3335  _newMaintainer != _maintainer */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3306:3367  _newMaintainer != _maintainer && _newMaintainer != address(0) */\n      tag_207\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3339:3367  _newMaintainer != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":3306:3367  _newMaintainer != _maintainer && _newMaintainer != address(0) */\n    tag_207:\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7490:7492   */\n      0x20\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7472:7493   */\n      mstore\n        /* \"#utility.yul\":7529:7531   */\n      0x50\n        /* \"#utility.yul\":7509:7527   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7502:7532   */\n      mstore\n        /* \"#utility.yul\":7568:7602   */\n      0x41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e6572\n        /* \"#utility.yul\":7548:7566   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7541:7603   */\n      mstore\n        /* \"#utility.yul\":7639:7673   */\n      0x2063616e277420657175616c2070726576696f7573206d61696e7461696e6572\n        /* \"#utility.yul\":7619:7637   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7612:7674   */\n      mstore\n      shl(0x80, 0x206f72207a65726f2061646472657373)\n        /* \"#utility.yul\":7690:7709   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7683:7730   */\n      mstore\n        /* \"#utility.yul\":7747:7766   */\n      0xa4\n      add\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n      tag_191\n        /* \"#utility.yul\":7288:7772   */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":3298:3453  require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\") */\n    tag_208:\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":3513:3541  _maintainer = _newMaintainer */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      mload(0x40)\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      swap2\n      and\n      swap2\n        /* \"contracts/libraries/TimeLock.sol\":3513:3541  _maintainer = _newMaintainer */\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3492:3503  _maintainer */\n      dup3\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      0x2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf01\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3463:3489  address previousMaintainer */\n      0x00\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3556:3610  MaintainerTransferred(previousMaintainer, _maintainer) */\n      log3\n        /* \"contracts/libraries/TimeLock.sol\":3288:3617  {... */\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_211\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_105\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/libraries/TimeLock.sol\":2371:2372  _ */\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":3191:3617  function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {... */\n      pop\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4227:4510  function changeOracleWallet(address oracleWallet) public onlyOwner locked(\"changeOracleWallet\") {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_216:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x12\n      dup2\n      mstore\n      shl(0x72, 0x18da185b99d953dc9858db1955d85b1b195d)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_221:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_223\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_223:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_222:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_225:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_226\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_226:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_224:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_205\n      jump\t// in\n    tag_227:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4364  transferOwnership(oracleWallet) */\n      tag_230\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4351:4363  oracleWallet */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4350  transferOwnership */\n      tag_161\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4333:4364  transferOwnership(oracleWallet) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4416:4444  _oracleWallet = oracleWallet */\n      dup5\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n      mload(0x40)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n      swap2\n      and\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4416:4444  _oracleWallet = oracleWallet */\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4393:4406  _oracleWallet */\n      dup3\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n      0x3920ecd0f25e4e6ce57aaec91e57df499cb7e3e70d6c9604f866ae9265382cf3\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4374:4390  address previous */\n      0x00\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4459:4503  ChangedOracleWallet(previous, _oracleWallet) */\n      log3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4323:4510  {... */\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_211\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_105\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4617:4776  function changeFee(uint256 newFee) public onlyOwner locked(\"changeFee\") {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_235:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      shl(0xb8, 0x6368616e6765466565)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_239:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_241\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_241:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_240:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_243\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_243:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_244\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_244:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_242:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_205\n      jump\t// in\n    tag_245:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4715:4728  nativeSwapFee */\n      sload(0x05)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4704:4737  ChangedFee(nativeSwapFee, newFee) */\n      mload(0x40)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4730:4736  newFee */\n      dup4\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4715:4728  nativeSwapFee */\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4704:4737  ChangedFee(nativeSwapFee, newFee) */\n      0xce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb149\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4747:4760  nativeSwapFee */\n      0x05\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4747:4769  nativeSwapFee = newFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_211\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_105\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5455:6390  function sendRewards(uint256 amount, address user, uint256 fee) public onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_263:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5562:5569  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5546:5657  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10020:10022   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5546:5657  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10002:10023   */\n      mstore\n        /* \"#utility.yul\":10059:10061   */\n      0x44\n        /* \"#utility.yul\":10039:10057   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10032:10062   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10098:10132   */\n      0x41424f41543a3a73656e645265776172643a205468657265206973206e6f2072\n        /* \"#utility.yul\":10078:10096   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10071:10133   */\n      mstore\n        /* \"#utility.yul\":10169:10203   */\n      0x6f7574657220646566696e656420746f207377617020746f6b656e7320666f72\n        /* \"#utility.yul\":10149:10167   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10142:10204   */\n      mstore\n      shl(0xe3, 0x040cae8d)\n        /* \"#utility.yul\":10220:10239   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10213:10248   */\n      mstore\n        /* \"#utility.yul\":10265:10284   */\n      0xa4\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5546:5657  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n      tag_191\n        /* \"#utility.yul\":9818:10290   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5546:5657  require(address(_router) != address(0), \"ABOAT::sendReward: There is no router defined to swap tokens for eth\") */\n    tag_266:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5685:5697  getBalance() */\n      tag_269\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5685:5695  getBalance */\n      tag_55\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5685:5697  getBalance() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5675:5681  amount */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5675:5697  amount <= getBalance() */\n      gt\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5667:5767  require(amount <= getBalance(), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6241:6243   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5667:5767  require(amount <= getBalance(), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6223:6244   */\n      mstore\n        /* \"#utility.yul\":6280:6282   */\n      0x41\n        /* \"#utility.yul\":6260:6278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6253:6283   */\n      mstore\n        /* \"#utility.yul\":6319:6353   */\n      0x41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f\n        /* \"#utility.yul\":6299:6317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6292:6354   */\n      mstore\n        /* \"#utility.yul\":6390:6424   */\n      0x72652072657761726473207468616e20696e207265776172642073797374656d\n        /* \"#utility.yul\":6370:6388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6363:6425   */\n      mstore\n      shl(0xf8, 0x21)\n        /* \"#utility.yul\":6441:6460   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6434:6466   */\n      mstore\n        /* \"#utility.yul\":6483:6502   */\n      0xa4\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5667:5767  require(amount <= getBalance(), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n      tag_191\n        /* \"#utility.yul\":6039:6508   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5667:5767  require(amount <= getBalance(), \"ABOAT::sendReward: Can't send more rewards than in reward system!\") */\n    tag_270:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5795:5815  _maxAmountPerReceive */\n      sload(0x09)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5785:5791  amount */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5785:5815  amount <= _maxAmountPerReceive */\n      gt\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5777:5874  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5777:5874  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5379:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5438   */\n      0x36\n        /* \"#utility.yul\":5416:5434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5409:5439   */\n      mstore\n        /* \"#utility.yul\":5475:5509   */\n      0x41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f\n        /* \"#utility.yul\":5455:5473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5448:5510   */\n      mstore\n      shl(0x50, 0x72652072657761726473207468616e206c696d697421)\n        /* \"#utility.yul\":5526:5544   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5519:5571   */\n      mstore\n        /* \"#utility.yul\":5588:5607   */\n      0x84\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5777:5874  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n      tag_191\n        /* \"#utility.yul\":5195:5613   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5777:5874  require(amount <= _maxAmountPerReceive, \"ABOAT::sendReward: Can't send more rewards than limit!\") */\n    tag_273:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5892:5906  canClaim(user) */\n      tag_276\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5901:5905  user */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5892:5900  canClaim */\n      tag_130\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5892:5906  canClaim(user) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5884:5964  require(canClaim(user), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11823:11825   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5884:5964  require(canClaim(user), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11805:11826   */\n      mstore\n        /* \"#utility.yul\":11862:11864   */\n      0x35\n        /* \"#utility.yul\":11842:11860   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11835:11865   */\n      mstore\n        /* \"#utility.yul\":11901:11935   */\n      0x41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d\n        /* \"#utility.yul\":11881:11899   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11874:11936   */\n      mstore\n      shl(0x58, 0x6f7265207468616e206f6e63652070657220646179)\n        /* \"#utility.yul\":11952:11970   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11945:11996   */\n      mstore\n        /* \"#utility.yul\":12013:12032   */\n      0x84\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5884:5964  require(canClaim(user), \"ABOAT::sendReward: Can't claim more than once per day\") */\n      tag_191\n        /* \"#utility.yul\":11621:12038   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5884:5964  require(canClaim(user), \"ABOAT::sendReward: Can't claim more than once per day\") */\n    tag_277:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5991:5994  fee */\n      dup1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5982:5988  amount */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5982:5994  amount > fee */\n      gt\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5974:6016  require(amount > fee, \"ABOAT::sendReward\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6715:6717   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5974:6016  require(amount > fee, \"ABOAT::sendReward\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6697:6718   */\n      mstore\n        /* \"#utility.yul\":6754:6756   */\n      0x11\n        /* \"#utility.yul\":6734:6752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6727:6757   */\n      mstore\n      shl(0x7a, 0x105093d0550e8e9cd95b9914995dd85c99)\n        /* \"#utility.yul\":6773:6791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6766:6813   */\n      mstore\n        /* \"#utility.yul\":6830:6848   */\n      0x64\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5974:6016  require(amount > fee, \"ABOAT::sendReward\") */\n      tag_191\n        /* \"#utility.yul\":6513:6854   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5974:6016  require(amount > fee, \"ABOAT::sendReward\") */\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6026:6043  _claimTimes[user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6026:6037  _claimTimes */\n      0x04\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6026:6043  _claimTimes[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6046:6061  block.timestamp */\n      timestamp\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6026:6061  _claimTimes[user] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6080:6095  amount.sub(fee) */\n      tag_283\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6080:6086  amount */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6091:6094  fee */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6080:6090  amount.sub */\n      tag_284\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6080:6095  amount.sub(fee) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6071:6095  amount = amount.sub(fee) */\n      swap3\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6123:6144  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6154:6175  swapTokensForEth(fee) */\n      tag_285\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6171:6174  fee */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6154:6170  swapTokensForEth */\n      tag_286\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6154:6175  swapTokensForEth(fee) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6185:6269  TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth)) */\n      tag_287\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6224:6231  owner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6224:6231  owner() */\n    tag_288:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6234:6268  address(this).balance.sub(userEth) */\n      tag_289\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6234:6255  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6260:6267  userEth */\n      dup5\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6234:6259  address(this).balance.sub */\n      tag_284\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6234:6268  address(this).balance.sub(userEth) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6185:6215  TransferHelper.safeTransferETH */\n      tag_290\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6185:6269  TransferHelper.safeTransferETH(address(owner()), address(this).balance.sub(userEth)) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6315:6327  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6279:6343  TransferHelper.safeTransfer(address(_rewardToken), user, amount) */\n      tag_291\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6315:6327  _rewardToken */\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6330:6334  user */\n      dup5\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6336:6342  amount */\n      dup7\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6279:6306  TransferHelper.safeTransfer */\n      tag_292\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6279:6343  TransferHelper.safeTransfer(address(_rewardToken), user, amount) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6358:6383  SentRewards(user, amount) */\n      mload(0x40)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6376:6382  amount */\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6358:6383  SentRewards(user, amount) */\n      dup6\n      and\n      swap1\n      0xd9d5e983e9e8a6571ffbeafa6a3c2fbd9f0f44e52607977b5e1e7934f7d91bfc\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5536:6390  {... */\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5455:6390  function sendRewards(uint256 amount, address user, uint256 fee) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_105:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_295\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_295:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_296:\n        /* \"contracts/libraries/TimeLock.sol\":4413:4414  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":4397:4405  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4406:4409  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":4397:4410  timelock[_fn] */\n      mload(0x40)\n      tag_299\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_299:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/libraries/TimeLock.sol\":4397:4414  timelock[_fn] = 0 */\n      sstore\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":4317:4421  function lockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n    tag_121:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_302\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_302:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_303:\n        /* \"contracts/libraries/TimeLock.sol\":4198:4225  block.timestamp + _TIMELOCK */\n      tag_306\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":4198:4213  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":4198:4225  block.timestamp + _TIMELOCK */\n      tag_202\n      jump\t// in\n    tag_306:\n        /* \"contracts/libraries/TimeLock.sol\":4182:4190  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4191:4194  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":4182:4195  timelock[_fn] */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_307:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/libraries/TimeLock.sol\":4182:4225  timelock[_fn] = block.timestamp + _TIMELOCK */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":4262:4270  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":4271:4274  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":4262:4275  timelock[_fn] */\n      mload(0x40)\n      tag_308\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_308:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":4257:4260  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":4240:4276  UnlockedFunction(_fn, timelock[_fn]) */\n      mload(0x40)\n      tag_309\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      0xf77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c8\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/libraries/TimeLock.sol\":4100:4284  function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3180:3320  function canClaim(address user) public view returns (bool) {... */\n    tag_130:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3276:3294  _timeBetweenClaims */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3273  _claimTimes[user] */\n      dup3\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3233:3237  bool */\n      0x00\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3273  _claimTimes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3267  _claimTimes */\n      0x04\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3273  _claimTimes[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3233:3237  bool */\n      swap1\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3298:3313  block.timestamp */\n      timestamp\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3294  _claimTimes[user] + _timeBetweenClaims */\n      tag_311\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3276:3294  _timeBetweenClaims */\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3294  _claimTimes[user] + _timeBetweenClaims */\n      tag_202\n      jump\t// in\n    tag_311:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3256:3313  _claimTimes[user] + _timeBetweenClaims <= block.timestamp */\n      gt\n      iszero\n      swap3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3180:3320  function canClaim(address user) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4520:4611  function setRouter(IKaiDexRouter router) public onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_315:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4588:4595  _router */\n      0x0c\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4588:4604  _router = router */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4520:4611  function setRouter(IKaiDexRouter router) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4782:5124  function emergencyWithdraw() public onlyOwner {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_321:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4874:4886  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4838:4911  TransferHelper.safeTransfer(address(_rewardToken), owner(), getBalance()) */\n      tag_324\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4874:4886  _rewardToken */\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4889:4896  owner() */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4889:4896  owner() */\n    tag_325:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4898:4910  getBalance() */\n      tag_326\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4898:4908  getBalance */\n      tag_55\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4898:4910  getBalance() */\n      jump\t// in\n    tag_326:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4838:4865  TransferHelper.safeTransfer */\n      tag_292\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4838:4911  TransferHelper.safeTransfer(address(_rewardToken), owner(), getBalance()) */\n      jump\t// in\n    tag_324:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4942:4963  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4976:4990  ethBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4973:5077  if(ethBalance > 0) {... */\n      tag_328\n      jumpi\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5006:5066  TransferHelper.safeTransferETH(address(owner()), ethBalance) */\n      tag_328\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5045:5052  owner() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5045:5052  owner() */\n    tag_329:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5055:5065  ethBalance */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5006:5036  TransferHelper.safeTransferETH */\n      tag_290\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5006:5066  TransferHelper.safeTransferETH(address(owner()), ethBalance) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      dup1\n      sload\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5091:5117  EmergencyWithdraw(owner()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":5091:5117  EmergencyWithdraw(owner()) */\n      0x5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a2\n      swap2\n      log2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4828:5124  {... */\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4782:5124  function emergencyWithdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3651:3881  function adjustMaxAmountPerReceive(uint256 newAmount) public onlyOwner locked(\"adjustMaxAmountPerReceive\") {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x19\n      dup2\n      mstore\n      0x61646a7573744d6178416d6f756e745065725265636569766500000000000000\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_341\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_338\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_338:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_339\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_340\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_340:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_339:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_342\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_342:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_343\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_343:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_341:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_205\n      jump\t// in\n    tag_344:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3800:3820  _maxAmountPerReceive */\n      sload(0x09)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3773:3832  ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount) */\n      mload(0x40)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3822:3831  newAmount */\n      dup4\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3800:3820  _maxAmountPerReceive */\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3773:3832  ChangedMaxAmountPerReceive(_maxAmountPerReceive, newAmount) */\n      0xd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3842:3862  _maxAmountPerReceive */\n      0x09\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3842:3874  _maxAmountPerReceive = newAmount */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_211\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_105\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6400:7378  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_351:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6498:6505  _router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6482:6599  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8340:8342   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6482:6599  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8322:8343   */\n      mstore\n        /* \"#utility.yul\":8379:8381   */\n      0x4a\n        /* \"#utility.yul\":8359:8377   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8352:8382   */\n      mstore\n        /* \"#utility.yul\":8418:8452   */\n      0x41424f41543a3a73656e645265776172647341734574683a2054686572652069\n        /* \"#utility.yul\":8398:8416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8391:8453   */\n      mstore\n        /* \"#utility.yul\":8489:8523   */\n      0x73206e6f20726f7574657220646566696e656420746f207377617020746f6b65\n        /* \"#utility.yul\":8469:8487   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8462:8524   */\n      mstore\n      shl(0xb3, 0x0dce640ccdee440cae8d)\n        /* \"#utility.yul\":8540:8559   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8533:8574   */\n      mstore\n        /* \"#utility.yul\":8591:8610   */\n      0xa4\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6482:6599  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n      tag_191\n        /* \"#utility.yul\":8138:8616   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6482:6599  require(address(_router) != address(0), \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\") */\n    tag_354:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6627:6639  getBalance() */\n      tag_357\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6627:6637  getBalance */\n      tag_55\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6627:6639  getBalance() */\n      jump\t// in\n    tag_357:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6617:6623  amount */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6617:6639  amount <= getBalance() */\n      gt\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6609:6715  require(amount <= getBalance(), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10497:10499   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6609:6715  require(amount <= getBalance(), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10479:10500   */\n      mstore\n        /* \"#utility.yul\":10536:10538   */\n      0x47\n        /* \"#utility.yul\":10516:10534   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10509:10539   */\n      mstore\n        /* \"#utility.yul\":10575:10609   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742073\n        /* \"#utility.yul\":10555:10573   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10548:10610   */\n      mstore\n        /* \"#utility.yul\":10646:10680   */\n      0x656e64206d6f72652072657761726473207468616e20696e2072657761726420\n        /* \"#utility.yul\":10626:10644   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10619:10681   */\n      mstore\n      shl(0xc8, 0x73797374656d21)\n        /* \"#utility.yul\":10697:10716   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10690:10728   */\n      mstore\n        /* \"#utility.yul\":10745:10764   */\n      0xa4\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6609:6715  require(amount <= getBalance(), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n      tag_191\n        /* \"#utility.yul\":10295:10770   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6609:6715  require(amount <= getBalance(), \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\") */\n    tag_358:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6743:6763  _maxAmountPerReceive */\n      sload(0x09)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6733:6739  amount */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6733:6763  amount <= _maxAmountPerReceive */\n      gt\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6725:6828  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6725:6828  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7043:7064   */\n      mstore\n        /* \"#utility.yul\":7100:7102   */\n      0x3c\n        /* \"#utility.yul\":7080:7098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7073:7103   */\n      mstore\n        /* \"#utility.yul\":7139:7173   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742073\n        /* \"#utility.yul\":7119:7137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7112:7174   */\n      mstore\n        /* \"#utility.yul\":7210:7240   */\n      0x656e64206d6f72652072657761726473207468616e206c696d69742100000000\n        /* \"#utility.yul\":7190:7208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7183:7241   */\n      mstore\n        /* \"#utility.yul\":7258:7277   */\n      0x84\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6725:6828  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n      tag_191\n        /* \"#utility.yul\":6859:7283   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6725:6828  require(amount <= _maxAmountPerReceive, \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\") */\n    tag_361:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6846:6860  canClaim(user) */\n      tag_364\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6855:6859  user */\n      dup2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6846:6854  canClaim */\n      tag_130\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6846:6860  canClaim(user) */\n      jump\t// in\n    tag_364:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6838:6924  require(canClaim(user), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8823:8825   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6838:6924  require(canClaim(user), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8805:8826   */\n      mstore\n        /* \"#utility.yul\":8862:8864   */\n      0x3b\n        /* \"#utility.yul\":8842:8860   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8835:8865   */\n      mstore\n        /* \"#utility.yul\":8901:8935   */\n      0x41424f41543a3a73656e645265776172647341734574683a2043616e27742063\n        /* \"#utility.yul\":8881:8899   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8874:8936   */\n      mstore\n        /* \"#utility.yul\":8972:9001   */\n      0x6c61696d206d6f7265207468616e206f6e636520706572206461790000000000\n        /* \"#utility.yul\":8952:8970   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8945:9002   */\n      mstore\n        /* \"#utility.yul\":9019:9038   */\n      0x84\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6838:6924  require(canClaim(user), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n      tag_191\n        /* \"#utility.yul\":8621:9044   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6838:6924  require(canClaim(user), \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\") */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6934:6951  _claimTimes[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6934:6945  _claimTimes */\n      0x04\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6934:6951  _claimTimes[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6954:6969  block.timestamp */\n      timestamp\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6934:6969  _claimTimes[user] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6999:7020  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7030:7054  swapTokensForEth(amount) */\n      tag_368\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7047:7053  amount */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7030:7046  swapTokensForEth */\n      tag_286\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7030:7054  swapTokensForEth(amount) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7064:7079  uint256 userEth */\n      0x00\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7082:7118  address(this).balance.sub(ethBefore) */\n      tag_369\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7082:7103  address(this).balance */\n      selfbalance\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7108:7117  ethBefore */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7082:7107  address(this).balance.sub */\n      tag_284\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7082:7118  address(this).balance.sub(ethBefore) */\n      jump\t// in\n    tag_369:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7064:7118  uint256 userEth = address(this).balance.sub(ethBefore) */\n      swap1\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7128:7139  uint256 fee */\n      0x00\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7142:7168  userEth.div(nativeSwapFee) */\n      tag_370\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7154:7167  nativeSwapFee */\n      sload(0x05)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7142:7149  userEth */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7142:7153  userEth.div */\n      tag_371\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7142:7168  userEth.div(nativeSwapFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7128:7168  uint256 fee = userEth.div(nativeSwapFee) */\n      swap1\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7188:7204  userEth.sub(fee) */\n      tag_372\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7188:7195  userEth */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7128:7168  uint256 fee = userEth.div(nativeSwapFee) */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7188:7199  userEth.sub */\n      tag_284\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7188:7204  userEth.sub(fee) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7178:7204  userEth = userEth.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7214:7267  TransferHelper.safeTransferETH(address(owner()), fee) */\n      tag_373\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7253:7260  owner() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7214:7267  TransferHelper.safeTransferETH(address(owner()), fee) */\n    tag_373:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7277:7322  TransferHelper.safeTransferETH(user, userEth) */\n      tag_375\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7308:7312  user */\n      dup5\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7314:7321  userEth */\n      dup4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7277:7307  TransferHelper.safeTransferETH */\n      tag_290\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7277:7322  TransferHelper.safeTransferETH(user, userEth) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7367:7370  fee */\n      dup1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7358:7365  userEth */\n      dup3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7352:7356  user */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7337:7371  SentRewardsETH(user, userEth, fee) */\n      and\n      0x75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d53431\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6472:7378  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":6400:7378  function sendRewardAsEth(uint256 amount, address user) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4972:4993   */\n      mstore\n        /* \"#utility.yul\":5029:5031   */\n      0x26\n        /* \"#utility.yul\":5009:5027   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5002:5032   */\n      mstore\n        /* \"#utility.yul\":5068:5102   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5048:5066   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5041:5103   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5119:5137   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5112:5148   */\n      mstore\n        /* \"#utility.yul\":5165:5184   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_191\n        /* \"#utility.yul\":4788:5190   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_382:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_385\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n    tag_164:\n        /* \"contracts/libraries/TimeLock.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n      tag_387\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/libraries/TimeLock.sol\":2253:2260  owner() */\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TimeLock.sol\":2253:2274  owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n      dup1\n      tag_388\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2278:2289  _maintainer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/libraries/TimeLock.sol\":2293:2303  msg.sender */\n      caller\n        /* \"contracts/libraries/TimeLock.sol\":2278:2303  _maintainer == msg.sender */\n      eq\n        /* \"contracts/libraries/TimeLock.sol\":2253:2303  owner() == msg.sender || _maintainer == msg.sender */\n    tag_388:\n        /* \"contracts/libraries/TimeLock.sol\":2245:2361  require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_389:\n        /* \"contracts/libraries/TimeLock.sol\":3696:3709  isLockEnabled */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":3696:3716  isLockEnabled = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":3731:3744  EnabledLock() */\n      mload(0x40)\n      0x2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e\n      swap2\n        /* \"contracts/libraries/TimeLock.sol\":3696:3709  isLockEnabled */\n      swap1\n        /* \"contracts/libraries/TimeLock.sol\":3731:3744  EnabledLock() */\n      log1\n        /* \"contracts/libraries/TimeLock.sol\":3627:3751  function setTimelockEnabled() public onlyMaintainerOrOwner {... */\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3891:4217  function updateRewardToken(IERC20 rewardToken) public onlyOwner locked(\"updateRewardToken\") {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_218\n      jump\t// in\n    tag_395:\n        /* \"contracts/libraries/TimeLock.sol\":1945:2188  modifier locked(string memory _fn) {... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x11\n      dup2\n      mstore\n      shl(0x79, 0x3ab83230ba32a932bbb0b9322a37b5b2b7)\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":1999:2012  isLockEnabled */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/libraries/TimeLock.sol\":1998:2012  !isLockEnabled */\n      iszero\n      dup1\n        /* \"contracts/libraries/TimeLock.sol\":1998:2120  !isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp) */\n      tag_402\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2017:2025  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2026:2029  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2017:2030  timelock[_fn] */\n      mload(0x40)\n      tag_399\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_399:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2034:2035  0 */\n      0x00\n        /* \"contracts/libraries/TimeLock.sol\":2017:2035  timelock[_fn] != 0 */\n      eq\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n      dup1\n      iszero\n      tag_400\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2056:2071  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":2039:2047  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2048:2051  _fn */\n      dup3\n        /* \"contracts/libraries/TimeLock.sol\":2039:2052  timelock[_fn] */\n      mload(0x40)\n      tag_401\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_401:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2039:2071  timelock[_fn] <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2071  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp */\n    tag_400:\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n        /* \"contracts/libraries/TimeLock.sol\":2104:2119  block.timestamp */\n      timestamp\n        /* \"contracts/libraries/TimeLock.sol\":861:867  1 days */\n      0x015180\n        /* \"contracts/libraries/TimeLock.sol\":2075:2083  timelock */\n      0x01\n        /* \"contracts/libraries/TimeLock.sol\":2084:2087  _fn */\n      dup4\n        /* \"contracts/libraries/TimeLock.sol\":2075:2088  timelock[_fn] */\n      mload(0x40)\n      tag_403\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_403:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/TimeLock.sol\":2075:2100  timelock[_fn] + _TIMELOCK */\n      tag_404\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_404:\n        /* \"contracts/libraries/TimeLock.sol\":2075:2119  timelock[_fn] + _TIMELOCK >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/libraries/TimeLock.sol\":2017:2119  timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp */\n    tag_402:\n        /* \"contracts/libraries/TimeLock.sol\":1990:2143  require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_205\n      jump\t// in\n    tag_405:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4016:4028  _rewardToken */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4001:4028  rewardToken != _rewardToken */\n      dup4\n      dup2\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4016:4028  _rewardToken */\n      swap2\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4001:4028  rewardToken != _rewardToken */\n      eq\n      iszero\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3993:4096  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      tag_408\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10977:10979   */\n      0x20\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3993:4096  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10959:10980   */\n      mstore\n        /* \"#utility.yul\":11016:11018   */\n      0x3f\n        /* \"#utility.yul\":10996:11014   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10989:11019   */\n      mstore\n        /* \"#utility.yul\":11055:11089   */\n      0x41424f41543a757064617465526577617264546f6b656e3a20596f752063616e\n        /* \"#utility.yul\":11035:11053   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11028:11090   */\n      mstore\n        /* \"#utility.yul\":11126:11159   */\n      0x277420757064617465207468652065786163742073616d6520746f6b656e7300\n        /* \"#utility.yul\":11106:11124   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11099:11160   */\n      mstore\n        /* \"#utility.yul\":11177:11196   */\n      0x84\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3993:4096  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n      tag_191\n        /* \"#utility.yul\":10775:11202   */\n      jump\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":3993:4096  require(rewardToken != _rewardToken, \"ABOAT:updateRewardToken: You can't update the exact same tokens\") */\n    tag_408:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4138:4150  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4111:4174  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4138:4150  _rewardToken */\n      and\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4111:4174  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      0xcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d6\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4138:4150  _rewardToken */\n      0x00\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4111:4174  ChangedRewardToken(address(_rewardToken), address(rewardToken)) */\n      log3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4184:4196  _rewardToken */\n      0x08\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":4184:4210  _rewardToken = rewardToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      tag_211\n        /* \"contracts/libraries/TimeLock.sol\":2177:2180  _fn */\n      dup2\n        /* \"contracts/libraries/TimeLock.sol\":2164:2176  lockFunction */\n      tag_105\n        /* \"contracts/libraries/TimeLock.sol\":2164:2181  lockFunction(_fn) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3097:3104  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_415\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3127:3128  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3124  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3128  a - b */\n      tag_416\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3116:3128  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3039:3135  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7388:7931  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_286:\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7534:7550  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7548:7549  2 */\n      0x02\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7534:7550  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7510:7531  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7534:7550  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7578:7590  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7567  path[0] */\n      dup3\n      mload\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7578:7590  _rewardToken */\n      and\n      swap2\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7567  path[0] */\n      dup4\n      swap2\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7578:7590  _rewardToken */\n      0x00\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7567  path[0] */\n      tag_423\n      jumpi\n      tag_423\n      tag_424\n      jump\t// in\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7591  path[0] = address(_rewardToken) */\n      swap3\n      dup4\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7567  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7560:7591  path[0] = address(_rewardToken) */\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7611:7616  _weth */\n      sload(0x0b)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7608  path[1] */\n      dup3\n      mload\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7611:7616  _weth */\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7605  path */\n      dup3\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7611:7616  _weth */\n      0x01\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7608  path[1] */\n      dup2\n      lt\n      tag_426\n      jumpi\n      tag_426\n      tag_424\n      jump\t// in\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7616  path[1] = _weth */\n      swap3\n      dup4\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7608  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7601:7616  path[1] = _weth */\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7639  _rewardToken */\n      sload(0x08)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7656:7663  _router */\n      sload(0x0c)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7678  _rewardToken.approve(address(_router), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7656:7663  _router */\n      swap1\n      dup4\n      and\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7678  _rewardToken.approve(address(_router), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4039:4090   */\n      mstore\n        /* \"#utility.yul\":4106:4124   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4099:4133   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7639  _rewardToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7647  _rewardToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4012:4030   */\n      0x44\n      add\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7627:7678  _rewardToken.approve(address(_router), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_429\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_429:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_431\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_431:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_432\n      swap2\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7721  _router */\n      sload(0x0c)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7924  _router.swapExactTokensForKAISupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0xb6a046b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7721  _router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7772  _router.swapExactTokensForKAISupportingFeeOnTransferTokens */\n      0xb6a046b3\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7924  _router.swapExactTokensForKAISupportingFeeOnTransferTokens(... */\n      tag_434\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7786:7797  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7721  _router */\n      0x00\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7854:7858  path */\n      dup7\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7880:7884  this */\n      address\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7899:7914  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7714:7924  _router.swapExactTokensForKAISupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_435\n      jump\t// in\n    tag_434:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_436:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_438\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_438:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7443:7931  {... */\n      pop\n        /* \"contracts/chains/kardiachain/RewardSystem.sol\":7388:7931  function swapTokensForEth(uint256 tokenAmount) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_290:\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":1098:1110  bool success */\n      0x00\n        /* \"contracts/libraries/TransferHelper.sol\":1138:1150  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1123  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1131:1136  value */\n      dup4\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":1116:1151  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_443\n      swap2\n      swap1\n      tag_444\n      jump\t// in\n    tag_443:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_447\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_446)\n    tag_447:\n      0x60\n      swap2\n      pop\n    tag_446:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1097:1151  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1182:1189  success */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_448\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5820:5822   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5802:5823   */\n      mstore\n        /* \"#utility.yul\":5859:5861   */\n      0x34\n        /* \"#utility.yul\":5839:5857   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5832:5862   */\n      mstore\n        /* \"#utility.yul\":5898:5932   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665724554483a\n        /* \"#utility.yul\":5878:5896   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5871:5933   */\n      mstore\n      shl(0x62, 0x08115512081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":5949:5967   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5942:5992   */\n      mstore\n        /* \"#utility.yul\":6009:6028   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n      tag_191\n        /* \"#utility.yul\":5618:6034   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":1161:1267  require(... */\n    tag_448:\n        /* \"contracts/libraries/TransferHelper.sol\":1087:1274  {... */\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":1026:1274  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n    tag_292:\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4057:4089   */\n      dup5\n      dup2\n      and\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4039:4090   */\n      mstore\n        /* \"#utility.yul\":4106:4124   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":4099:4133   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4012:4030   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/libraries/TransferHelper.sol\":371:381  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_453\n      swap2\n        /* \"contracts/libraries/TransferHelper.sol\":382:427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/libraries/TransferHelper.sol\":371:428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_444\n      jump\t// in\n    tag_453:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_456\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_455)\n    tag_456:\n      0x60\n      swap2\n      pop\n    tag_455:\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":323:428  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":459:466  success */\n      dup2\n        /* \"contracts/libraries/TransferHelper.sol\":459:516  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_459\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":471:482  data.length */\n      dup1\n      mload\n        /* \"contracts/libraries/TransferHelper.sol\":471:487  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":471:515  data.length == 0 || abi.decode(data, (bool)) */\n      tag_459\n      jumpi\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":502:506  data */\n      dup1\n        /* \"contracts/libraries/TransferHelper.sol\":491:515  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_459\n      swap2\n      swap1\n      tag_433\n      jump\t// in\n    tag_459:\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_460\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11409:11411   */\n      0x20\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11391:11412   */\n      mstore\n        /* \"#utility.yul\":11448:11450   */\n      0x2d\n        /* \"#utility.yul\":11428:11446   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11421:11451   */\n      mstore\n        /* \"#utility.yul\":11487:11521   */\n      0x5472616e7366657248656c7065723a3a736166655472616e736665723a207472\n        /* \"#utility.yul\":11467:11485   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11460:11522   */\n      mstore\n      shl(0x9a, 0x185b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":11538:11556   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11531:11574   */\n      mstore\n        /* \"#utility.yul\":11591:11610   */\n      0x84\n      add\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n      tag_191\n        /* \"#utility.yul\":11207:11616   */\n      jump\n        /* \"contracts/libraries/TransferHelper.sol\":438:587  require(... */\n    tag_460:\n        /* \"contracts/libraries/TransferHelper.sol\":313:594  {... */\n      pop\n      pop\n        /* \"contracts/libraries/TransferHelper.sol\":210:594  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_415\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3855:3856  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3852  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_465\n      jump\t// in\n        /* \"#utility.yul\":14:261   */\n    tag_60:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_468:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_415\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_470\n      jump\t// in\n        /* \"#utility.yul\":266:543   */\n    tag_433:\n        /* \"#utility.yul\":333:339   */\n      0x00\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":374:383   */\n      dup3\n        /* \"#utility.yul\":365:372   */\n      dup5\n        /* \"#utility.yul\":361:384   */\n      sub\n        /* \"#utility.yul\":357:389   */\n      slt\n        /* \"#utility.yul\":354:406   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":402:403   */\n      0x00\n        /* \"#utility.yul\":399:400   */\n      dup1\n        /* \"#utility.yul\":392:404   */\n      revert\n        /* \"#utility.yul\":354:406   */\n    tag_472:\n        /* \"#utility.yul\":434:443   */\n      dup2\n        /* \"#utility.yul\":428:444   */\n      mload\n        /* \"#utility.yul\":487:492   */\n      dup1\n        /* \"#utility.yul\":480:493   */\n      iszero\n        /* \"#utility.yul\":473:494   */\n      iszero\n        /* \"#utility.yul\":466:471   */\n      dup2\n        /* \"#utility.yul\":463:495   */\n      eq\n        /* \"#utility.yul\":453:513   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":509:510   */\n      0x00\n        /* \"#utility.yul\":506:507   */\n      dup1\n        /* \"#utility.yul\":499:511   */\n      revert\n        /* \"#utility.yul\":1088:2010   */\n    tag_104:\n        /* \"#utility.yul\":1157:1163   */\n      0x00\n        /* \"#utility.yul\":1210:1212   */\n      0x20\n        /* \"#utility.yul\":1198:1207   */\n      dup3\n        /* \"#utility.yul\":1189:1196   */\n      dup5\n        /* \"#utility.yul\":1185:1208   */\n      sub\n        /* \"#utility.yul\":1181:1213   */\n      slt\n        /* \"#utility.yul\":1178:1230   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":1226:1227   */\n      0x00\n        /* \"#utility.yul\":1223:1224   */\n      dup1\n        /* \"#utility.yul\":1216:1228   */\n      revert\n        /* \"#utility.yul\":1178:1230   */\n    tag_481:\n        /* \"#utility.yul\":1266:1275   */\n      dup2\n        /* \"#utility.yul\":1253:1276   */\n      calldataload\n        /* \"#utility.yul\":1295:1313   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1336:1338   */\n      dup1\n        /* \"#utility.yul\":1328:1334   */\n      dup3\n        /* \"#utility.yul\":1325:1339   */\n      gt\n        /* \"#utility.yul\":1322:1356   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":1352:1353   */\n      0x00\n        /* \"#utility.yul\":1349:1350   */\n      dup1\n        /* \"#utility.yul\":1342:1354   */\n      revert\n        /* \"#utility.yul\":1322:1356   */\n    tag_482:\n        /* \"#utility.yul\":1390:1396   */\n      dup2\n        /* \"#utility.yul\":1379:1388   */\n      dup5\n        /* \"#utility.yul\":1375:1397   */\n      add\n        /* \"#utility.yul\":1365:1397   */\n      swap2\n      pop\n        /* \"#utility.yul\":1435:1442   */\n      dup5\n        /* \"#utility.yul\":1428:1432   */\n      0x1f\n        /* \"#utility.yul\":1424:1426   */\n      dup4\n        /* \"#utility.yul\":1420:1433   */\n      add\n        /* \"#utility.yul\":1416:1443   */\n      slt\n        /* \"#utility.yul\":1406:1461   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":1457:1458   */\n      0x00\n        /* \"#utility.yul\":1454:1455   */\n      dup1\n        /* \"#utility.yul\":1447:1459   */\n      revert\n        /* \"#utility.yul\":1406:1461   */\n    tag_483:\n        /* \"#utility.yul\":1493:1495   */\n      dup2\n        /* \"#utility.yul\":1480:1496   */\n      calldataload\n        /* \"#utility.yul\":1515:1517   */\n      dup2\n        /* \"#utility.yul\":1511:1513   */\n      dup2\n        /* \"#utility.yul\":1508:1518   */\n      gt\n        /* \"#utility.yul\":1505:1541   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":1521:1539   */\n      tag_485\n      tag_420\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1596:1598   */\n      0x40\n        /* \"#utility.yul\":1590:1599   */\n      mload\n        /* \"#utility.yul\":1564:1566   */\n      0x1f\n        /* \"#utility.yul\":1650:1663   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1646:1668   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1670:1672   */\n      0x3f\n        /* \"#utility.yul\":1642:1673   */\n      add\n        /* \"#utility.yul\":1638:1678   */\n      and\n        /* \"#utility.yul\":1626:1679   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1694:1712   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1714:1736   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1691:1737   */\n      or\n        /* \"#utility.yul\":1688:1760   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":1740:1758   */\n      tag_487\n      tag_420\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":1780:1790   */\n      dup2\n        /* \"#utility.yul\":1776:1778   */\n      0x40\n        /* \"#utility.yul\":1769:1791   */\n      mstore\n        /* \"#utility.yul\":1815:1817   */\n      dup3\n        /* \"#utility.yul\":1807:1813   */\n      dup2\n        /* \"#utility.yul\":1800:1818   */\n      mstore\n        /* \"#utility.yul\":1855:1862   */\n      dup8\n        /* \"#utility.yul\":1850:1852   */\n      0x20\n        /* \"#utility.yul\":1845:1847   */\n      dup5\n        /* \"#utility.yul\":1841:1843   */\n      dup8\n        /* \"#utility.yul\":1837:1848   */\n      add\n        /* \"#utility.yul\":1833:1853   */\n      add\n        /* \"#utility.yul\":1830:1863   */\n      gt\n        /* \"#utility.yul\":1827:1880   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":1876:1877   */\n      0x00\n        /* \"#utility.yul\":1873:1874   */\n      dup1\n        /* \"#utility.yul\":1866:1878   */\n      revert\n        /* \"#utility.yul\":1827:1880   */\n    tag_488:\n        /* \"#utility.yul\":1932:1934   */\n      dup3\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1923:1925   */\n      dup7\n        /* \"#utility.yul\":1919:1930   */\n      add\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"#utility.yul\":1906:1912   */\n      dup4\n        /* \"#utility.yul\":1902:1917   */\n      add\n        /* \"#utility.yul\":1889:1935   */\n      calldatacopy\n        /* \"#utility.yul\":1977:1978   */\n      0x00\n        /* \"#utility.yul\":1955:1970   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1972:1974   */\n      0x20\n        /* \"#utility.yul\":1951:1975   */\n      add\n        /* \"#utility.yul\":1944:1979   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1959:1965   */\n      swap6\n        /* \"#utility.yul\":1088:2010   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2195   */\n    tag_73:\n        /* \"#utility.yul\":2074:2080   */\n      0x00\n        /* \"#utility.yul\":2127:2129   */\n      0x20\n        /* \"#utility.yul\":2115:2124   */\n      dup3\n        /* \"#utility.yul\":2106:2113   */\n      dup5\n        /* \"#utility.yul\":2102:2125   */\n      sub\n        /* \"#utility.yul\":2098:2130   */\n      slt\n        /* \"#utility.yul\":2095:2147   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":2143:2144   */\n      0x00\n        /* \"#utility.yul\":2140:2141   */\n      dup1\n        /* \"#utility.yul\":2133:2145   */\n      revert\n        /* \"#utility.yul\":2095:2147   */\n    tag_490:\n      pop\n        /* \"#utility.yul\":2166:2189   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2015:2195   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2384   */\n    tag_186:\n        /* \"#utility.yul\":2270:2276   */\n      0x00\n        /* \"#utility.yul\":2323:2325   */\n      0x20\n        /* \"#utility.yul\":2311:2320   */\n      dup3\n        /* \"#utility.yul\":2302:2309   */\n      dup5\n        /* \"#utility.yul\":2298:2321   */\n      sub\n        /* \"#utility.yul\":2294:2326   */\n      slt\n        /* \"#utility.yul\":2291:2343   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":2339:2340   */\n      0x00\n        /* \"#utility.yul\":2336:2337   */\n      dup1\n        /* \"#utility.yul\":2329:2341   */\n      revert\n        /* \"#utility.yul\":2291:2343   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":2362:2378   */\n      mload\n      swap2\n        /* \"#utility.yul\":2200:2384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2389:2704   */\n    tag_151:\n        /* \"#utility.yul\":2457:2463   */\n      0x00\n        /* \"#utility.yul\":2465:2471   */\n      dup1\n        /* \"#utility.yul\":2518:2520   */\n      0x40\n        /* \"#utility.yul\":2506:2515   */\n      dup4\n        /* \"#utility.yul\":2497:2504   */\n      dup6\n        /* \"#utility.yul\":2493:2516   */\n      sub\n        /* \"#utility.yul\":2489:2521   */\n      slt\n        /* \"#utility.yul\":2486:2538   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":2534:2535   */\n      0x00\n        /* \"#utility.yul\":2531:2532   */\n      dup1\n        /* \"#utility.yul\":2524:2536   */\n      revert\n        /* \"#utility.yul\":2486:2538   */\n    tag_494:\n        /* \"#utility.yul\":2570:2579   */\n      dup3\n        /* \"#utility.yul\":2557:2580   */\n      calldataload\n        /* \"#utility.yul\":2547:2580   */\n      swap2\n      pop\n        /* \"#utility.yul\":2630:2632   */\n      0x20\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2633   */\n      add\n        /* \"#utility.yul\":2602:2634   */\n      calldataload\n        /* \"#utility.yul\":2643:2674   */\n      tag_495\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2643:2674   */\n      tag_470\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2693:2698   */\n      dup1\n        /* \"#utility.yul\":2683:2698   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2389:2704   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2709:3092   */\n    tag_99:\n        /* \"#utility.yul\":2786:2792   */\n      0x00\n        /* \"#utility.yul\":2794:2800   */\n      dup1\n        /* \"#utility.yul\":2802:2808   */\n      0x00\n        /* \"#utility.yul\":2855:2857   */\n      0x60\n        /* \"#utility.yul\":2843:2852   */\n      dup5\n        /* \"#utility.yul\":2834:2841   */\n      dup7\n        /* \"#utility.yul\":2830:2853   */\n      sub\n        /* \"#utility.yul\":2826:2858   */\n      slt\n        /* \"#utility.yul\":2823:2875   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2868:2869   */\n      dup1\n        /* \"#utility.yul\":2861:2873   */\n      revert\n        /* \"#utility.yul\":2823:2875   */\n    tag_497:\n        /* \"#utility.yul\":2907:2916   */\n      dup4\n        /* \"#utility.yul\":2894:2917   */\n      calldataload\n        /* \"#utility.yul\":2884:2917   */\n      swap3\n      pop\n        /* \"#utility.yul\":2967:2969   */\n      0x20\n        /* \"#utility.yul\":2956:2965   */\n      dup5\n        /* \"#utility.yul\":2952:2970   */\n      add\n        /* \"#utility.yul\":2939:2971   */\n      calldataload\n        /* \"#utility.yul\":2980:3011   */\n      tag_498\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2980:3011   */\n      tag_470\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":2709:3092   */\n      swap3\n      swap6\n        /* \"#utility.yul\":3030:3035   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3082:3084   */\n      0x40\n        /* \"#utility.yul\":3067:3085   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3054:3086   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2709:3092   */\n      jump\t// out\n        /* \"#utility.yul\":3097:3371   */\n    tag_444:\n        /* \"#utility.yul\":3226:3229   */\n      0x00\n        /* \"#utility.yul\":3264:3270   */\n      dup3\n        /* \"#utility.yul\":3258:3271   */\n      mload\n        /* \"#utility.yul\":3280:3333   */\n      tag_500\n        /* \"#utility.yul\":3326:3332   */\n      dup2\n        /* \"#utility.yul\":3321:3324   */\n      dup5\n        /* \"#utility.yul\":3314:3318   */\n      0x20\n        /* \"#utility.yul\":3306:3312   */\n      dup8\n        /* \"#utility.yul\":3302:3319   */\n      add\n        /* \"#utility.yul\":3280:3333   */\n      tag_501\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3349:3365   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3097:3371   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7777:8133   */\n    tag_218:\n        /* \"#utility.yul\":7979:7981   */\n      0x20\n        /* \"#utility.yul\":7961:7982   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7998:8016   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7991:8021   */\n      mstore\n        /* \"#utility.yul\":8057:8091   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8052:8054   */\n      0x40\n        /* \"#utility.yul\":8037:8055   */\n      dup3\n      add\n        /* \"#utility.yul\":8030:8092   */\n      mstore\n        /* \"#utility.yul\":8124:8126   */\n      0x60\n        /* \"#utility.yul\":8109:8127   */\n      add\n      swap1\n        /* \"#utility.yul\":7777:8133   */\n      jump\t// out\n        /* \"#utility.yul\":9049:9391   */\n    tag_205:\n        /* \"#utility.yul\":9251:9253   */\n      0x20\n        /* \"#utility.yul\":9233:9254   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9290:9292   */\n      0x12\n        /* \"#utility.yul\":9270:9288   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9263:9293   */\n      mstore\n      shl(0x72, 0x119d5b98dd1a5bdb881a5cc81b1bd8dad959)\n        /* \"#utility.yul\":9324:9326   */\n      0x40\n        /* \"#utility.yul\":9309:9327   */\n      dup3\n      add\n        /* \"#utility.yul\":9302:9350   */\n      mstore\n        /* \"#utility.yul\":9382:9384   */\n      0x60\n        /* \"#utility.yul\":9367:9385   */\n      add\n      swap1\n        /* \"#utility.yul\":9049:9391   */\n      jump\t// out\n        /* \"#utility.yul\":9396:9813   */\n    tag_192:\n        /* \"#utility.yul\":9598:9600   */\n      0x20\n        /* \"#utility.yul\":9580:9601   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9637:9639   */\n      0x35\n        /* \"#utility.yul\":9617:9635   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9610:9640   */\n      mstore\n        /* \"#utility.yul\":9676:9710   */\n      0x6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420\n        /* \"#utility.yul\":9671:9673   */\n      0x40\n        /* \"#utility.yul\":9656:9674   */\n      dup3\n      add\n        /* \"#utility.yul\":9649:9711   */\n      mstore\n      shl(0x59, 0x3a379031b0b636103a3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":9742:9744   */\n      0x60\n        /* \"#utility.yul\":9727:9745   */\n      dup3\n      add\n        /* \"#utility.yul\":9720:9771   */\n      mstore\n        /* \"#utility.yul\":9803:9806   */\n      0x80\n        /* \"#utility.yul\":9788:9807   */\n      add\n      swap1\n        /* \"#utility.yul\":9396:9813   */\n      jump\t// out\n        /* \"#utility.yul\":12225:13205   */\n    tag_435:\n        /* \"#utility.yul\":12487:12491   */\n      0x00\n        /* \"#utility.yul\":12535:12538   */\n      0xa0\n        /* \"#utility.yul\":12524:12533   */\n      dup3\n        /* \"#utility.yul\":12520:12539   */\n      add\n        /* \"#utility.yul\":12566:12572   */\n      dup8\n        /* \"#utility.yul\":12555:12564   */\n      dup4\n        /* \"#utility.yul\":12548:12573   */\n      mstore\n        /* \"#utility.yul\":12592:12594   */\n      0x20\n        /* \"#utility.yul\":12630:12636   */\n      dup8\n        /* \"#utility.yul\":12625:12627   */\n      dup2\n        /* \"#utility.yul\":12614:12623   */\n      dup6\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12603:12637   */\n      mstore\n        /* \"#utility.yul\":12673:12676   */\n      0xa0\n        /* \"#utility.yul\":12668:12670   */\n      0x40\n        /* \"#utility.yul\":12657:12666   */\n      dup6\n        /* \"#utility.yul\":12653:12671   */\n      add\n        /* \"#utility.yul\":12646:12677   */\n      mstore\n        /* \"#utility.yul\":12697:12703   */\n      dup2\n        /* \"#utility.yul\":12732:12738   */\n      dup8\n        /* \"#utility.yul\":12726:12739   */\n      mload\n        /* \"#utility.yul\":12763:12769   */\n      dup1\n        /* \"#utility.yul\":12755:12761   */\n      dup5\n        /* \"#utility.yul\":12748:12770   */\n      mstore\n        /* \"#utility.yul\":12801:12804   */\n      0xc0\n        /* \"#utility.yul\":12790:12799   */\n      dup7\n        /* \"#utility.yul\":12786:12805   */\n      add\n        /* \"#utility.yul\":12779:12805   */\n      swap2\n      pop\n        /* \"#utility.yul\":12840:12842   */\n      dup3\n        /* \"#utility.yul\":12832:12838   */\n      dup10\n        /* \"#utility.yul\":12828:12843   */\n      add\n        /* \"#utility.yul\":12814:12843   */\n      swap4\n      pop\n        /* \"#utility.yul\":12861:12862   */\n      0x00\n        /* \"#utility.yul\":12871:13066   */\n    tag_528:\n        /* \"#utility.yul\":12885:12891   */\n      dup2\n        /* \"#utility.yul\":12882:12883   */\n      dup2\n        /* \"#utility.yul\":12879:12892   */\n      lt\n        /* \"#utility.yul\":12871:13066   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":12950:12963   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12946:12985   */\n      and\n        /* \"#utility.yul\":12934:12986   */\n      dup4\n      mstore\n        /* \"#utility.yul\":13041:13056   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":13006:13018   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":12982:12983   */\n      0x01\n        /* \"#utility.yul\":12900:12909   */\n      add\n        /* \"#utility.yul\":12871:13066   */\n      jump(tag_528)\n    tag_530:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13122:13154   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":13117:13119   */\n      0x60\n        /* \"#utility.yul\":13102:13120   */\n      dup6\n      add\n        /* \"#utility.yul\":13095:13155   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13186:13189   */\n      0x80\n        /* \"#utility.yul\":13171:13190   */\n      add\n        /* \"#utility.yul\":13164:13199   */\n      mstore\n        /* \"#utility.yul\":13083:13086   */\n      swap4\n        /* \"#utility.yul\":12225:13205   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13210:13338   */\n    tag_202:\n        /* \"#utility.yul\":13250:13253   */\n      0x00\n        /* \"#utility.yul\":13281:13282   */\n      dup3\n        /* \"#utility.yul\":13277:13283   */\n      not\n        /* \"#utility.yul\":13274:13275   */\n      dup3\n        /* \"#utility.yul\":13271:13284   */\n      gt\n        /* \"#utility.yul\":13268:13307   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":13287:13305   */\n      tag_533\n      tag_534\n      jump\t// in\n    tag_533:\n      pop\n        /* \"#utility.yul\":13323:13332   */\n      add\n      swap1\n        /* \"#utility.yul\":13210:13338   */\n      jump\t// out\n        /* \"#utility.yul\":13343:13560   */\n    tag_465:\n        /* \"#utility.yul\":13383:13384   */\n      0x00\n        /* \"#utility.yul\":13409:13410   */\n      dup3\n        /* \"#utility.yul\":13399:13531   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":13453:13463   */\n      0x4e487b71\n        /* \"#utility.yul\":13448:13451   */\n      0xe0\n        /* \"#utility.yul\":13444:13464   */\n      shl\n        /* \"#utility.yul\":13441:13442   */\n      0x00\n        /* \"#utility.yul\":13434:13465   */\n      mstore\n        /* \"#utility.yul\":13488:13492   */\n      0x12\n        /* \"#utility.yul\":13485:13486   */\n      0x04\n        /* \"#utility.yul\":13478:13493   */\n      mstore\n        /* \"#utility.yul\":13516:13520   */\n      0x24\n        /* \"#utility.yul\":13513:13514   */\n      0x00\n        /* \"#utility.yul\":13506:13521   */\n      revert\n        /* \"#utility.yul\":13399:13531   */\n    tag_536:\n      pop\n        /* \"#utility.yul\":13545:13554   */\n      div\n      swap1\n        /* \"#utility.yul\":13343:13560   */\n      jump\t// out\n        /* \"#utility.yul\":13565:13690   */\n    tag_416:\n        /* \"#utility.yul\":13605:13609   */\n      0x00\n        /* \"#utility.yul\":13633:13634   */\n      dup3\n        /* \"#utility.yul\":13630:13631   */\n      dup3\n        /* \"#utility.yul\":13627:13635   */\n      lt\n        /* \"#utility.yul\":13624:13658   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":13638:13656   */\n      tag_539\n      tag_534\n      jump\t// in\n    tag_539:\n      pop\n        /* \"#utility.yul\":13675:13684   */\n      sub\n      swap1\n        /* \"#utility.yul\":13565:13690   */\n      jump\t// out\n        /* \"#utility.yul\":13695:13953   */\n    tag_501:\n        /* \"#utility.yul\":13767:13768   */\n      0x00\n        /* \"#utility.yul\":13777:13890   */\n    tag_541:\n        /* \"#utility.yul\":13791:13797   */\n      dup4\n        /* \"#utility.yul\":13788:13789   */\n      dup2\n        /* \"#utility.yul\":13785:13798   */\n      lt\n        /* \"#utility.yul\":13777:13890   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":13867:13878   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13861:13879   */\n      mload\n        /* \"#utility.yul\":13848:13859   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13841:13880   */\n      mstore\n        /* \"#utility.yul\":13813:13815   */\n      0x20\n        /* \"#utility.yul\":13806:13816   */\n      add\n        /* \"#utility.yul\":13777:13890   */\n      jump(tag_541)\n    tag_543:\n        /* \"#utility.yul\":13908:13914   */\n      dup4\n        /* \"#utility.yul\":13905:13906   */\n      dup2\n        /* \"#utility.yul\":13902:13915   */\n      gt\n        /* \"#utility.yul\":13899:13947   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13943:13944   */\n      0x00\n        /* \"#utility.yul\":13934:13940   */\n      dup5\n        /* \"#utility.yul\":13929:13932   */\n      dup5\n        /* \"#utility.yul\":13925:13941   */\n      add\n        /* \"#utility.yul\":13918:13945   */\n      mstore\n        /* \"#utility.yul\":13899:13947   */\n    tag_544:\n      pop\n        /* \"#utility.yul\":13695:13953   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13958:14085   */\n    tag_534:\n        /* \"#utility.yul\":14019:14029   */\n      0x4e487b71\n        /* \"#utility.yul\":14014:14017   */\n      0xe0\n        /* \"#utility.yul\":14010:14030   */\n      shl\n        /* \"#utility.yul\":14007:14008   */\n      0x00\n        /* \"#utility.yul\":14000:14031   */\n      mstore\n        /* \"#utility.yul\":14050:14054   */\n      0x11\n        /* \"#utility.yul\":14047:14048   */\n      0x04\n        /* \"#utility.yul\":14040:14055   */\n      mstore\n        /* \"#utility.yul\":14074:14078   */\n      0x24\n        /* \"#utility.yul\":14071:14072   */\n      0x00\n        /* \"#utility.yul\":14064:14079   */\n      revert\n        /* \"#utility.yul\":14090:14217   */\n    tag_424:\n        /* \"#utility.yul\":14151:14161   */\n      0x4e487b71\n        /* \"#utility.yul\":14146:14149   */\n      0xe0\n        /* \"#utility.yul\":14142:14162   */\n      shl\n        /* \"#utility.yul\":14139:14140   */\n      0x00\n        /* \"#utility.yul\":14132:14163   */\n      mstore\n        /* \"#utility.yul\":14182:14186   */\n      0x32\n        /* \"#utility.yul\":14179:14180   */\n      0x04\n        /* \"#utility.yul\":14172:14187   */\n      mstore\n        /* \"#utility.yul\":14206:14210   */\n      0x24\n        /* \"#utility.yul\":14203:14204   */\n      0x00\n        /* \"#utility.yul\":14196:14211   */\n      revert\n        /* \"#utility.yul\":14222:14349   */\n    tag_420:\n        /* \"#utility.yul\":14283:14293   */\n      0x4e487b71\n        /* \"#utility.yul\":14278:14281   */\n      0xe0\n        /* \"#utility.yul\":14274:14294   */\n      shl\n        /* \"#utility.yul\":14271:14272   */\n      0x00\n        /* \"#utility.yul\":14264:14295   */\n      mstore\n        /* \"#utility.yul\":14314:14318   */\n      0x41\n        /* \"#utility.yul\":14311:14312   */\n      0x04\n        /* \"#utility.yul\":14304:14319   */\n      mstore\n        /* \"#utility.yul\":14338:14342   */\n      0x24\n        /* \"#utility.yul\":14335:14336   */\n      0x00\n        /* \"#utility.yul\":14328:14343   */\n      revert\n        /* \"#utility.yul\":14354:14485   */\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14429:14460   */\n      dup2\n      and\n        /* \"#utility.yul\":14419:14461   */\n      dup2\n      eq\n        /* \"#utility.yul\":14409:14479   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":14475:14476   */\n      0x00\n        /* \"#utility.yul\":14472:14473   */\n      dup1\n        /* \"#utility.yul\":14465:14477   */\n      revert\n\n    auxdata: 0xa26469706673582212209e5b23a1b1f79412e3d2690acbc6541392dbf67a3629fffafb2c4f556161309764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1893": {
									"entryPoint": null,
									"id": 1893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2871": {
									"entryPoint": null,
									"id": 2871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 302,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeOracleWallet_2022": {
									"entryPoint": 382,
									"id": 2022,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lockFunction_2968": {
									"entryPoint": 1030,
									"id": 2968,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 838,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$727_fromMemory": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2520:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:209:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "155:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "164:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "157:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "157:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "157:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "130:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "139:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "126:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "151:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "122:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "122:32:13"
															},
															"nodeType": "YulIf",
															"src": "119:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "180:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "184:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "272:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "281:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "284:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "274:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "274:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "231:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "242:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "257:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "262:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "253:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "253:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "266:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "249:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "249:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "238:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "238:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "228:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "228:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "221:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:50:13"
															},
															"nodeType": "YulIf",
															"src": "218:70:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "297:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "307:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$727_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "75:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "86:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "98:6:13",
														"type": ""
													}
												],
												"src": "14:304:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "462:289:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "472:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "492:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "486:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "476:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "508:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "517:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "512:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "579:77:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "604:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "609:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "600:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "600:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "627:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "635:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "623:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "623:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "639:4:13",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "619:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "619:25:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "613:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "613:32:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "593:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "593:53:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "593:53:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "538:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "541:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "535:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "549:21:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "551:17:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "560:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "563:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "551:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "531:3:13",
																"statements": []
															},
															"src": "527:129:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "700:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "691:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "691:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "709:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "671:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "674:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:13:13"
															},
															"nodeType": "YulIf",
															"src": "665:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "722:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "733:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "738:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "729:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "722:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "438:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "443:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "454:3:13",
														"type": ""
													}
												],
												"src": "323:428:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "930:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "947:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "940:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "981:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "977:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1031:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1036:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1009:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1091:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1102:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1087:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1087:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1107:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1125:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1148:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1125:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "907:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "921:4:13",
														"type": ""
													}
												],
												"src": "756:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1337:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1354:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1347:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1388:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1399:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1377:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1443:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1416:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1487:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1499:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1487:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1314:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1328:4:13",
														"type": ""
													}
												],
												"src": "1163:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1698:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1708:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1749:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1760:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1738:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1799:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1784:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1784:18:13"
																	},
																	{
																		"hexValue": "46756e6374696f6e206973206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1804:20:13",
																		"type": "",
																		"value": "Function is locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1777:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1834:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1675:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1689:4:13",
														"type": ""
													}
												],
												"src": "1524:342:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2045:243:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2062:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2055:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2096:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2107:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2092:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:2:13",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2085:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:13"
																	},
																	{
																		"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2151:34:13",
																		"type": "",
																		"value": "operator: caller is not allowed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2217:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2202:18:13"
																	},
																	{
																		"hexValue": "746f2063616c6c20746869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2222:23:13",
																		"type": "",
																		"value": "to call this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2195:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2255:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2267:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2278:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2255:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2022:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2036:4:13",
														"type": ""
													}
												],
												"src": "1871:417:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2376:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2397:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2404:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2409:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2400:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2400:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2390:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2390:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2390:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2469:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2472:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2357:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2364:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:13:13"
															},
															"nodeType": "YulIf",
															"src": "2351:136:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2507:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2510:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2324:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2327:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2333:3:13",
														"type": ""
													}
												],
												"src": "2293:225:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$727_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Function is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"operator: caller is not allowed \")\n        mstore(add(headStart, 96), \"to call this function\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000805460ff60a01b19169055600a6005819055600680546001600160a01b03199081167376049b7caab30b8bbbdcff3a1059d9147dbf7b191790915560078054821673c559acc356d3037ec6dbc33a20587051188b86341790556a084595161401484a00000060095562015180909155600b8054821673af984e23eaa3e7967f3c5e007fbe397d8566d23d179055600c805490911673bafcdabe65a03825a131298be7670c0aec77b37f179055348015620000bf57600080fd5b50604051620025c1380380620025c1833981016040819052620000e291620004d5565b620000ed336200012e565b600280546001600160a01b03199081163317909155600880546001600160a01b03848116919093161790556006546200012791166200017e565b506200056c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001cd5760405162461bcd60e51b81526020600482018190526024820152600080516020620025a183398151915260448201526064015b60405180910390fd5b60408051808201909152601281527118da185b99d953dc9858db1955d85b1b195d60721b6020820152600054600160a01b900460ff1615806200029a57506001816040516200021d919062000507565b9081526020016040518091039020546000141580156200025d5750426001826040516200024b919062000507565b90815260200160405180910390205411155b80156200029a575042620151806001836040516200027c919062000507565b90815260200160405180910390205462000297919062000545565b10155b620002dd5760405162461bcd60e51b8152602060048201526012602482015271119d5b98dd1a5bdb881a5cc81b1bd8dad95960721b6044820152606401620001c4565b620002e88262000346565b600680546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f3920ecd0f25e4e6ce57aaec91e57df499cb7e3e70d6c9604f866ae9265382cf390600090a350620003428162000406565b5050565b6000546001600160a01b03163314620003915760405162461bcd60e51b81526020600482018190526024820152600080516020620025a18339815191526044820152606401620001c4565b6001600160a01b038116620003f85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001c4565b62000403816200012e565b50565b336200041a6000546001600160a01b031690565b6001600160a01b031614806200043a57506002546001600160a01b031633145b620004ae5760405162461bcd60e51b815260206004820152603560248201527f6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f7765642060448201527f746f2063616c6c20746869732066756e6374696f6e00000000000000000000006064820152608401620001c4565b6000600182604051620004c2919062000507565b9081526040519081900360200190205550565b600060208284031215620004e857600080fd5b81516001600160a01b03811681146200050057600080fd5b9392505050565b6000825160005b818110156200052a57602081860181015185830152016200050e565b818111156200053a576000828501525b509190910192915050565b600082198211156200056757634e487b7160e01b600052601160045260246000fd5b500190565b612025806200057c6000396000f3fe6080604052600436106101dc5760003560e01c8063a221a15f11610102578063de996a6e11610095578063f4762fd611610064578063f4762fd614610546578063f7e77bc21461055b578063f8cf31cb14610588578063f98080c0146105a857600080fd5b8063de996a6e146104c6578063e7b6ebba146104e6578063edae876f14610506578063f2fde38b1461052657600080fd5b8063bf3506c1116100d1578063bf3506c11461045b578063c07a1d4d1461047b578063c0d7865514610491578063db2e21bc146104b157600080fd5b8063a221a15f146103da578063a347511a146103fa578063a607494a1461041b578063b59c6e0e1461043b57600080fd5b806370ed0ada1161017a5780639850d32b116101495780639850d32b1461035c5780639f3719951461037a5780639f5311561461039a578063a1764595146103ba57600080fd5b806370ed0ada146102d6578063715018a6146102e95780637d6dfb7e146102fe5780638da5cb5b1461033e57600080fd5b806313ea5d29116101b657806313ea5d291461025e5780635dd538261461028057806363cd79b7146102965780636a1db1bf146102b657600080fd5b80630126ffb9146101e857806311a63e171461021157806312065fe01461024957600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b506101fe600a5481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b50600754610231906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b34801561025557600080fd5b506101fe6105e0565b34801561026a57600080fd5b5061027e610279366004611c4a565b610661565b005b34801561028c57600080fd5b506101fe60095481565b3480156102a257600080fd5b5061027e6102b1366004611c4a565b61089b565b3480156102c257600080fd5b5061027e6102d1366004611d3a565b610a04565b3480156102e257600080fd5b50476101fe565b3480156102f557600080fd5b5061027e610b40565b34801561030a57600080fd5b5061032e610319366004611c4a565b60036020526000908152604090205460ff1681565b6040519015158152602001610208565b34801561034a57600080fd5b506000546001600160a01b0316610231565b34801561036857600080fd5b506002546001600160a01b0316610231565b34801561038657600080fd5b5061027e610395366004611d9c565b610b76565b3480156103a657600080fd5b5061027e6103b5366004611c89565b610e82565b3480156103c657600080fd5b50600b54610231906001600160a01b031681565b3480156103e657600080fd5b50600654610231906001600160a01b031681565b34801561040657600080fd5b5060005461032e90600160a01b900460ff1681565b34801561042757600080fd5b5061027e610436366004611c89565b610ef5565b34801561044757600080fd5b50600854610231906001600160a01b031681565b34801561046757600080fd5b5061032e610476366004611c4a565b610fd2565b34801561048757600080fd5b506101fe60055481565b34801561049d57600080fd5b5061027e6104ac366004611c4a565b611004565b3480156104bd57600080fd5b5061027e611050565b3480156104d257600080fd5b5061027e6104e1366004611d3a565b611104565b3480156104f257600080fd5b5061027e610501366004611d6c565b611254565b34801561051257600080fd5b50600c54610231906001600160a01b031681565b34801561053257600080fd5b5061027e610541366004611c4a565b611545565b34801561055257600080fd5b5061027e6115e0565b34801561056757600080fd5b506101fe610576366004611c4a565b60046020526000908152604090205481565b34801561059457600080fd5b5061027e6105a3366004611c4a565b61166a565b3480156105b457600080fd5b506101fe6105c3366004611c89565b805160208183018101805160018252928201919093012091525481565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c9190611d53565b905090565b336106746000546001600160a01b031690565b6001600160a01b0316148061069357506002546001600160a01b031633145b6106b85760405162461bcd60e51b81526004016106af90611e51565b60405180910390fd5b60408051808201909152600a81526936b0b4b73a30b4b732b960b11b6020820152600054600160a01b900460ff16158061077257506001816040516106fd9190611dd4565b90815260200160405180910390205460001415801561073a5750426001826040516107289190611dd4565b90815260200160405180910390205411155b8015610772575042620151806001836040516107569190611dd4565b90815260200160405180910390205461076f9190611f17565b10155b61078e5760405162461bcd60e51b81526004016106af90611e25565b6002546001600160a01b038381169116148015906107b457506001600160a01b03821615155b61083f5760405162461bcd60e51b815260206004820152605060248201527f41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e657260448201527f2063616e277420657175616c2070726576696f7573206d61696e7461696e657260648201526f206f72207a65726f206164647265737360801b608482015260a4016106af565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf0190600090a35061089781610e82565b5050565b6000546001600160a01b031633146108c55760405162461bcd60e51b81526004016106af90611df0565b60408051808201909152601281527118da185b99d953dc9858db1955d85b1b195d60721b6020820152600054600160a01b900460ff16158061098757506001816040516109129190611dd4565b90815260200160405180910390205460001415801561094f57504260018260405161093d9190611dd4565b90815260200160405180910390205411155b80156109875750426201518060018360405161096b9190611dd4565b9081526020016040518091039020546109849190611f17565b10155b6109a35760405162461bcd60e51b81526004016106af90611e25565b6109ac82611545565b600680546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f3920ecd0f25e4e6ce57aaec91e57df499cb7e3e70d6c9604f866ae9265382cf390600090a35061089781610e82565b6000546001600160a01b03163314610a2e5760405162461bcd60e51b81526004016106af90611df0565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff161580610ae75750600181604051610a729190611dd4565b908152602001604051809103902054600014158015610aaf575042600182604051610a9d9190611dd4565b90815260200160405180910390205411155b8015610ae757504262015180600183604051610acb9190611dd4565b908152602001604051809103902054610ae49190611f17565b10155b610b035760405162461bcd60e51b81526004016106af90611e25565b6005546040518391907fce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb14990600090a3600582905561089781610e82565b6000546001600160a01b03163314610b6a5760405162461bcd60e51b81526004016106af90611df0565b610b746000611853565b565b6000546001600160a01b03163314610ba05760405162461bcd60e51b81526004016106af90611df0565b600c546001600160a01b0316610c2c5760405162461bcd60e51b8152602060048201526044602482018190527f41424f41543a3a73656e645265776172643a205468657265206973206e6f2072908201527f6f7574657220646566696e656420746f207377617020746f6b656e7320666f72606482015263040cae8d60e31b608482015260a4016106af565b610c346105e0565b831115610cb35760405162461bcd60e51b815260206004820152604160248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527f72652072657761726473207468616e20696e207265776172642073797374656d6064820152602160f81b608482015260a4016106af565b600954831115610d245760405162461bcd60e51b815260206004820152603660248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527572652072657761726473207468616e206c696d69742160501b60648201526084016106af565b610d2d82610fd2565b610d975760405162461bcd60e51b815260206004820152603560248201527f41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6044820152746f7265207468616e206f6e6365207065722064617960581b60648201526084016106af565b808311610dda5760405162461bcd60e51b8152602060048201526011602482015270105093d0550e8e9cd95b9914995dd85c99607a1b60448201526064016106af565b6001600160a01b0382166000908152600460205260409020429055610dff83826118a3565b925047610e0b826118b6565b610e2f610e206000546001600160a01b031690565b610e2a47846118a3565b611a2e565b600854610e46906001600160a01b03168486611b0d565b60405184906001600160a01b038516907fd9d5e983e9e8a6571ffbeafa6a3c2fbd9f0f44e52607977b5e1e7934f7d91bfc90600090a350505050565b33610e956000546001600160a01b031690565b6001600160a01b03161480610eb457506002546001600160a01b031633145b610ed05760405162461bcd60e51b81526004016106af90611e51565b6000600182604051610ee29190611dd4565b9081526040519081900360200190205550565b33610f086000546001600160a01b031690565b6001600160a01b03161480610f2757506002546001600160a01b031633145b610f435760405162461bcd60e51b81526004016106af90611e51565b610f506201518042611f17565b600182604051610f609190611dd4565b908152602001604051809103902081905550600181604051610f829190611dd4565b90815260200160405180910390205481604051610f9f9190611dd4565b604051908190038120907ff77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c890600090a350565b600a546001600160a01b03821660009081526004602052604081205490914291610ffc9190611f17565b111592915050565b6000546001600160a01b0316331461102e5760405162461bcd60e51b81526004016106af90611df0565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461107a5760405162461bcd60e51b81526004016106af90611df0565b6008546110a9906001600160a01b031661109c6000546001600160a01b031690565b6110a46105e0565b611b0d565b4780156110cb576110cb6110c56000546001600160a01b031690565b82611a2e565b600080546040516001600160a01b03909116917f5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a291a250565b6000546001600160a01b0316331461112e5760405162461bcd60e51b81526004016106af90611df0565b60408051808201909152601981527f61646a7573744d6178416d6f756e7450657252656365697665000000000000006020820152600054600160a01b900460ff1615806111fb57506001816040516111869190611dd4565b9081526020016040518091039020546000141580156111c35750426001826040516111b19190611dd4565b90815260200160405180910390205411155b80156111fb575042620151806001836040516111df9190611dd4565b9081526020016040518091039020546111f89190611f17565b10155b6112175760405162461bcd60e51b81526004016106af90611e25565b6009546040518391907fd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd90600090a3600982905561089781610e82565b6000546001600160a01b0316331461127e5760405162461bcd60e51b81526004016106af90611df0565b600c546001600160a01b031661130f5760405162461bcd60e51b815260206004820152604a60248201527f41424f41543a3a73656e645265776172647341734574683a205468657265206960448201527f73206e6f20726f7574657220646566696e656420746f207377617020746f6b656064820152690dce640ccdee440cae8d60b31b608482015260a4016106af565b6113176105e0565b82111561139c5760405162461bcd60e51b815260206004820152604760248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e20696e207265776172642060648201526673797374656d2160c81b608482015260a4016106af565b6009548211156114145760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e206c696d6974210000000060648201526084016106af565b61141d81610fd2565b61148f5760405162461bcd60e51b815260206004820152603b60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774206360448201527f6c61696d206d6f7265207468616e206f6e63652070657220646179000000000060648201526084016106af565b6001600160a01b0381166000908152600460205260409020429055476114b4836118b6565b60006114c047836118a3565b905060006114d960055483611c3e90919063ffffffff16565b90506114e582826118a3565b91506114fc6110c56000546001600160a01b031690565b6115068483611a2e565b8082856001600160a01b03167f75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d5343160405160405180910390a45050505050565b6000546001600160a01b0316331461156f5760405162461bcd60e51b81526004016106af90611df0565b6001600160a01b0381166115d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106af565b6115dd81611853565b50565b336115f36000546001600160a01b031690565b6001600160a01b0316148061161257506002546001600160a01b031633145b61162e5760405162461bcd60e51b81526004016106af90611e51565b6000805460ff60a01b1916600160a01b1781556040517f2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e9190a1565b6000546001600160a01b031633146116945760405162461bcd60e51b81526004016106af90611df0565b6040805180820190915260118152703ab83230ba32a932bbb0b9322a37b5b2b760791b6020820152600054600160a01b900460ff16158061175557506001816040516116e09190611dd4565b90815260200160405180910390205460001415801561171d57504260018260405161170b9190611dd4565b90815260200160405180910390205411155b8015611755575042620151806001836040516117399190611dd4565b9081526020016040518091039020546117529190611f17565b10155b6117715760405162461bcd60e51b81526004016106af90611e25565b6008546001600160a01b03838116911614156117f55760405162461bcd60e51b815260206004820152603f60248201527f41424f41543a757064617465526577617264546f6b656e3a20596f752063616e60448201527f277420757064617465207468652065786163742073616d6520746f6b656e730060648201526084016106af565b6008546040516001600160a01b038085169216907fcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d690600090a3600880546001600160a01b0319166001600160a01b03841617905561089781610e82565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006118af8284611f51565b9392505050565b604080516002808252606082018352600092602083019080368337505060085482519293506001600160a01b0316918391506000906118f7576118f7611fae565b6001600160a01b039283166020918202929092010152600b5482519116908290600190811061192857611928611fae565b6001600160a01b039283166020918202929092010152600854600c5460405163095ea7b360e01b815290831660048201526024810185905291169063095ea7b390604401602060405180830381600087803b15801561198657600080fd5b505af115801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be9190611c67565b50600c5460405163b6a046b360e01b81526001600160a01b039091169063b6a046b3906119f8908590600090869030904290600401611ea6565b600060405180830381600087803b158015611a1257600080fd5b505af1158015611a26573d6000803e3d6000fd5b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051611a589190611dd4565b60006040518083038185875af1925050503d8060008114611a95576040519150601f19603f3d011682016040523d82523d6000602084013e611a9a565b606091505b5050905080611b085760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106af565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611b699190611dd4565b6000604051808303816000865af19150503d8060008114611ba6576040519150601f19603f3d011682016040523d82523d6000602084013e611bab565b606091505b5091509150818015611bd5575080511580611bd5575080806020019051810190611bd59190611c67565b611c375760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016106af565b5050505050565b60006118af8284611f2f565b600060208284031215611c5c57600080fd5b81356118af81611fda565b600060208284031215611c7957600080fd5b815180151581146118af57600080fd5b600060208284031215611c9b57600080fd5b813567ffffffffffffffff80821115611cb357600080fd5b818401915084601f830112611cc757600080fd5b813581811115611cd957611cd9611fc4565b604051601f8201601f19908116603f01168101908382118183101715611d0157611d01611fc4565b81604052828152876020848701011115611d1a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215611d4c57600080fd5b5035919050565b600060208284031215611d6557600080fd5b5051919050565b60008060408385031215611d7f57600080fd5b823591506020830135611d9181611fda565b809150509250929050565b600080600060608486031215611db157600080fd5b833592506020840135611dc381611fda565b929592945050506040919091013590565b60008251611de6818460208701611f68565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271119d5b98dd1a5bdb881a5cc81b1bd8dad95960721b604082015260600190565b60208082526035908201527f6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f776564206040820152743a379031b0b636103a3434b990333ab731ba34b7b760591b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611ef65784516001600160a01b031683529383019391830191600101611ed1565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115611f2a57611f2a611f98565b500190565b600082611f4c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611f6357611f63611f98565b500390565b60005b83811015611f83578181015183820152602001611f6b565b83811115611f92576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146115dd57600080fdfea26469706673582212209e5b23a1b1f79412e3d2690acbc6541392dbf67a3629fffafb2c4f556161309764736f6c634300080700334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0xA PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x76049B7CAAB30B8BBBDCFF3A1059D9147DBF7B19 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND PUSH20 0xC559ACC356D3037EC6DBC33A20587051188B8634 OR SWAP1 SSTORE PUSH11 0x84595161401484A000000 PUSH1 0x9 SSTORE PUSH3 0x15180 SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD DUP3 AND PUSH20 0xAF984E23EAA3E7967F3C5E007FBE397D8566D23D OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xBAFCDABE65A03825A131298BE7670C0AEC77B37F OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25C1 CODESIZE SUB DUP1 PUSH3 0x25C1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0xE2 SWAP2 PUSH3 0x4D5 JUMP JUMPDEST PUSH3 0xED CALLER PUSH3 0x12E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH3 0x127 SWAP2 AND PUSH3 0x17E JUMP JUMPDEST POP PUSH3 0x56C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x25A1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DA185B99D953DC9858DB1955D85B1B195D PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH3 0x29A JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH3 0x21D SWAP2 SWAP1 PUSH3 0x507 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH3 0x25D JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH3 0x24B SWAP2 SWAP1 PUSH3 0x507 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x29A JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH3 0x27C SWAP2 SWAP1 PUSH3 0x507 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH3 0x297 SWAP2 SWAP1 PUSH3 0x545 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH3 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881A5CC81B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1C4 JUMP JUMPDEST PUSH3 0x2E8 DUP3 PUSH3 0x346 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x3920ECD0F25E4E6CE57AAEC91E57DF499CB7E3E70D6C9604F866AE9265382CF3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH3 0x342 DUP2 PUSH3 0x406 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x391 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x25A1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1C4 JUMP JUMPDEST PUSH3 0x403 DUP2 PUSH3 0x12E JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH3 0x41A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH3 0x43A JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH3 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F2063616C6C20746869732066756E6374696F6E0000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x1C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH3 0x4C2 SWAP2 SWAP1 PUSH3 0x507 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x52A JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x50E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x53A JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x567 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x2025 DUP1 PUSH3 0x57C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA221A15F GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE996A6E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF4762FD6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF4762FD6 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xF7E77BC2 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xF98080C0 EQ PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE996A6E EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xE7B6EBBA EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xEDAE876F EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF3506C1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC07A1D4D EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA221A15F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA347511A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA607494A EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xB59C6E0E EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70ED0ADA GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x9850D32B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x9850D32B EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x9F371995 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x9F531156 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xA1764595 EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70ED0ADA EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13EA5D29 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x13EA5D29 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x5DD53826 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x63CD79B7 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126FFB9 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x11A63E17 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xB40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x32E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x1050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0x1254 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x15E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x5A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x674 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x693 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x36B0B4B73A30B4B732B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x772 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x772 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E277420657175616C2070726576696F7573206D61696E7461696E6572 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x206F72207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DA185B99D953DC9858DB1955D85B1B195D PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x987 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x94F JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x987 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x9AC DUP3 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x3920ECD0F25E4E6CE57AAEC91E57DF499CB7E3E70D6C9604F866AE9265382CF3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xAE7 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAE7 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xCE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0xB74 PUSH1 0x0 PUSH2 0x1853 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A205468657265206973206E6F2072 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7574657220646566696E656420746F207377617020746F6B656E7320666F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x40CAE8D PUSH1 0xE3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0xC34 PUSH2 0x5E0 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72652072657761726473207468616E20696E207265776172642073797374656D PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x72652072657761726473207468616E206C696D697421 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0xD2D DUP3 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6F7265207468616E206F6E63652070657220646179 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST DUP1 DUP4 GT PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105093D0550E8E9CD95B9914995DD85C99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0xDFF DUP4 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP3 POP SELFBALANCE PUSH2 0xE0B DUP3 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0xE2F PUSH2 0xE20 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE2A SELFBALANCE DUP5 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE46 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xD9D5E983E9E8A6571FFBEAFA6A3C2FBD9F0F44E52607977B5E1E7934F7D91BFC SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xE95 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEB4 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST CALLER PUSH2 0xF08 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF27 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0xF50 PUSH3 0x15180 TIMESTAMP PUSH2 0x1F17 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xF77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 TIMESTAMP SWAP2 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10A9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x109C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10C5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x61646A7573744D6178416D6F756E745065725265636569766500000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x11FB JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11FB JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xD07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2054686572652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F20726F7574657220646566696E656420746F207377617020746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xDCE640CCDEE440CAE8D PUSH1 0xB3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x1317 PUSH2 0x5E0 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x139C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E20696E2072657761726420 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x73797374656D21 PUSH1 0xC8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E206C696D69742100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D206D6F7265207468616E206F6E636520706572206461790000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SELFBALANCE PUSH2 0x14B4 DUP4 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C0 SELFBALANCE DUP4 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14D9 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x14E5 DUP3 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC PUSH2 0x10C5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1506 DUP5 DUP4 PUSH2 0x1A2E JUMP JUMPDEST DUP1 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x1853 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x15F3 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1612 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3AB83230BA32A932BBB0B9322A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1755 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x171D JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x170B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1755 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1739 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1752 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A757064617465526577617264546F6B656E3A20596F752063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x277420757064617465207468652065786163742073616D6520746F6B656E7300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 AND SWAP1 PUSH32 0xCB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 DUP5 PUSH2 0x1F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x8 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x18F7 JUMPI PUSH2 0x18F7 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xB SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1928 JUMPI PUSH2 0x1928 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x199A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6A046B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6A046B3 SWAP1 PUSH2 0x19F8 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1BD5 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1BD5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 DUP5 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18AF DUP2 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1CD9 JUMPI PUSH2 0x1CD9 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D01 PUSH2 0x1FC4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1D91 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DC3 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DE6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1F68 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881A5CC81B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x3A379031B0B636103A3434B990333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EF6 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1ED1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F2A PUSH2 0x1F98 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F4C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F63 PUSH2 0x1F98 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F83 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F6B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F92 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DD JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 JUMPDEST 0x23 LOG1 0xB1 0xF7 SWAP5 SLT 0xE3 0xD2 PUSH10 0xACBC6541392DBF67A36 0x29 SELFDESTRUCT STATICCALL 0xFB 0x2C 0x4F SSTORE PUSH2 0x6130 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E6572000000000000000000000000 ",
							"sourceMap": "483:7450:9:-:0;;;765:5:11;737:33;;-1:-1:-1;;;;737:33:11;;;1045:2:9;1014:33;;;;1068:73;;;-1:-1:-1;;;;;;1068:73:9;;;1099:42;1068:73;;;;1147:70;;;;;1175:42;1147:70;;;1298:14;1260:52;;1354:6;1318:42;;;1366:65;;;;;1389:42;1366:65;;;1438:88;;;;;;1483:42;1438:88;;;2466:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:5;867:9:0;:23::i;:::-;2409:11:11;:24;;-1:-1:-1;;;;;;2409:24:11;;;2423:10;2409:24;;;;2508:12:9;:26;;-1:-1:-1;;;;;2508:26:9;;;;;;;;;;2563:13;;2544:33;;2563:13;2544:18;:33::i;:::-;2466:118;483:7450;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;4227:283:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;1365:2:13;1177:68:0;;;1347:21:13;;;1384:18;;;1377:30;-1:-1:-1;;;;;;;;;;;1423:18:13;;;1416:62;1495:18;;1177:68:0;;;;;;;;;1945:243:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:11::1;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;::::0;-1:-1:-1;;;1990:153:11;;1726:2:13;1990:153:11::1;::::0;::::1;1708:21:13::0;1765:2;1745:18;;;1738:30;-1:-1:-1;;;1784:18:13;;;1777:48;1842:18;;1990:153:11::1;1524:342:13::0;1990:153:11::1;4333:31:9::2;4351:12:::0;4333:17:::2;:31::i;:::-;4393:13;::::0;;-1:-1:-1;;;;;4416:28:9;;::::2;-1:-1:-1::0;;;;;;4416:28:9;::::2;::::0;::::2;::::0;;;4459:44:::2;::::0;4393:13;::::2;::::0;4416:28;4393:13;;4459:44:::2;::::0;4374:16:::2;::::0;4459:44:::2;-1:-1:-1::0;2164:17:11::1;2177:3:::0;2164:12:::1;:17::i;:::-;1255:1:0;4227:283:9::0;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;1365:2:13;1177:68:0;;;1347:21:13;;;1384:18;;;1377:30;-1:-1:-1;;;;;;;;;;;1423:18:13;;;1416:62;1495:18;;1177:68:0;1163:356:13;1177:68:0;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;958:2:13;1926:73:0::1;::::0;::::1;940:21:13::0;997:2;977:18;;;970:30;1036:34;1016:18;;;1009:62;-1:-1:-1;;;1087:18:13;;;1080:36;1133:19;;1926:73:0::1;756:402:13::0;1926:73:0::1;2009:19;2019:8:::0;2009:9:::1;:19::i;:::-;1846:189:::0;:::o;4317:104:11:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:11;-1:-1:-1;;;;;2253:21:11;;:50;;;-1:-1:-1;2278:11:11;;-1:-1:-1;;;;;2278:11:11;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:11;;2073:2:13;2245:116:11;;;2055:21:13;2112:2;2092:18;;;2085:30;2151:34;2131:18;;;2124:62;2222:23;2202:18;;;2195:51;2263:19;;2245:116:11;1871:417:13;2245:116:11;4413:1:::1;4397:8;4406:3;4397:13;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:17;-1:-1:-1;4317:104:11:o;14:304:13:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:13;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:13:o;323:428::-;454:3;492:6;486:13;517:1;527:129;541:6;538:1;535:13;527:129;;;639:4;623:14;;;619:25;;613:32;600:11;;;593:53;556:12;527:129;;;674:6;671:1;668:13;665:48;;;709:1;700:6;695:3;691:16;684:27;665:48;-1:-1:-1;729:16:13;;;;;323:428;-1:-1:-1;;323:428:13:o;2293:225::-;2333:3;2364:1;2360:6;2357:1;2354:13;2351:136;;;2409:10;2404:3;2400:20;2397:1;2390:31;2444:4;2441:1;2434:15;2472:4;2469:1;2462:15;2351:136;-1:-1:-1;2503:9:13;;2293:225::o;:::-;483:7450:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1897": {
									"entryPoint": null,
									"id": 1897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_claimTimes_1805": {
									"entryPoint": null,
									"id": 1805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_devWallet_1814": {
									"entryPoint": null,
									"id": 1814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_maxAmountPerReceive_1820": {
									"entryPoint": null,
									"id": 1820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_oracleWallet_1811": {
									"entryPoint": null,
									"id": 1811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rewardToken_1817": {
									"entryPoint": null,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_rewards_1801": {
									"entryPoint": null,
									"id": 1801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_router_1832": {
									"entryPoint": null,
									"id": 1832,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setOwner_102": {
									"entryPoint": 6227,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_timeBetweenClaims_1823": {
									"entryPoint": null,
									"id": 1823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_weth_1826": {
									"entryPoint": null,
									"id": 1826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@adjustMaxAmountPerReceive_1960": {
									"entryPoint": 4356,
									"id": 1960,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canClaim_1940": {
									"entryPoint": 4050,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeFee_2055": {
									"entryPoint": 2564,
									"id": 2055,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeOracleWallet_2022": {
									"entryPoint": 2203,
									"id": 2022,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1290": {
									"entryPoint": 7230,
									"id": 1290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2103": {
									"entryPoint": 4176,
									"id": 2103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1911": {
									"entryPoint": 1504,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEthBalance_1923": {
									"entryPoint": null,
									"id": 1923,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isLockEnabled_2782": {
									"entryPoint": null,
									"id": 2782,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockFunction_2968": {
									"entryPoint": 3714,
									"id": 2968,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@maintainer_2879": {
									"entryPoint": null,
									"id": 2879,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nativeSwapFee_1808": {
									"entryPoint": null,
									"id": 1808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2880,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferETH_3085": {
									"entryPoint": 6702,
									"id": 3085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_3014": {
									"entryPoint": 6925,
									"id": 3014,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendRewardAsEth_2330": {
									"entryPoint": 4692,
									"id": 2330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sendRewards_2217": {
									"entryPoint": 2934,
									"id": 2217,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMaintainer_2917": {
									"entryPoint": 1633,
									"id": 2917,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_2035": {
									"entryPoint": 4100,
									"id": 2035,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTimelockEnabled_2930": {
									"entryPoint": 5600,
									"id": 2930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1260": {
									"entryPoint": 6307,
									"id": 1260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapTokensForEth_2386": {
									"entryPoint": 6326,
									"id": 2386,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@timelock_2786": {
									"entryPoint": null,
									"id": 2786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 5445,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlockFunction_2954": {
									"entryPoint": 3829,
									"id": 2954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_1994": {
									"entryPoint": 5738,
									"id": 1994,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$727": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IKaiDexRouter_$2767": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IKaiDexRouter_$2767__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14487:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:13"
															},
															"nodeType": "YulIf",
															"src": "94:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:13",
														"type": ""
													}
												],
												"src": "14:247:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "344:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "402:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "392:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "392:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "392:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "365:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "374:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "357:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:32:13"
															},
															"nodeType": "YulIf",
															"src": "354:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "434:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "428:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "419:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "466:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "487:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "480:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "480:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "473:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "473:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "463:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:40:13"
															},
															"nodeType": "YulIf",
															"src": "453:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "522:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "532:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "321:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "333:6:13",
														"type": ""
													}
												],
												"src": "266:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "678:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "687:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "690:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "680:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "680:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "680:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "653:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "662:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "649:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "645:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:32:13"
															},
															"nodeType": "YulIf",
															"src": "642:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "703:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "716:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "707:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "773:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "748:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "748:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "788:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "798:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$727",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "598:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "609:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "548:261:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "906:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "952:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "954:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "954:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "927:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "936:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "948:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "919:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:32:13"
															},
															"nodeType": "YulIf",
															"src": "916:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "977:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1003:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "990:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "990:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "981:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1022:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1022:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1072:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IKaiDexRouter_$2767",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "872:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "883:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "895:6:13",
														"type": ""
													}
												],
												"src": "814:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:842:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1214:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1216:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1216:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1189:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1198:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:32:13"
															},
															"nodeType": "YulIf",
															"src": "1178:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1239:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1266:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1253:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1243:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1285:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1295:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1289:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1328:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1336:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1325:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:14:13"
															},
															"nodeType": "YulIf",
															"src": "1322:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1365:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1379:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1390:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1369:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1445:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1454:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1457:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1447:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1447:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1424:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1428:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1420:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1420:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:35:13"
															},
															"nodeType": "YulIf",
															"src": "1406:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1470:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1493:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1480:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1474:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1519:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1521:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1521:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1521:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1511:2:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1515:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1508:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:10:13"
															},
															"nodeType": "YulIf",
															"src": "1505:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1550:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1560:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1554:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1576:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1580:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1608:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1630:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1654:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1658:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1650:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1650:13:13"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1665:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1646:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1646:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1670:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1642:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1642:31:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1675:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1612:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1740:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1740:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1740:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1697:10:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1709:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1694:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1694:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1717:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1729:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1714:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1691:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:46:13"
															},
															"nodeType": "YulIf",
															"src": "1688:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1780:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1769:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1807:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1815:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1864:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1876:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1866:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1866:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1866:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1841:2:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1845:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:11:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1850:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1855:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1830:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:33:13"
															},
															"nodeType": "YulIf",
															"src": "1827:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1923:2:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1927:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:11:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1932:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1889:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1959:6:13"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1967:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1955:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1955:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1972:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:24:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1944:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1988:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1998:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1145:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1157:6:13",
														"type": ""
													}
												],
												"src": "1088:922:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2085:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2131:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2140:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2106:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:32:13"
															},
															"nodeType": "YulIf",
															"src": "2095:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2156:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2179:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2166:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2051:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2062:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2074:6:13",
														"type": ""
													}
												],
												"src": "2015:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2281:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2327:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2336:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2329:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2329:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2329:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2302:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2311:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2323:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:32:13"
															},
															"nodeType": "YulIf",
															"src": "2291:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2352:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2368:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2362:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2247:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2258:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2270:6:13",
														"type": ""
													}
												],
												"src": "2200:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2476:228:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2522:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2531:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2534:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2524:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2524:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2497:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2518:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:32:13"
															},
															"nodeType": "YulIf",
															"src": "2486:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2547:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2557:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2589:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2630:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2615:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2602:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2593:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2668:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2643:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2683:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2693:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2434:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2445:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2457:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2465:6:13",
														"type": ""
													}
												],
												"src": "2389:315:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2813:279:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2859:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2868:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2871:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2861:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2861:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2861:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2834:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2830:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2830:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2826:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:32:13"
															},
															"nodeType": "YulIf",
															"src": "2823:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2884:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2907:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2894:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2884:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2926:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2939:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2930:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3005:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2980:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2980:31:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3020:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3030:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3044:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3054:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2763:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2774:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2786:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2794:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2802:6:13",
														"type": ""
													}
												],
												"src": "2709:383:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3234:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3244:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3264:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3258:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3248:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3306:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3302:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3302:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3321:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3326:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3280:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3342:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3353:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3358:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3210:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3215:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3226:3:13",
														"type": ""
													}
												],
												"src": "3097:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3515:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3525:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3545:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3539:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3529:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3587:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3583:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3602:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3607:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3561:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3561:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3623:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3634:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3639:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3623:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3491:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3496:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3507:3:13",
														"type": ""
													}
												],
												"src": "3376:276:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3758:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3768:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3780:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3791:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3776:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3768:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3825:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3841:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3846:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3837:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3837:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3850:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3821:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3821:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3803:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3727:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3738:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3749:4:13",
														"type": ""
													}
												],
												"src": "3657:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3994:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4004:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4016:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4012:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4004:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4061:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4077:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4082:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4073:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4073:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4086:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4069:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4069:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4057:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4057:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4039:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4099:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3955:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3966:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3974:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3985:4:13",
														"type": ""
													}
												],
												"src": "3865:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4239:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4249:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4261:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4257:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4249:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4291:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4316:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4309:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4309:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4302:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4284:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4284:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4208:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4219:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4230:4:13",
														"type": ""
													}
												],
												"src": "4144:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4451:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4461:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4473:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4484:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4469:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4461:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4503:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4518:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4534:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4539:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4530:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4530:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4543:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4526:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4526:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4514:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4514:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4496:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4420:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4431:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4442:4:13",
														"type": ""
													}
												],
												"src": "4336:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4681:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4691:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4703:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4714:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4699:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4691:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4748:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4764:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4769:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4760:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4760:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4773:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4756:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4756:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4744:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4726:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IKaiDexRouter_$2767__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4650:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4661:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4672:4:13",
														"type": ""
													}
												],
												"src": "4558:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4962:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4972:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5024:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5029:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5052:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5063:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5048:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5048:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5068:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5041:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5123:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5134:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5119:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5119:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5139:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5157:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5169:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5180:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5165:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5157:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4953:4:13",
														"type": ""
													}
												],
												"src": "4788:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5369:244:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5386:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:13",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5470:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5475:34:13",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't send mo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5448:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5541:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:18:13"
																	},
																	{
																		"hexValue": "72652072657761726473207468616e206c696d697421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5546:24:13",
																		"type": "",
																		"value": "re rewards than limit!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5519:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5519:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5580:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5592:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5603:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5588:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5580:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5346:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5360:4:13",
														"type": ""
													}
												],
												"src": "5195:418:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5792:242:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5820:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5802:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5802:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5843:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5854:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:13",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5832:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5882:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5893:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5878:18:13"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5898:34:13",
																		"type": "",
																		"value": "TransferHelper::safeTransferETH:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5871:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5871:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5871:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5953:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5964:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:18:13"
																	},
																	{
																		"hexValue": "20455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5969:22:13",
																		"type": "",
																		"value": " ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6001:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6013:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6001:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5769:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5783:4:13",
														"type": ""
													}
												],
												"src": "5618:416:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6213:295:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6230:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6264:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6275:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6260:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6280:2:13",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6253:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6303:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6314:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6319:34:13",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't send mo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6292:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6292:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6292:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6374:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6385:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6370:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6370:18:13"
																	},
																	{
																		"hexValue": "72652072657761726473207468616e20696e207265776172642073797374656d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6390:34:13",
																		"type": "",
																		"value": "re rewards than in reward system"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6441:19:13"
																	},
																	{
																		"hexValue": "21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6462:3:13",
																		"type": "",
																		"value": "!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6475:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6487:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6498:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6475:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6190:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6204:4:13",
														"type": ""
													}
												],
												"src": "6039:469:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6687:167:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6704:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6697:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6738:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6749:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6734:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6727:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6777:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6788:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6773:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6773:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e64526577617264",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6793:19:13",
																		"type": "",
																		"value": "ABOAT::sendReward"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6766:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6766:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6766:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6822:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6834:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6845:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6822:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6664:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6678:4:13",
														"type": ""
													}
												],
												"src": "6513:341:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7033:250:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7050:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7043:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7100:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7123:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7134:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7119:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7119:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7139:34:13",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7205:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7190:18:13"
																	},
																	{
																		"hexValue": "656e64206d6f72652072657761726473207468616e206c696d697421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7210:30:13",
																		"type": "",
																		"value": "end more rewards than limit!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7183:58:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7250:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7262:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7273:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7250:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7010:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7024:4:13",
														"type": ""
													}
												],
												"src": "6859:424:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7462:310:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7479:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7490:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7472:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7472:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7513:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7524:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7509:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7529:2:13",
																		"type": "",
																		"value": "80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7502:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7552:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7563:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7548:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7568:34:13",
																		"type": "",
																		"value": "ABOAT::setMaintainer: Maintainer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7541:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7541:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7623:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7634:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7619:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7619:18:13"
																	},
																	{
																		"hexValue": "2063616e277420657175616c2070726576696f7573206d61696e7461696e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7639:34:13",
																		"type": "",
																		"value": " can't equal previous maintainer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7612:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7612:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7612:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7694:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7705:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7690:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7690:19:13"
																	},
																	{
																		"hexValue": "206f72207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7711:18:13",
																		"type": "",
																		"value": " or zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7683:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7683:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7683:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7739:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7751:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7747:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7739:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7439:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7453:4:13",
														"type": ""
													}
												],
												"src": "7288:484:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7951:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7968:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7979:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7961:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7961:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8002:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8013:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7998:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7998:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8018:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7991:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8057:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8030:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8101:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8113:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8124:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8109:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8101:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7928:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7942:4:13",
														"type": ""
													}
												],
												"src": "7777:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8312:304:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8329:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8340:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8322:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8322:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8363:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8374:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8359:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8359:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:2:13",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8352:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8402:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8398:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2054686572652069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8418:34:13",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: There i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8391:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8473:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8484:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8469:18:13"
																	},
																	{
																		"hexValue": "73206e6f20726f7574657220646566696e656420746f207377617020746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8489:34:13",
																		"type": "",
																		"value": "s no router defined to swap toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8462:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8544:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8555:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8540:19:13"
																	},
																	{
																		"hexValue": "6e7320666f7220657468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8561:12:13",
																		"type": "",
																		"value": "ns for eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8583:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8595:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8606:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8583:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8289:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8303:4:13",
														"type": ""
													}
												],
												"src": "8138:478:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8795:249:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8812:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8823:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8805:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8846:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8857:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8842:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8842:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:2:13",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8835:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8835:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8835:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8885:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8896:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8881:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8881:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8901:34:13",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8874:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8956:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8952:18:13"
																	},
																	{
																		"hexValue": "6c61696d206d6f7265207468616e206f6e63652070657220646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8972:29:13",
																		"type": "",
																		"value": "laim more than once per day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8945:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9011:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9023:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9019:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9011:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8772:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8786:4:13",
														"type": ""
													}
												],
												"src": "8621:423:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9223:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9240:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9233:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9233:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9233:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9274:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9285:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9290:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9324:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9309:18:13"
																	},
																	{
																		"hexValue": "46756e6374696f6e206973206c6f636b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9329:20:13",
																		"type": "",
																		"value": "Function is locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9302:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9302:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9359:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9371:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9382:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9359:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9200:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9214:4:13",
														"type": ""
													}
												],
												"src": "9049:342:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9570:243:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9587:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9580:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9580:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9580:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9621:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9632:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9617:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9617:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9637:2:13",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9610:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9671:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:18:13"
																	},
																	{
																		"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9676:34:13",
																		"type": "",
																		"value": "operator: caller is not allowed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9649:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9649:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9649:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9742:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9727:18:13"
																	},
																	{
																		"hexValue": "746f2063616c6c20746869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9747:23:13",
																		"type": "",
																		"value": "to call this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9720:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9780:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9792:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9788:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9780:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9547:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9561:4:13",
														"type": ""
													}
												],
												"src": "9396:417:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:298:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10009:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10020:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10043:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10054:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10039:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10059:2:13",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10032:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10082:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10093:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10078:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10078:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a205468657265206973206e6f2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10098:34:13",
																		"type": "",
																		"value": "ABOAT::sendReward: There is no r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10071:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10071:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10071:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10153:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10164:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10149:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10149:18:13"
																	},
																	{
																		"hexValue": "6f7574657220646566696e656420746f207377617020746f6b656e7320666f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10169:34:13",
																		"type": "",
																		"value": "outer defined to swap tokens for"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10142:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10142:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10142:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10224:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10235:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10220:19:13"
																	},
																	{
																		"hexValue": "20657468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10241:6:13",
																		"type": "",
																		"value": " eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10213:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10213:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10257:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10269:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10280:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10265:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10265:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10257:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9969:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9983:4:13",
														"type": ""
													}
												],
												"src": "9818:472:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10469:301:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10479:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10520:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10531:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10516:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10516:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10536:2:13",
																		"type": "",
																		"value": "71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10559:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10570:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10555:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10575:34:13",
																		"type": "",
																		"value": "ABOAT::sendRewardsAsEth: Can't s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10548:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10630:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10641:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10626:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10626:18:13"
																	},
																	{
																		"hexValue": "656e64206d6f72652072657761726473207468616e20696e2072657761726420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10646:34:13",
																		"type": "",
																		"value": "end more rewards than in reward "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10619:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10619:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10701:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10712:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10697:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10697:19:13"
																	},
																	{
																		"hexValue": "73797374656d21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10718:9:13",
																		"type": "",
																		"value": "system!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10737:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10749:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10760:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10745:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10737:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10446:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10460:4:13",
														"type": ""
													}
												],
												"src": "10295:475:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10949:253:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10966:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10977:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10959:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10959:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11000:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11011:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10996:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10996:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11016:2:13",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10989:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10989:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10989:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11039:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11050:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11035:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11035:18:13"
																	},
																	{
																		"hexValue": "41424f41543a757064617465526577617264546f6b656e3a20596f752063616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11055:34:13",
																		"type": "",
																		"value": "ABOAT:updateRewardToken: You can"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11028:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11028:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11028:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11110:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11121:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11106:18:13"
																	},
																	{
																		"hexValue": "277420757064617465207468652065786163742073616d6520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11126:33:13",
																		"type": "",
																		"value": "'t update the exact same tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11099:61:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11169:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11177:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10926:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10940:4:13",
														"type": ""
													}
												],
												"src": "10775:427:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11381:235:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11398:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11409:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11391:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11391:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11432:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11443:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11428:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11448:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11421:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11471:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11482:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:18:13"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11487:34:13",
																		"type": "",
																		"value": "TransferHelper::safeTransfer: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11460:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11460:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11460:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11542:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11553:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11538:18:13"
																	},
																	{
																		"hexValue": "616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11558:15:13",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11531:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11583:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11595:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11606:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11591:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11358:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11372:4:13",
														"type": ""
													}
												],
												"src": "11207:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11795:243:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11812:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11823:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11805:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11805:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11805:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11846:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11857:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11842:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11842:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11862:2:13",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11835:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11835:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11885:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11896:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11881:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11881:18:13"
																	},
																	{
																		"hexValue": "41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11901:34:13",
																		"type": "",
																		"value": "ABOAT::sendReward: Can't claim m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11874:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11874:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11956:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11967:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11952:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11952:18:13"
																	},
																	{
																		"hexValue": "6f7265207468616e206f6e63652070657220646179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11972:23:13",
																		"type": "",
																		"value": "ore than once per day"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11945:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11945:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12005:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12017:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12028:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12013:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12005:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11772:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11786:4:13",
														"type": ""
													}
												],
												"src": "11621:417:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12144:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12154:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12207:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12189:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12189:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12189:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12113:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12124:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12135:4:13",
														"type": ""
													}
												],
												"src": "12043:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12496:709:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12506:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12524:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12535:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12520:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12520:19:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12510:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12555:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12566:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12548:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12548:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12548:25:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12582:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12592:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12586:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12625:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12630:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12603:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12603:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12603:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12657:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12668:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12653:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12653:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12673:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12646:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12646:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12646:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12686:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "12697:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "12690:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12712:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12732:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12726:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12726:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12716:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12755:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12763:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12748:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12748:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12779:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12790:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12786:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:19:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12814:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12832:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12840:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12828:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12828:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12818:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12852:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12861:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12856:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12920:146:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12941:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12956:6:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "12950:5:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12950:13:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12973:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12978:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "12969:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12969:11:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12982:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "12965:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12965:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12946:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12946:39:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12934:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12934:52:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12934:52:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12999:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13010:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "13015:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13006:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13006:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12999:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13031:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13045:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "13053:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13041:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13041:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13031:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12882:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12885:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12879:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12879:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12893:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12895:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12904:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12907:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12900:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12900:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12895:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12875:3:13",
																"statements": []
															},
															"src": "12871:195:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13075:11:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13083:3:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13075:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13106:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13117:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13102:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13102:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13126:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13142:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13147:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13138:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13138:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13151:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13134:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13134:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13122:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13095:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13095:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13095:60:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13175:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13186:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13171:19:13"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13192:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13164:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13164:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12433:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12444:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12452:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12460:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12468:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12476:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12487:4:13",
														"type": ""
													}
												],
												"src": "12225:980:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13258:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13285:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13287:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13287:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13287:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13274:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13281:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13277:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13277:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13271:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13271:13:13"
															},
															"nodeType": "YulIf",
															"src": "13268:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13316:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13327:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13330:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13323:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13323:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13316:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13241:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13244:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13250:3:13",
														"type": ""
													}
												],
												"src": "13210:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13389:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13420:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13441:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13448:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13453:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13444:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13444:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13434:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13434:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13434:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13485:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13488:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13478:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13478:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13478:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13513:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13516:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13506:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13506:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13506:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13409:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13402:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13402:9:13"
															},
															"nodeType": "YulIf",
															"src": "13399:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13540:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13549:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13552:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13545:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13545:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13540:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13374:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13377:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13383:1:13",
														"type": ""
													}
												],
												"src": "13343:217:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13614:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13636:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13638:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13638:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13638:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13630:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13633:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13627:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13627:8:13"
															},
															"nodeType": "YulIf",
															"src": "13624:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13667:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13679:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13682:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13675:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13675:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13667:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13596:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13599:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13605:4:13",
														"type": ""
													}
												],
												"src": "13565:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13748:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13758:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13767:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13762:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13827:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13852:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13857:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13848:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13848:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13871:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13876:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13867:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13867:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13861:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13861:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13841:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13841:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13841:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13788:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13791:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13785:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13799:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13801:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13810:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13813:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13806:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13806:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13801:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13781:3:13",
																"statements": []
															},
															"src": "13777:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13916:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13929:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13934:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13925:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13925:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13943:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13918:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13918:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13905:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13908:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13902:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13902:13:13"
															},
															"nodeType": "YulIf",
															"src": "13899:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13726:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13731:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13736:6:13",
														"type": ""
													}
												],
												"src": "13695:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13990:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14007:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14014:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14019:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14010:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14000:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14000:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14000:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14047:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14050:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14040:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14040:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14040:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14074:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13958:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14122:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14139:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14146:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14151:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14142:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14142:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14132:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14132:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14132:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14179:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14182:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14172:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14203:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14206:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14196:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14196:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14196:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14090:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14254:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14271:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14278:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14283:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14274:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14274:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14264:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14264:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14264:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14311:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14314:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14304:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14304:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14335:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14338:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14328:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14328:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14328:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14222:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14399:86:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14463:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14472:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14475:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14465:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14465:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14465:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14422:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14433:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14448:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14453:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "14444:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14444:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14457:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14440:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14440:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14429:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14429:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14419:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14419:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14412:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:50:13"
															},
															"nodeType": "YulIf",
															"src": "14409:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14388:5:13",
														"type": ""
													}
												],
												"src": "14354:131:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$727(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IKaiDexRouter_$2767(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$727__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IKaiDexRouter_$2767__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't send mo\")\n        mstore(add(headStart, 96), \"re rewards than limit!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransferETH:\")\n        mstore(add(headStart, 96), \" ETH transfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't send mo\")\n        mstore(add(headStart, 96), \"re rewards than in reward system\")\n        mstore(add(headStart, 128), \"!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"ABOAT::sendReward\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't s\")\n        mstore(add(headStart, 96), \"end more rewards than limit!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"ABOAT::setMaintainer: Maintainer\")\n        mstore(add(headStart, 96), \" can't equal previous maintainer\")\n        mstore(add(headStart, 128), \" or zero address\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: There i\")\n        mstore(add(headStart, 96), \"s no router defined to swap toke\")\n        mstore(add(headStart, 128), \"ns for eth\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't c\")\n        mstore(add(headStart, 96), \"laim more than once per day\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Function is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"operator: caller is not allowed \")\n        mstore(add(headStart, 96), \"to call this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: There is no r\")\n        mstore(add(headStart, 96), \"outer defined to swap tokens for\")\n        mstore(add(headStart, 128), \" eth\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 71)\n        mstore(add(headStart, 64), \"ABOAT::sendRewardsAsEth: Can't s\")\n        mstore(add(headStart, 96), \"end more rewards than in reward \")\n        mstore(add(headStart, 128), \"system!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"ABOAT:updateRewardToken: You can\")\n        mstore(add(headStart, 96), \"'t update the exact same tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TransferHelper::safeTransfer: tr\")\n        mstore(add(headStart, 96), \"ansfer failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ABOAT::sendReward: Can't claim m\")\n        mstore(add(headStart, 96), \"ore than once per day\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101dc5760003560e01c8063a221a15f11610102578063de996a6e11610095578063f4762fd611610064578063f4762fd614610546578063f7e77bc21461055b578063f8cf31cb14610588578063f98080c0146105a857600080fd5b8063de996a6e146104c6578063e7b6ebba146104e6578063edae876f14610506578063f2fde38b1461052657600080fd5b8063bf3506c1116100d1578063bf3506c11461045b578063c07a1d4d1461047b578063c0d7865514610491578063db2e21bc146104b157600080fd5b8063a221a15f146103da578063a347511a146103fa578063a607494a1461041b578063b59c6e0e1461043b57600080fd5b806370ed0ada1161017a5780639850d32b116101495780639850d32b1461035c5780639f3719951461037a5780639f5311561461039a578063a1764595146103ba57600080fd5b806370ed0ada146102d6578063715018a6146102e95780637d6dfb7e146102fe5780638da5cb5b1461033e57600080fd5b806313ea5d29116101b657806313ea5d291461025e5780635dd538261461028057806363cd79b7146102965780636a1db1bf146102b657600080fd5b80630126ffb9146101e857806311a63e171461021157806312065fe01461024957600080fd5b366101e357005b600080fd5b3480156101f457600080fd5b506101fe600a5481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b50600754610231906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b34801561025557600080fd5b506101fe6105e0565b34801561026a57600080fd5b5061027e610279366004611c4a565b610661565b005b34801561028c57600080fd5b506101fe60095481565b3480156102a257600080fd5b5061027e6102b1366004611c4a565b61089b565b3480156102c257600080fd5b5061027e6102d1366004611d3a565b610a04565b3480156102e257600080fd5b50476101fe565b3480156102f557600080fd5b5061027e610b40565b34801561030a57600080fd5b5061032e610319366004611c4a565b60036020526000908152604090205460ff1681565b6040519015158152602001610208565b34801561034a57600080fd5b506000546001600160a01b0316610231565b34801561036857600080fd5b506002546001600160a01b0316610231565b34801561038657600080fd5b5061027e610395366004611d9c565b610b76565b3480156103a657600080fd5b5061027e6103b5366004611c89565b610e82565b3480156103c657600080fd5b50600b54610231906001600160a01b031681565b3480156103e657600080fd5b50600654610231906001600160a01b031681565b34801561040657600080fd5b5060005461032e90600160a01b900460ff1681565b34801561042757600080fd5b5061027e610436366004611c89565b610ef5565b34801561044757600080fd5b50600854610231906001600160a01b031681565b34801561046757600080fd5b5061032e610476366004611c4a565b610fd2565b34801561048757600080fd5b506101fe60055481565b34801561049d57600080fd5b5061027e6104ac366004611c4a565b611004565b3480156104bd57600080fd5b5061027e611050565b3480156104d257600080fd5b5061027e6104e1366004611d3a565b611104565b3480156104f257600080fd5b5061027e610501366004611d6c565b611254565b34801561051257600080fd5b50600c54610231906001600160a01b031681565b34801561053257600080fd5b5061027e610541366004611c4a565b611545565b34801561055257600080fd5b5061027e6115e0565b34801561056757600080fd5b506101fe610576366004611c4a565b60046020526000908152604090205481565b34801561059457600080fd5b5061027e6105a3366004611c4a565b61166a565b3480156105b457600080fd5b506101fe6105c3366004611c89565b805160208183018101805160018252928201919093012091525481565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c9190611d53565b905090565b336106746000546001600160a01b031690565b6001600160a01b0316148061069357506002546001600160a01b031633145b6106b85760405162461bcd60e51b81526004016106af90611e51565b60405180910390fd5b60408051808201909152600a81526936b0b4b73a30b4b732b960b11b6020820152600054600160a01b900460ff16158061077257506001816040516106fd9190611dd4565b90815260200160405180910390205460001415801561073a5750426001826040516107289190611dd4565b90815260200160405180910390205411155b8015610772575042620151806001836040516107569190611dd4565b90815260200160405180910390205461076f9190611f17565b10155b61078e5760405162461bcd60e51b81526004016106af90611e25565b6002546001600160a01b038381169116148015906107b457506001600160a01b03821615155b61083f5760405162461bcd60e51b815260206004820152605060248201527f41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e657260448201527f2063616e277420657175616c2070726576696f7573206d61696e7461696e657260648201526f206f72207a65726f206164647265737360801b608482015260a4016106af565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f2f3ffaaaad93928855c8700645d1a3643e6ccfdd500efa9fda048a88f557cf0190600090a35061089781610e82565b5050565b6000546001600160a01b031633146108c55760405162461bcd60e51b81526004016106af90611df0565b60408051808201909152601281527118da185b99d953dc9858db1955d85b1b195d60721b6020820152600054600160a01b900460ff16158061098757506001816040516109129190611dd4565b90815260200160405180910390205460001415801561094f57504260018260405161093d9190611dd4565b90815260200160405180910390205411155b80156109875750426201518060018360405161096b9190611dd4565b9081526020016040518091039020546109849190611f17565b10155b6109a35760405162461bcd60e51b81526004016106af90611e25565b6109ac82611545565b600680546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f3920ecd0f25e4e6ce57aaec91e57df499cb7e3e70d6c9604f866ae9265382cf390600090a35061089781610e82565b6000546001600160a01b03163314610a2e5760405162461bcd60e51b81526004016106af90611df0565b6040805180820190915260098152686368616e676546656560b81b6020820152600054600160a01b900460ff161580610ae75750600181604051610a729190611dd4565b908152602001604051809103902054600014158015610aaf575042600182604051610a9d9190611dd4565b90815260200160405180910390205411155b8015610ae757504262015180600183604051610acb9190611dd4565b908152602001604051809103902054610ae49190611f17565b10155b610b035760405162461bcd60e51b81526004016106af90611e25565b6005546040518391907fce8c8159f011d886721740f77c2d26c91b08ac01bd1d03bd132a9942661cb14990600090a3600582905561089781610e82565b6000546001600160a01b03163314610b6a5760405162461bcd60e51b81526004016106af90611df0565b610b746000611853565b565b6000546001600160a01b03163314610ba05760405162461bcd60e51b81526004016106af90611df0565b600c546001600160a01b0316610c2c5760405162461bcd60e51b8152602060048201526044602482018190527f41424f41543a3a73656e645265776172643a205468657265206973206e6f2072908201527f6f7574657220646566696e656420746f207377617020746f6b656e7320666f72606482015263040cae8d60e31b608482015260a4016106af565b610c346105e0565b831115610cb35760405162461bcd60e51b815260206004820152604160248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527f72652072657761726473207468616e20696e207265776172642073797374656d6064820152602160f81b608482015260a4016106af565b600954831115610d245760405162461bcd60e51b815260206004820152603660248201527f41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f60448201527572652072657761726473207468616e206c696d69742160501b60648201526084016106af565b610d2d82610fd2565b610d975760405162461bcd60e51b815260206004820152603560248201527f41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6044820152746f7265207468616e206f6e6365207065722064617960581b60648201526084016106af565b808311610dda5760405162461bcd60e51b8152602060048201526011602482015270105093d0550e8e9cd95b9914995dd85c99607a1b60448201526064016106af565b6001600160a01b0382166000908152600460205260409020429055610dff83826118a3565b925047610e0b826118b6565b610e2f610e206000546001600160a01b031690565b610e2a47846118a3565b611a2e565b600854610e46906001600160a01b03168486611b0d565b60405184906001600160a01b038516907fd9d5e983e9e8a6571ffbeafa6a3c2fbd9f0f44e52607977b5e1e7934f7d91bfc90600090a350505050565b33610e956000546001600160a01b031690565b6001600160a01b03161480610eb457506002546001600160a01b031633145b610ed05760405162461bcd60e51b81526004016106af90611e51565b6000600182604051610ee29190611dd4565b9081526040519081900360200190205550565b33610f086000546001600160a01b031690565b6001600160a01b03161480610f2757506002546001600160a01b031633145b610f435760405162461bcd60e51b81526004016106af90611e51565b610f506201518042611f17565b600182604051610f609190611dd4565b908152602001604051809103902081905550600181604051610f829190611dd4565b90815260200160405180910390205481604051610f9f9190611dd4565b604051908190038120907ff77f9a799fe8b0be1463abd7459a18fc55dfd8a6a24ddd29b54fd098088089c890600090a350565b600a546001600160a01b03821660009081526004602052604081205490914291610ffc9190611f17565b111592915050565b6000546001600160a01b0316331461102e5760405162461bcd60e51b81526004016106af90611df0565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461107a5760405162461bcd60e51b81526004016106af90611df0565b6008546110a9906001600160a01b031661109c6000546001600160a01b031690565b6110a46105e0565b611b0d565b4780156110cb576110cb6110c56000546001600160a01b031690565b82611a2e565b600080546040516001600160a01b03909116917f5e7b34819cd91b239220bec92fcfd3c10da2214ba13e4e2b1f6c9cfdbd68a9a291a250565b6000546001600160a01b0316331461112e5760405162461bcd60e51b81526004016106af90611df0565b60408051808201909152601981527f61646a7573744d6178416d6f756e7450657252656365697665000000000000006020820152600054600160a01b900460ff1615806111fb57506001816040516111869190611dd4565b9081526020016040518091039020546000141580156111c35750426001826040516111b19190611dd4565b90815260200160405180910390205411155b80156111fb575042620151806001836040516111df9190611dd4565b9081526020016040518091039020546111f89190611f17565b10155b6112175760405162461bcd60e51b81526004016106af90611e25565b6009546040518391907fd07363c93ca88ca1140b355020cb77b0320b19e19a34bb15aa4566d27c2fabbd90600090a3600982905561089781610e82565b6000546001600160a01b0316331461127e5760405162461bcd60e51b81526004016106af90611df0565b600c546001600160a01b031661130f5760405162461bcd60e51b815260206004820152604a60248201527f41424f41543a3a73656e645265776172647341734574683a205468657265206960448201527f73206e6f20726f7574657220646566696e656420746f207377617020746f6b656064820152690dce640ccdee440cae8d60b31b608482015260a4016106af565b6113176105e0565b82111561139c5760405162461bcd60e51b815260206004820152604760248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e20696e207265776172642060648201526673797374656d2160c81b608482015260a4016106af565b6009548211156114145760405162461bcd60e51b815260206004820152603c60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774207360448201527f656e64206d6f72652072657761726473207468616e206c696d6974210000000060648201526084016106af565b61141d81610fd2565b61148f5760405162461bcd60e51b815260206004820152603b60248201527f41424f41543a3a73656e645265776172647341734574683a2043616e2774206360448201527f6c61696d206d6f7265207468616e206f6e63652070657220646179000000000060648201526084016106af565b6001600160a01b0381166000908152600460205260409020429055476114b4836118b6565b60006114c047836118a3565b905060006114d960055483611c3e90919063ffffffff16565b90506114e582826118a3565b91506114fc6110c56000546001600160a01b031690565b6115068483611a2e565b8082856001600160a01b03167f75b2eac24930bf6a8227dbe172d34480e56be5c6994435067628424190d5343160405160405180910390a45050505050565b6000546001600160a01b0316331461156f5760405162461bcd60e51b81526004016106af90611df0565b6001600160a01b0381166115d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106af565b6115dd81611853565b50565b336115f36000546001600160a01b031690565b6001600160a01b0316148061161257506002546001600160a01b031633145b61162e5760405162461bcd60e51b81526004016106af90611e51565b6000805460ff60a01b1916600160a01b1781556040517f2c08b62bfac9a1b19bb1dec9323f1ce01696a77948b256abf3603d30f25a864e9190a1565b6000546001600160a01b031633146116945760405162461bcd60e51b81526004016106af90611df0565b6040805180820190915260118152703ab83230ba32a932bbb0b9322a37b5b2b760791b6020820152600054600160a01b900460ff16158061175557506001816040516116e09190611dd4565b90815260200160405180910390205460001415801561171d57504260018260405161170b9190611dd4565b90815260200160405180910390205411155b8015611755575042620151806001836040516117399190611dd4565b9081526020016040518091039020546117529190611f17565b10155b6117715760405162461bcd60e51b81526004016106af90611e25565b6008546001600160a01b03838116911614156117f55760405162461bcd60e51b815260206004820152603f60248201527f41424f41543a757064617465526577617264546f6b656e3a20596f752063616e60448201527f277420757064617465207468652065786163742073616d6520746f6b656e730060648201526084016106af565b6008546040516001600160a01b038085169216907fcb89265f21b9fc8710e9d9e42bbb37af1eb207454deca6d5e36787be2367c1d690600090a3600880546001600160a01b0319166001600160a01b03841617905561089781610e82565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006118af8284611f51565b9392505050565b604080516002808252606082018352600092602083019080368337505060085482519293506001600160a01b0316918391506000906118f7576118f7611fae565b6001600160a01b039283166020918202929092010152600b5482519116908290600190811061192857611928611fae565b6001600160a01b039283166020918202929092010152600854600c5460405163095ea7b360e01b815290831660048201526024810185905291169063095ea7b390604401602060405180830381600087803b15801561198657600080fd5b505af115801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be9190611c67565b50600c5460405163b6a046b360e01b81526001600160a01b039091169063b6a046b3906119f8908590600090869030904290600401611ea6565b600060405180830381600087803b158015611a1257600080fd5b505af1158015611a26573d6000803e3d6000fd5b505050505050565b604080516000808252602082019092526001600160a01b038416908390604051611a589190611dd4565b60006040518083038185875af1925050503d8060008114611a95576040519150601f19603f3d011682016040523d82523d6000602084013e611a9a565b606091505b5050905080611b085760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106af565b505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691611b699190611dd4565b6000604051808303816000865af19150503d8060008114611ba6576040519150601f19603f3d011682016040523d82523d6000602084013e611bab565b606091505b5091509150818015611bd5575080511580611bd5575080806020019051810190611bd59190611c67565b611c375760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b60648201526084016106af565b5050505050565b60006118af8284611f2f565b600060208284031215611c5c57600080fd5b81356118af81611fda565b600060208284031215611c7957600080fd5b815180151581146118af57600080fd5b600060208284031215611c9b57600080fd5b813567ffffffffffffffff80821115611cb357600080fd5b818401915084601f830112611cc757600080fd5b813581811115611cd957611cd9611fc4565b604051601f8201601f19908116603f01168101908382118183101715611d0157611d01611fc4565b81604052828152876020848701011115611d1a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215611d4c57600080fd5b5035919050565b600060208284031215611d6557600080fd5b5051919050565b60008060408385031215611d7f57600080fd5b823591506020830135611d9181611fda565b809150509250929050565b600080600060608486031215611db157600080fd5b833592506020840135611dc381611fda565b929592945050506040919091013590565b60008251611de6818460208701611f68565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271119d5b98dd1a5bdb881a5cc81b1bd8dad95960721b604082015260600190565b60208082526035908201527f6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f776564206040820152743a379031b0b636103a3434b990333ab731ba34b7b760591b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611ef65784516001600160a01b031683529383019391830191600101611ed1565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115611f2a57611f2a611f98565b500190565b600082611f4c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611f6357611f63611f98565b500390565b60005b83811015611f83578181015183820152602001611f6b565b83811115611f92576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146115dd57600080fdfea26469706673582212209e5b23a1b1f79412e3d2690acbc6541392dbf67a3629fffafb2c4f556161309764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA221A15F GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xDE996A6E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF4762FD6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF4762FD6 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0xF7E77BC2 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xF98080C0 EQ PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDE996A6E EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xE7B6EBBA EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xEDAE876F EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF3506C1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC07A1D4D EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA221A15F EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xA347511A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA607494A EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xB59C6E0E EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70ED0ADA GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x9850D32B GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x9850D32B EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x9F371995 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x9F531156 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xA1764595 EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70ED0ADA EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x7D6DFB7E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13EA5D29 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x13EA5D29 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x5DD53826 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x63CD79B7 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x6A1DB1BF EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x126FFB9 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x11A63E17 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E3 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x1FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0xB40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x231 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x32E SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0xFD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x1050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1104 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0x1254 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x231 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x15E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x5A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x166A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C89 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x674 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x693 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x36B0B4B73A30B4B732B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x772 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x772 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2063616E277420657175616C2070726576696F7573206D61696E7461696E6572 PUSH1 0x64 DUP3 ADD MSTORE PUSH16 0x206F72207A65726F2061646472657373 PUSH1 0x80 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x18DA185B99D953DC9858DB1955D85B1B195D PUSH1 0x72 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x987 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x94F JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x987 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH2 0x9AC DUP3 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x3920ECD0F25E4E6CE57AAEC91E57DF499CB7E3E70D6C9604F866AE9265382CF3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x6368616E6765466565 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xAE7 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAE7 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xCE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP3 SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0xB74 PUSH1 0x0 PUSH2 0x1853 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A205468657265206973206E6F2072 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F7574657220646566696E656420746F207377617020746F6B656E7320666F72 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0x40CAE8D PUSH1 0xE3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0xC34 PUSH2 0x5E0 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72652072657761726473207468616E20696E207265776172642073797374656D PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT ISZERO PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x72652072657761726473207468616E206C696D697421 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0xD2D DUP3 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6F7265207468616E206F6E63652070657220646179 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST DUP1 DUP4 GT PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105093D0550E8E9CD95B9914995DD85C99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH2 0xDFF DUP4 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP3 POP SELFBALANCE PUSH2 0xE0B DUP3 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0xE2F PUSH2 0xE20 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xE2A SELFBALANCE DUP5 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE46 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xD9D5E983E9E8A6571FFBEAFA6A3C2FBD9F0F44E52607977B5E1E7934F7D91BFC SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xE95 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEB4 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST CALLER PUSH2 0xF08 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xF27 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0xF50 PUSH3 0x15180 TIMESTAMP PUSH2 0x1F17 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD DUP2 PUSH1 0x40 MLOAD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xF77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 TIMESTAMP SWAP2 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10A9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x109C PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x1B0D JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CB PUSH2 0x10C5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x61646A7573744D6178416D6F756E745065725265636569766500000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x11FB JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11FB JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x11F8 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP4 SWAP2 SWAP1 PUSH32 0xD07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2054686572652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F20726F7574657220646566696E656420746F207377617020746F6B65 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xDCE640CCDEE440CAE8D PUSH1 0xB3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x1317 PUSH2 0x5E0 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x139C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E20696E2072657761726420 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x73797374656D21 PUSH1 0xC8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E64206D6F72652072657761726473207468616E206C696D69742100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A3A73656E645265776172647341734574683A2043616E27742063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61696D206D6F7265207468616E206F6E636520706572206461790000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SELFBALANCE PUSH2 0x14B4 DUP4 PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C0 SELFBALANCE DUP4 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14D9 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C3E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x14E5 DUP3 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC PUSH2 0x10C5 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1506 DUP5 DUP4 PUSH2 0x1A2E JUMP JUMPDEST DUP1 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x1853 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x15F3 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1612 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x162E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x3AB83230BA32A932BBB0B9322A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1755 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x171D JUMPI POP TIMESTAMP PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x170B SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1755 JUMPI POP TIMESTAMP PUSH3 0x15180 PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1739 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH2 0x1752 SWAP2 SWAP1 PUSH2 0x1F17 JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41424F41543A757064617465526577617264546F6B656E3A20596F752063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x277420757064617465207468652065786163742073616D6520746F6B656E7300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 AND SWAP1 PUSH32 0xCB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0x897 DUP2 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 DUP5 PUSH2 0x1F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x8 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x18F7 JUMPI PUSH2 0x18F7 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xB SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1928 JUMPI PUSH2 0x1928 PUSH2 0x1FAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x199A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6A046B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB6A046B3 SWAP1 PUSH2 0x19F8 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1EA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665724554483A PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x8115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1BD5 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1BD5 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x1C37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A736166655472616E736665723A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185B9CD9995C8819985A5B1959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AF DUP3 DUP5 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18AF DUP2 PUSH2 0x1FDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1CD9 JUMPI PUSH2 0x1CD9 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D01 PUSH2 0x1FC4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1D91 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DC3 DUP2 PUSH2 0x1FDA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DE6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1F68 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881A5CC81B1BD8DAD959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x3A379031B0B636103A3434B990333AB731BA34B7B7 PUSH1 0x59 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EF6 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1ED1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F2A PUSH2 0x1F98 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F4C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F63 PUSH2 0x1F98 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F83 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F6B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F92 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15DD JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 JUMPDEST 0x23 LOG1 0xB1 0xF7 SWAP5 SLT 0xE3 0xD2 PUSH10 0xACBC6541392DBF67A36 0x29 SELFDESTRUCT STATICCALL 0xFB 0x2C 0x4F SSTORE PUSH2 0x6130 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "483:7450:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:42;;;;;;;;;;;;;;;;;;;12189:25:13;;;12177:2;12162:18;1318:42:9;;;;;;;;1147:70;;;;;;;;;;-1:-1:-1;1147:70:9;;;;-1:-1:-1;;;;;1147:70:9;;;;;;-1:-1:-1;;;;;3821:32:13;;;3803:51;;3791:2;3776:18;1147:70:9;3657:203:13;2953:113:9;;;;;;;;;;;;;:::i;3191:426:11:-;;;;;;;;;;-1:-1:-1;3191:426:11;;;;;:::i;:::-;;:::i;:::-;;1260:52:9;;;;;;;;;;;;;;;;4227:283;;;;;;;;;;-1:-1:-1;4227:283:9;;;;;:::i;:::-;;:::i;4617:159::-;;;;;;;;;;-1:-1:-1;4617:159:9;;;;;:::i;:::-;;:::i;3072:100::-;;;;;;;;;;-1:-1:-1;3144:21:9;3072:100;;1605:92:0;;;;;;;;;;;;;:::i;916:40:9:-;;;;;;;;;;-1:-1:-1;916:40:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4309:14:13;;4302:22;4284:41;;4272:2;4257:18;916:40:9;4144:187:13;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;2770:87:11;;;;;;;;;;-1:-1:-1;2839:11:11;;-1:-1:-1;;;;;2839:11:11;2770:87;;5455:935:9;;;;;;;;;;-1:-1:-1;5455:935:9;;;;;:::i;:::-;;:::i;4317:104:11:-;;;;;;;;;;-1:-1:-1;4317:104:11;;;;;:::i;:::-;;:::i;1366:65:9:-;;;;;;;;;;-1:-1:-1;1366:65:9;;;;-1:-1:-1;;;;;1366:65:9;;;1068:73;;;;;;;;;;-1:-1:-1;1068:73:9;;;;-1:-1:-1;;;;;1068:73:9;;;737:33:11;;;;;;;;;;-1:-1:-1;737:33:11;;;;-1:-1:-1;;;737:33:11;;;;;;4100:184;;;;;;;;;;-1:-1:-1;4100:184:11;;;;;:::i;:::-;;:::i;1228:26:9:-;;;;;;;;;;-1:-1:-1;1228:26:9;;;;-1:-1:-1;;;;;1228:26:9;;;3180:140;;;;;;;;;;-1:-1:-1;3180:140:9;;;;;:::i;:::-;;:::i;1014:33::-;;;;;;;;;;;;;;;;4520:91;;;;;;;;;;-1:-1:-1;4520:91:9;;;;;:::i;:::-;;:::i;4782:342::-;;;;;;;;;;;;;:::i;3651:230::-;;;;;;;;;;-1:-1:-1;3651:230:9;;;;;:::i;:::-;;:::i;6400:978::-;;;;;;;;;;-1:-1:-1;6400:978:9;;;;;:::i;:::-;;:::i;1438:88::-;;;;;;;;;;-1:-1:-1;1438:88:9;;;;-1:-1:-1;;;;;1438:88:9;;;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;3627:124:11:-;;;;;;;;;;;;;:::i;962:46:9:-;;;;;;;;;;-1:-1:-1;962:46:9;;;;;:::i;:::-;;;;;;;;;;;;;;3891:326;;;;;;;;;;-1:-1:-1;3891:326:9;;;;;:::i;:::-;;:::i;776:42:11:-;;;;;;;;;;-1:-1:-1;776:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2953:113:9;3022:12;;:37;;-1:-1:-1;;;3022:37:9;;3053:4;3022:37;;;3803:51:13;2996:7:9;;-1:-1:-1;;;;;3022:12:9;;:22;;3776:18:13;;3022:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3015:44;;2953:113;:::o;3191:426:11:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:11;-1:-1:-1;;;;;2253:21:11;;:50;;;-1:-1:-1;2278:11:11;;-1:-1:-1;;;;;2278:11:11;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:11;;;;;;;:::i;:::-;;;;;;;;;1945:243:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:11::1;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:11::1;;;;;;;:::i;:::-;3324:11:::2;::::0;-1:-1:-1;;;;;3306:29:11;;::::2;3324:11:::0;::::2;3306:29;::::0;::::2;::::0;:61:::2;;-1:-1:-1::0;;;;;;3339:28:11;::::2;::::0;::::2;3306:61;3298:155;;;::::0;-1:-1:-1;;;3298:155:11;;7490:2:13;3298:155:11::2;::::0;::::2;7472:21:13::0;7529:2;7509:18;;;7502:30;7568:34;7548:18;;;7541:62;7639:34;7619:18;;;7612:62;-1:-1:-1;;;7690:19:13;;;7683:47;7747:19;;3298:155:11::2;7288:484:13::0;3298:155:11::2;3492:11;::::0;;-1:-1:-1;;;;;3513:28:11;;::::2;-1:-1:-1::0;;;;;;3513:28:11;::::2;::::0;::::2;::::0;;;3556:54:::2;::::0;3492:11;::::2;::::0;3513:28;3492:11;;3556:54:::2;::::0;3463:26:::2;::::0;3556:54:::2;3288:329;2164:17:::1;2177:3;2164:12;:17::i;:::-;2371:1;3191:426:::0;:::o;4227:283:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:11::1;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:11::1;;;;;;;:::i;:::-;4333:31:9::2;4351:12;4333:17;:31::i;:::-;4393:13;::::0;;-1:-1:-1;;;;;4416:28:9;;::::2;-1:-1:-1::0;;;;;;4416:28:9;::::2;::::0;::::2;::::0;;;4459:44:::2;::::0;4393:13;::::2;::::0;4416:28;4393:13;;4459:44:::2;::::0;4374:16:::2;::::0;4459:44:::2;4323:187;2164:17:11::1;2177:3;2164:12;:17::i;4617:159:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:11::1;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:11::1;;;;;;;:::i;:::-;4715:13:9::2;::::0;4704:33:::2;::::0;4730:6;;4715:13;4704:33:::2;::::0;;;::::2;4747:13;:22:::0;;;2164:17:11::1;2177:3:::0;2164:12:::1;:17::i;1605:92:0:-:0;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5455:935:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5562:7:9::1;::::0;-1:-1:-1;;;;;5562:7:9::1;5546:111;;;::::0;-1:-1:-1;;;5546:111:9;;10020:2:13;5546:111:9::1;::::0;::::1;10002:21:13::0;10059:2;10039:18;;;10032:30;;;10098:34;10078:18;;;10071:62;10169:34;10149:18;;;10142:62;-1:-1:-1;;;10220:19:13;;;10213:35;10265:19;;5546:111:9::1;9818:472:13::0;5546:111:9::1;5685:12;:10;:12::i;:::-;5675:6;:22;;5667:100;;;::::0;-1:-1:-1;;;5667:100:9;;6241:2:13;5667:100:9::1;::::0;::::1;6223:21:13::0;6280:2;6260:18;;;6253:30;6319:34;6299:18;;;6292:62;6390:34;6370:18;;;6363:62;-1:-1:-1;;;6441:19:13;;;6434:32;6483:19;;5667:100:9::1;6039:469:13::0;5667:100:9::1;5795:20;;5785:6;:30;;5777:97;;;::::0;-1:-1:-1;;;5777:97:9;;5397:2:13;5777:97:9::1;::::0;::::1;5379:21:13::0;5436:2;5416:18;;;5409:30;5475:34;5455:18;;;5448:62;-1:-1:-1;;;5526:18:13;;;5519:52;5588:19;;5777:97:9::1;5195:418:13::0;5777:97:9::1;5892:14;5901:4;5892:8;:14::i;:::-;5884:80;;;::::0;-1:-1:-1;;;5884:80:9;;11823:2:13;5884:80:9::1;::::0;::::1;11805:21:13::0;11862:2;11842:18;;;11835:30;11901:34;11881:18;;;11874:62;-1:-1:-1;;;11952:18:13;;;11945:51;12013:19;;5884:80:9::1;11621:417:13::0;5884:80:9::1;5991:3;5982:6;:12;5974:42;;;::::0;-1:-1:-1;;;5974:42:9;;6715:2:13;5974:42:9::1;::::0;::::1;6697:21:13::0;6754:2;6734:18;;;6727:30;-1:-1:-1;;;6773:18:13;;;6766:47;6830:18;;5974:42:9::1;6513:341:13::0;5974:42:9::1;-1:-1:-1::0;;;;;6026:17:9;::::1;;::::0;;;:11:::1;:17;::::0;;;;6046:15:::1;6026:35:::0;;6080:15:::1;:6:::0;6091:3;6080:10:::1;:15::i;:::-;6071:24:::0;-1:-1:-1;6123:21:9::1;6154;6171:3:::0;6154:16:::1;:21::i;:::-;6185:84;6224:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;6224:7:9::1;6234:34;:21;6260:7:::0;6234:25:::1;:34::i;:::-;6185:30;:84::i;:::-;6315:12;::::0;6279:64:::1;::::0;-1:-1:-1;;;;;6315:12:9::1;6330:4:::0;6336:6;6279:27:::1;:64::i;:::-;6358:25;::::0;6376:6;;-1:-1:-1;;;;;6358:25:9;::::1;::::0;::::1;::::0;;;::::1;5536:854;5455:935:::0;;;:::o;4317:104:11:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:11;-1:-1:-1;;;;;2253:21:11;;:50;;;-1:-1:-1;2278:11:11;;-1:-1:-1;;;;;2278:11:11;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:11;;;;;;;:::i;:::-;4413:1:::1;4397:8;4406:3;4397:13;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:17;-1:-1:-1;4317:104:11:o;4100:184::-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:11;-1:-1:-1;;;;;2253:21:11;;:50;;;-1:-1:-1;2278:11:11;;-1:-1:-1;;;;;2278:11:11;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:11;;;;;;;:::i;:::-;4198:27:::1;861:6;4198:15;:27;:::i;:::-;4182:8;4191:3;4182:13;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;;4262:8;4271:3;4262:13;;;;;;:::i;:::-;;;;;;;;;;;;;;4257:3;4240:36;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;4100:184:::0;:::o;3180:140:9:-;3276:18;;-1:-1:-1;;;;;3256:17:9;;3233:4;3256:17;;;:11;:17;;;;;;3233:4;;3298:15;;3256:38;;3276:18;3256:38;:::i;:::-;:57;;;3180:140;-1:-1:-1;;3180:140:9:o;4520:91::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4588:7:9::1;:16:::0;;-1:-1:-1;;;;;;4588:16:9::1;-1:-1:-1::0;;;;;4588:16:9;;;::::1;::::0;;;::::1;::::0;;4520:91::o;4782:342::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;4874:12:9::1;::::0;4838:73:::1;::::0;-1:-1:-1;;;;;4874:12:9::1;4889:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;4889:7:9::1;4898:12;:10;:12::i;:::-;4838:27;:73::i;:::-;4942:21;4976:14:::0;;4973:104:::1;;5006:60;5045:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;5045:7:9::1;5055:10;5006:30;:60::i;:::-;1019:7:0::0;1045:6;;5091:26:9::1;::::0;-1:-1:-1;;;;;1045:6:0;;;;5091:26:9::1;::::0;::::1;4828:296;4782:342::o:0;3651:230::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:11::1;;;;;;;:::i;:::-;3800:20:9::2;::::0;3773:59:::2;::::0;3822:9;;3800:20;3773:59:::2;::::0;;;::::2;3842:20;:32:::0;;;2164:17:11::1;2177:3:::0;2164:12:::1;:17::i;6400:978:9:-:0;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;6498:7:9::1;::::0;-1:-1:-1;;;;;6498:7:9::1;6482:117;;;::::0;-1:-1:-1;;;6482:117:9;;8340:2:13;6482:117:9::1;::::0;::::1;8322:21:13::0;8379:2;8359:18;;;8352:30;8418:34;8398:18;;;8391:62;8489:34;8469:18;;;8462:62;-1:-1:-1;;;8540:19:13;;;8533:41;8591:19;;6482:117:9::1;8138:478:13::0;6482:117:9::1;6627:12;:10;:12::i;:::-;6617:6;:22;;6609:106;;;::::0;-1:-1:-1;;;6609:106:9;;10497:2:13;6609:106:9::1;::::0;::::1;10479:21:13::0;10536:2;10516:18;;;10509:30;10575:34;10555:18;;;10548:62;10646:34;10626:18;;;10619:62;-1:-1:-1;;;10697:19:13;;;10690:38;10745:19;;6609:106:9::1;10295:475:13::0;6609:106:9::1;6743:20;;6733:6;:30;;6725:103;;;::::0;-1:-1:-1;;;6725:103:9;;7061:2:13;6725:103:9::1;::::0;::::1;7043:21:13::0;7100:2;7080:18;;;7073:30;7139:34;7119:18;;;7112:62;7210:30;7190:18;;;7183:58;7258:19;;6725:103:9::1;6859:424:13::0;6725:103:9::1;6846:14;6855:4;6846:8;:14::i;:::-;6838:86;;;::::0;-1:-1:-1;;;6838:86:9;;8823:2:13;6838:86:9::1;::::0;::::1;8805:21:13::0;8862:2;8842:18;;;8835:30;8901:34;8881:18;;;8874:62;8972:29;8952:18;;;8945:57;9019:19;;6838:86:9::1;8621:423:13::0;6838:86:9::1;-1:-1:-1::0;;;;;6934:17:9;::::1;;::::0;;;:11:::1;:17;::::0;;;;6954:15:::1;6934:35:::0;;6999:21:::1;7030:24;7047:6:::0;7030:16:::1;:24::i;:::-;7064:15;7082:36;:21;7108:9:::0;7082:25:::1;:36::i;:::-;7064:54;;7128:11;7142:26;7154:13;;7142:7;:11;;:26;;;;:::i;:::-;7128:40:::0;-1:-1:-1;7188:16:9::1;:7:::0;7128:40;7188:11:::1;:16::i;:::-;7178:26;;7214:53;7253:7;1019::0::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;7214:53:9::1;7277:45;7308:4;7314:7;7277:30;:45::i;:::-;7367:3;7358:7;7352:4;-1:-1:-1::0;;;;;7337:34:9::1;;;;;;;;;;;6472:906;;;6400:978:::0;;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;4990:2:13;1926:73:0::1;::::0;::::1;4972:21:13::0;5029:2;5009:18;;;5002:30;5068:34;5048:18;;;5041:62;-1:-1:-1;;;5119:18:13;;;5112:36;5165:19;;1926:73:0::1;4788:402:13::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;3627:124:11:-;2264:10;2253:7;1019::0;1045:6;-1:-1:-1;;;;;1045:6:0;;973:85;2253:7:11;-1:-1:-1;;;;;2253:21:11;;:50;;;-1:-1:-1;2278:11:11;;-1:-1:-1;;;;;2278:11:11;2293:10;2278:25;2253:50;2245:116;;;;-1:-1:-1;;;2245:116:11;;;;;;;:::i;:::-;3696:13:::1;:20:::0;;-1:-1:-1;;;;3696:20:11::1;-1:-1:-1::0;;;3696:20:11::1;::::0;;3731:13:::1;::::0;::::1;::::0;3696;3731::::1;3627:124::o:0;3891:326:9:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:5;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1945:243:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1945:243:11::1;::::0;::::1;::::0;-1:-1:-1;1999:13:11;-1:-1:-1;;;1999:13:11;::::1;;;1998:14;::::0;:122:::1;;;2017:8;2026:3;2017:13;;;;;;:::i;:::-;;;;;;;;;;;;;;2034:1;2017:18;;:54;;;;;2056:15;2039:8;2048:3;2039:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;2017:54;:102;;;;;2104:15;861:6;2075:8;2084:3;2075:13;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;;:::i;:::-;:44;;2017:102;1990:153;;;;-1:-1:-1::0;;;1990:153:11::1;;;;;;;:::i;:::-;4016:12:9::2;::::0;-1:-1:-1;;;;;4001:27:9;;::::2;4016:12:::0;::::2;4001:27;;3993:103;;;::::0;-1:-1:-1;;;3993:103:9;;10977:2:13;3993:103:9::2;::::0;::::2;10959:21:13::0;11016:2;10996:18;;;10989:30;11055:34;11035:18;;;11028:62;11126:33;11106:18;;;11099:61;11177:19;;3993:103:9::2;10775:427:13::0;3993:103:9::2;4138:12;::::0;4111:63:::2;::::0;-1:-1:-1;;;;;4111:63:9;;::::2;::::0;4138:12:::2;::::0;4111:63:::2;::::0;4138:12:::2;::::0;4111:63:::2;4184:12;:26:::0;;-1:-1:-1;;;;;;4184:26:9::2;-1:-1:-1::0;;;;;4184:26:9;::::2;;::::0;;2164:17:11::1;2177:3:::0;2164:12:::1;:17::i;2041:169:0:-:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;3039:96:6:-;3097:7;3123:5;3127:1;3123;:5;:::i;:::-;3116:12;3039:96;-1:-1:-1;;;3039:96:6:o;7388:543:9:-;7534:16;;;7548:1;7534:16;;;;;;;;7510:21;;7534:16;;;;;;;;-1:-1:-1;;7578:12:9;;7560:7;;;;-1:-1:-1;;;;;;7578:12:9;;7560:7;;-1:-1:-1;7578:12:9;;7560:7;;;;:::i;:::-;-1:-1:-1;;;;;7560:31:9;;;:7;;;;;;;;;:31;7611:5;;7601:7;;7611:5;;;7601:4;;7611:5;;7601:7;;;;;;:::i;:::-;-1:-1:-1;;;;;7601:15:9;;;:7;;;;;;;;;:15;7627:12;;7656:7;;7627:51;;-1:-1:-1;;;7627:51:9;;7656:7;;;7627:51;;;4039::13;4106:18;;;4099:34;;;7627:12:9;;;:20;;4012:18:13;;7627:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7714:7:9;;:210;;-1:-1:-1;;;7714:210:9;;-1:-1:-1;;;;;7714:7:9;;;;:58;;:210;;7786:11;;7714:7;;7854:4;;7880;;7899:15;;7714:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7443:488;7388:543;:::o;1026:248:12:-;1138:12;;;1098;1138;;;;;;;;;-1:-1:-1;;;;;1116:7:12;;;1131:5;;1116:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:54;;;1182:7;1161:106;;;;-1:-1:-1;;;1161:106:12;;5820:2:13;1161:106:12;;;5802:21:13;5859:2;5839:18;;;5832:30;5898:34;5878:18;;;5871:62;-1:-1:-1;;;5949:18:13;;;5942:50;6009:19;;1161:106:12;5618:416:13;1161:106:12;1087:187;1026:248;;:::o;210:384::-;382:45;;;-1:-1:-1;;;;;4057:32:13;;;382:45:12;;;4039:51:13;4106:18;;;;4099:34;;;382:45:12;;;;;;;;;;4012:18:13;;;;382:45:12;;;;;;;-1:-1:-1;;;;;382:45:12;-1:-1:-1;;;382:45:12;;;371:57;;-1:-1:-1;;;;371:10:12;;;;:57;;382:45;371:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:105;;;;459:7;:57;;;;-1:-1:-1;471:11:12;;:16;;:44;;;502:4;491:24;;;;;;;;;;;;:::i;:::-;438:149;;;;-1:-1:-1;;;438:149:12;;11409:2:13;438:149:12;;;11391:21:13;11448:2;11428:18;;;11421:30;11487:34;11467:18;;;11460:62;-1:-1:-1;;;11538:18:13;;;11531:43;11591:19;;438:149:12;11207:409:13;438:149:12;313:281;;210:384;;;:::o;3767:96:6:-;3825:7;3851:5;3855:1;3851;:5;:::i;14:247:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:277::-;333:6;386:2;374:9;365:7;361:23;357:32;354:52;;;402:1;399;392:12;354:52;434:9;428:16;487:5;480:13;473:21;466:5;463:32;453:60;;509:1;506;499:12;1088:922;1157:6;1210:2;1198:9;1189:7;1185:23;1181:32;1178:52;;;1226:1;1223;1216:12;1178:52;1266:9;1253:23;1295:18;1336:2;1328:6;1325:14;1322:34;;;1352:1;1349;1342:12;1322:34;1390:6;1379:9;1375:22;1365:32;;1435:7;1428:4;1424:2;1420:13;1416:27;1406:55;;1457:1;1454;1447:12;1406:55;1493:2;1480:16;1515:2;1511;1508:10;1505:36;;;1521:18;;:::i;:::-;1596:2;1590:9;1564:2;1650:13;;-1:-1:-1;;1646:22:13;;;1670:2;1642:31;1638:40;1626:53;;;1694:18;;;1714:22;;;1691:46;1688:72;;;1740:18;;:::i;:::-;1780:10;1776:2;1769:22;1815:2;1807:6;1800:18;1855:7;1850:2;1845;1841;1837:11;1833:20;1830:33;1827:53;;;1876:1;1873;1866:12;1827:53;1932:2;1927;1923;1919:11;1914:2;1906:6;1902:15;1889:46;1977:1;1955:15;;;1972:2;1951:24;1944:35;;;;-1:-1:-1;1959:6:13;1088:922;-1:-1:-1;;;;;1088:922:13:o;2015:180::-;2074:6;2127:2;2115:9;2106:7;2102:23;2098:32;2095:52;;;2143:1;2140;2133:12;2095:52;-1:-1:-1;2166:23:13;;2015:180;-1:-1:-1;2015:180:13:o;2200:184::-;2270:6;2323:2;2311:9;2302:7;2298:23;2294:32;2291:52;;;2339:1;2336;2329:12;2291:52;-1:-1:-1;2362:16:13;;2200:184;-1:-1:-1;2200:184:13:o;2389:315::-;2457:6;2465;2518:2;2506:9;2497:7;2493:23;2489:32;2486:52;;;2534:1;2531;2524:12;2486:52;2570:9;2557:23;2547:33;;2630:2;2619:9;2615:18;2602:32;2643:31;2668:5;2643:31;:::i;:::-;2693:5;2683:15;;;2389:315;;;;;:::o;2709:383::-;2786:6;2794;2802;2855:2;2843:9;2834:7;2830:23;2826:32;2823:52;;;2871:1;2868;2861:12;2823:52;2907:9;2894:23;2884:33;;2967:2;2956:9;2952:18;2939:32;2980:31;3005:5;2980:31;:::i;:::-;2709:383;;3030:5;;-1:-1:-1;;;3082:2:13;3067:18;;;;3054:32;;2709:383::o;3097:274::-;3226:3;3264:6;3258:13;3280:53;3326:6;3321:3;3314:4;3306:6;3302:17;3280:53;:::i;:::-;3349:16;;;;;3097:274;-1:-1:-1;;3097:274:13:o;7777:356::-;7979:2;7961:21;;;7998:18;;;7991:30;8057:34;8052:2;8037:18;;8030:62;8124:2;8109:18;;7777:356::o;9049:342::-;9251:2;9233:21;;;9290:2;9270:18;;;9263:30;-1:-1:-1;;;9324:2:13;9309:18;;9302:48;9382:2;9367:18;;9049:342::o;9396:417::-;9598:2;9580:21;;;9637:2;9617:18;;;9610:30;9676:34;9671:2;9656:18;;9649:62;-1:-1:-1;;;9742:2:13;9727:18;;9720:51;9803:3;9788:19;;9396:417::o;12225:980::-;12487:4;12535:3;12524:9;12520:19;12566:6;12555:9;12548:25;12592:2;12630:6;12625:2;12614:9;12610:18;12603:34;12673:3;12668:2;12657:9;12653:18;12646:31;12697:6;12732;12726:13;12763:6;12755;12748:22;12801:3;12790:9;12786:19;12779:26;;12840:2;12832:6;12828:15;12814:29;;12861:1;12871:195;12885:6;12882:1;12879:13;12871:195;;;12950:13;;-1:-1:-1;;;;;12946:39:13;12934:52;;13041:15;;;;13006:12;;;;12982:1;12900:9;12871:195;;;-1:-1:-1;;;;;;;13122:32:13;;;;13117:2;13102:18;;13095:60;-1:-1:-1;;;13186:3:13;13171:19;13164:35;13083:3;12225:980;-1:-1:-1;;;12225:980:13:o;13210:128::-;13250:3;13281:1;13277:6;13274:1;13271:13;13268:39;;;13287:18;;:::i;:::-;-1:-1:-1;13323:9:13;;13210:128::o;13343:217::-;13383:1;13409;13399:132;;13453:10;13448:3;13444:20;13441:1;13434:31;13488:4;13485:1;13478:15;13516:4;13513:1;13506:15;13399:132;-1:-1:-1;13545:9:13;;13343:217::o;13565:125::-;13605:4;13633:1;13630;13627:8;13624:34;;;13638:18;;:::i;:::-;-1:-1:-1;13675:9:13;;13565:125::o;13695:258::-;13767:1;13777:113;13791:6;13788:1;13785:13;13777:113;;;13867:11;;;13861:18;13848:11;;;13841:39;13813:2;13806:10;13777:113;;;13908:6;13905:1;13902:13;13899:48;;;13943:1;13934:6;13929:3;13925:16;13918:27;13899:48;;13695:258;;;:::o;13958:127::-;14019:10;14014:3;14010:20;14007:1;14000:31;14050:4;14047:1;14040:15;14074:4;14071:1;14064:15;14090:127;14151:10;14146:3;14142:20;14139:1;14132:31;14182:4;14179:1;14172:15;14206:4;14203:1;14196:15;14222:127;14283:10;14278:3;14274:20;14271:1;14264:31;14314:4;14311:1;14304:15;14338:4;14335:1;14328:15;14354:131;-1:-1:-1;;;;;14429:31:13;;14419:42;;14409:70;;14475:1;14472;14465:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1645800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_claimTimes(address)": "2568",
								"_devWallet()": "2406",
								"_maxAmountPerReceive()": "2352",
								"_oracleWallet()": "2383",
								"_rewardToken()": "2449",
								"_rewards(address)": "2615",
								"_router()": "2426",
								"_timeBetweenClaims()": "2331",
								"_weth()": "2448",
								"adjustMaxAmountPerReceive(uint256)": "infinite",
								"canClaim(address)": "4794",
								"changeFee(uint256)": "infinite",
								"changeOracleWallet(address)": "infinite",
								"emergencyWithdraw()": "infinite",
								"getBalance()": "infinite",
								"getEthBalance()": "229",
								"isLockEnabled()": "2395",
								"lockFunction(string)": "infinite",
								"maintainer()": "2376",
								"nativeSwapFee()": "2351",
								"owner()": "2443",
								"renounceOwnership()": "28182",
								"sendRewardAsEth(uint256,address)": "infinite",
								"sendRewards(uint256,address,uint256)": "infinite",
								"setMaintainer(address)": "infinite",
								"setRouter(address)": "26794",
								"setTimelockEnabled()": "29507",
								"timelock(string)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockFunction(string)": "infinite",
								"updateRewardToken(address)": "infinite"
							},
							"internal": {
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 765,
									"end": 770,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 737,
									"end": 770,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 737,
									"end": 770,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 737,
									"end": 770,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1045,
									"end": 1047,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1014,
									"end": 1047,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1014,
									"end": 1047,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1047,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1047,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1099,
									"end": 1141,
									"name": "PUSH",
									"source": 9,
									"value": "76049B7CAAB30B8BBBDCFF3A1059D9147DBF7B19"
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1141,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1175,
									"end": 1217,
									"name": "PUSH",
									"source": 9,
									"value": "C559ACC356D3037EC6DBC33A20587051188B8634"
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1217,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 1312,
									"name": "PUSH",
									"source": 9,
									"value": "84595161401484A000000"
								},
								{
									"begin": 1260,
									"end": 1312,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1260,
									"end": 1312,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1354,
									"end": 1360,
									"name": "PUSH",
									"source": 9,
									"value": "15180"
								},
								{
									"begin": 1318,
									"end": 1360,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1360,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1360,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1389,
									"end": 1431,
									"name": "PUSH",
									"source": 9,
									"value": "AF984E23EAA3E7967F3C5E007FBE397D8566D23D"
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1366,
									"end": 1431,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1483,
									"end": 1525,
									"name": "PUSH",
									"source": 9,
									"value": "BAFCDABE65A03825A131298BE7670C0AEC77B37F"
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1438,
									"end": 1526,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2409,
									"end": 2420,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2423,
									"end": 2433,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2433,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2508,
									"end": 2534,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2563,
									"end": 2576,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2563,
									"end": 2576,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2544,
									"end": 2577,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2544,
									"end": 2577,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2563,
									"end": 2576,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2544,
									"end": 2562,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2544,
									"end": 2577,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2544,
									"end": 2577,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2544,
									"end": 2577,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2466,
									"end": 2584,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4227,
									"end": 4510,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 4227,
									"end": 4510,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1208,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1367,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1407,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1478,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1495,
									"end": 1513,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1495,
									"end": 1513,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "18DA185B99D953DC9858DB1955D85B1B195D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 2188,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1999,
									"end": 2012,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1999,
									"end": 2012,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1999,
									"end": 2012,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1999,
									"end": 2012,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 1999,
									"end": 2012,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1998,
									"end": 2120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1998,
									"end": 2120,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2025,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2026,
									"end": 2029,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2030,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2035,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2035,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2035,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2071,
									"name": "TIMESTAMP",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2047,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2048,
									"end": 2051,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2052,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2039,
									"end": 2071,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 2017,
									"end": 2071,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2119,
									"name": "TIMESTAMP",
									"source": 11
								},
								{
									"begin": 861,
									"end": 867,
									"name": "PUSH",
									"source": 11,
									"value": "15180"
								},
								{
									"begin": 2075,
									"end": 2083,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2084,
									"end": 2087,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2088,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2075,
									"end": 2100,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2119,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2075,
									"end": 2119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2017,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1728,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1729,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1767,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1745,
									"end": 1763,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1745,
									"end": 1763,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1745,
									"end": 1763,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1738,
									"end": 1768,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "119D5B98DD1A5BDB881A5CC81B1BD8DAD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1784,
									"end": 1802,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1784,
									"end": 1802,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1784,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1777,
									"end": 1825,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1842,
									"end": 1860,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1842,
									"end": 1860,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1524,
									"end": 1866,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1990,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4333,
									"end": 4364,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4351,
									"end": 4363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4333,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 4333,
									"end": 4364,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 4333,
									"end": 4364,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4333,
									"end": 4364,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4459,
									"end": 4503,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4459,
									"end": 4503,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4416,
									"end": 4444,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4393,
									"end": 4406,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4459,
									"end": 4503,
									"name": "PUSH",
									"source": 9,
									"value": "3920ECD0F25E4E6CE57AAEC91E57DF499CB7E3E70D6C9604F866AE9265382CF3"
								},
								{
									"begin": 4459,
									"end": 4503,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4374,
									"end": 4390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4374,
									"end": 4390,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4459,
									"end": 4503,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2164,
									"end": 2181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 2177,
									"end": 2180,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2164,
									"end": 2176,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2164,
									"end": 2181,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 2164,
									"end": 2181,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 2164,
									"end": 2181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1255,
									"end": 1256,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4227,
									"end": 4510,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4227,
									"end": 4510,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1846,
									"end": 2035,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1846,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1208,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1365,
									"end": 1367,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1368,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1384,
									"end": 1402,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1407,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1478,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1495,
									"end": 1513,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1495,
									"end": 1513,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1163,
									"end": 1519,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 1177,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1934,
									"end": 1956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1934,
									"end": 1956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 958,
									"end": 960,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 940,
									"end": 961,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 997,
									"end": 999,
									"name": "PUSH",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 977,
									"end": 995,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 977,
									"end": 995,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 977,
									"end": 995,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1000,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "PUSH",
									"source": 13,
									"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
								},
								{
									"begin": 1016,
									"end": 1034,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1016,
									"end": 1034,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1016,
									"end": 1034,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1009,
									"end": 1071,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1080,
									"end": 1116,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1133,
									"end": 1152,
									"name": "PUSH",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1133,
									"end": 1152,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 756,
									"end": 1158,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1926,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2009,
									"end": 2028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 2019,
									"end": 2027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2009,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2009,
									"end": 2028,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2009,
									"end": 2028,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 2009,
									"end": 2028,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1846,
									"end": 2035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1846,
									"end": 2035,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4317,
									"end": 4421,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 4317,
									"end": 4421,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2264,
									"end": 2274,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2260,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1019,
									"end": 1026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1051,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 973,
									"end": 1058,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2253,
									"end": 2260,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2253,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2253,
									"end": 2274,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2274,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2303,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2253,
									"end": 2303,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2278,
									"end": 2289,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2278,
									"end": 2289,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2278,
									"end": 2289,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2293,
									"end": 2303,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 2278,
									"end": 2303,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2253,
									"end": 2303,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2253,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2073,
									"end": 2075,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2055,
									"end": 2076,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2112,
									"end": 2114,
									"name": "PUSH",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2092,
									"end": 2110,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2092,
									"end": 2110,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2110,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2115,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "PUSH",
									"source": 13,
									"value": "6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420"
								},
								{
									"begin": 2131,
									"end": 2149,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2131,
									"end": 2149,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2131,
									"end": 2149,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2124,
									"end": 2186,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2222,
									"end": 2245,
									"name": "PUSH",
									"source": 13,
									"value": "746F2063616C6C20746869732066756E6374696F6E0000000000000000000000"
								},
								{
									"begin": 2202,
									"end": 2220,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2202,
									"end": 2220,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2220,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2246,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "PUSH",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1871,
									"end": 2288,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2245,
									"end": 2361,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4413,
									"end": 4414,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4405,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4406,
									"end": 4409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4410,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4397,
									"end": 4414,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4317,
									"end": 4421,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 98,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 130,
									"end": 137,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 126,
									"end": 149,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 122,
									"end": 154,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 119,
									"end": 171,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 119,
									"end": 171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 167,
									"end": 168,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 165,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 157,
									"end": 169,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 119,
									"end": 171,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 119,
									"end": 171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 238,
									"end": 269,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 238,
									"end": 269,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 228,
									"end": 270,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 228,
									"end": 270,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 218,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 284,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 274,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 218,
									"end": 288,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 218,
									"end": 288,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 307,
									"end": 312,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 14,
									"end": 318,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 318,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 323,
									"end": 751,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 323,
									"end": 751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 454,
									"end": 457,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 498,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 486,
									"end": 499,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 517,
									"end": 518,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 527,
									"end": 656,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 527,
									"end": 656,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 541,
									"end": 547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 538,
									"end": 539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 535,
									"end": 548,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 527,
									"end": 656,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 527,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 527,
									"end": 656,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 639,
									"end": 643,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 623,
									"end": 637,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 623,
									"end": 637,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 623,
									"end": 637,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 619,
									"end": 644,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 619,
									"end": 644,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 613,
									"end": 645,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 600,
									"end": 611,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 600,
									"end": 611,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 600,
									"end": 611,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 593,
									"end": 646,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 527,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 527,
									"end": 656,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 527,
									"end": 656,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 527,
									"end": 656,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 674,
									"end": 680,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 671,
									"end": 672,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 668,
									"end": 681,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 665,
									"end": 713,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 665,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 665,
									"end": 713,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 709,
									"end": 710,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 700,
									"end": 706,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 695,
									"end": 698,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 691,
									"end": 707,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 684,
									"end": 711,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 665,
									"end": 713,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 665,
									"end": 713,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 729,
									"end": 745,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 729,
									"end": 745,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 729,
									"end": 745,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 729,
									"end": 745,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 729,
									"end": 745,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 323,
									"end": 751,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 323,
									"end": 751,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 2293,
									"end": 2518,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2293,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2336,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2364,
									"end": 2365,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2360,
									"end": 2366,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2358,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2354,
									"end": 2367,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2419,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2404,
									"end": 2407,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2400,
									"end": 2420,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2397,
									"end": 2398,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2390,
									"end": 2421,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 2441,
									"end": 2442,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2434,
									"end": 2449,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2472,
									"end": 2476,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2469,
									"end": 2470,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2462,
									"end": 2477,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2351,
									"end": 2487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2503,
									"end": 2512,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2503,
									"end": 2512,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2293,
									"end": 2518,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 2293,
									"end": 2518,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2293,
									"end": 2518,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 7933,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e5b23a1b1f79412e3d2690acbc6541392dbf67a3629fffafb2c4f556161309764736f6c63430008070033",
									".code": [
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "A221A15F"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "DE996A6E"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F4762FD6"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F4762FD6"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F7E77BC2"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F8CF31CB"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F98080C0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "DE996A6E"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "E7B6EBBA"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "EDAE876F"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "BF3506C1"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "BF3506C1"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "C07A1D4D"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "C0D78655"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "DB2E21BC"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "A221A15F"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "A347511A"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "A607494A"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "B59C6E0E"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "70ED0ADA"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "9850D32B"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "9850D32B"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "9F371995"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "9F531156"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "A1764595"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "70ED0ADA"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "7D6DFB7E"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "13EA5D29"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "13EA5D29"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "5DD53826"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "63CD79B7"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "6A1DB1BF"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "126FFB9"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "11A63E17"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "12065FE0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 483,
											"end": 7933,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12177,
											"end": 12179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3821,
											"end": 3853,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3853,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3853,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3793,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3657,
											"end": 3860,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1312,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3144,
											"end": 3165,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 956,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4309,
											"end": 4323,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4302,
											"end": 4324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4325,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4257,
											"end": 4275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 916,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4144,
											"end": 4331,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2850,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2770,
											"end": 2857,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1068,
											"end": 1141,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 737,
											"end": 770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 737,
											"end": 770,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 737,
											"end": 770,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1254,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1014,
											"end": 1047,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1526,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1008,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 776,
											"end": 818,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3057,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3022,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3015,
											"end": 3059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3015,
											"end": 3059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 3066,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36B0B4B73A30B4B732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3335,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3367,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 3306,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7492,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7472,
											"end": 7493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7502,
											"end": 7532,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 7602,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A7365744D61696E7461696E65723A204D61696E7461696E6572"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7541,
											"end": 7603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7639,
											"end": 7673,
											"name": "PUSH",
											"source": 13,
											"value": "2063616E277420657175616C2070726576696F7573206D61696E7461696E6572"
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7619,
											"end": 7637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7612,
											"end": 7674,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206F72207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7690,
											"end": 7709,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7690,
											"end": 7709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7709,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7683,
											"end": 7730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7288,
											"end": 7772,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "2F3FFAAAAD93928855C8700645D1A3643E6CCFDD500EFA9FDA048A88F557CF01"
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3610,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 3288,
											"end": 3617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3617,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4227,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18DA185B99D953DC9858DB1955D85B1B195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4333,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4333,
											"end": 4364,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4364,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4333,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4459,
											"end": 4503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4416,
											"end": 4444,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "3920ECD0F25E4E6CE57AAEC91E57DF499CB7E3E70D6C9604F866AE9265382CF3"
										},
										{
											"begin": 4459,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4503,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4617,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6368616E6765466565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "PUSH",
											"source": 9,
											"value": "CE8C8159F011D886721740F77C2D26C91B08AC01BD1D03BD132A9942661CB149"
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4737,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4747,
											"end": 4769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4769,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5562,
											"end": 5569,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5562,
											"end": 5569,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5569,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10020,
											"end": 10022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10002,
											"end": 10023,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10059,
											"end": 10061,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10062,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10098,
											"end": 10132,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172643A205468657265206973206E6F2072"
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10071,
											"end": 10133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10169,
											"end": 10203,
											"name": "PUSH",
											"source": 13,
											"value": "6F7574657220646566696E656420746F207377617020746F6B656E7320666F72"
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10142,
											"end": 10204,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40CAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10239,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10220,
											"end": 10239,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10248,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10265,
											"end": 10284,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 10265,
											"end": 10284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9818,
											"end": 10290,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5546,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5685,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5697,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6223,
											"end": 6244,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6282,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6353,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6354,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6424,
											"name": "PUSH",
											"source": 13,
											"value": "72652072657761726473207468616E20696E207265776172642073797374656D"
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6425,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6039,
											"end": 6508,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5667,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5795,
											"end": 5815,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5815,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5815,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5400,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5409,
											"end": 5439,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5509,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172643A2043616E27742073656E64206D6F"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5510,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72652072657761726473207468616E206C696D697421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5588,
											"end": 5607,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5588,
											"end": 5607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5195,
											"end": 5613,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5777,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5901,
											"end": 5905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5892,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5892,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11823,
											"end": 11825,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11805,
											"end": 11826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11862,
											"end": 11864,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11901,
											"end": 11935,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172643A2043616E277420636C61696D206D"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11874,
											"end": 11936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7265207468616E206F6E63652070657220646179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11945,
											"end": 11996,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12013,
											"end": 12032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 11621,
											"end": 12038,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5884,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 5994,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6717,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6718,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105093D0550E8E9CD95B9914995DD85C99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6773,
											"end": 6791,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6773,
											"end": 6791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6773,
											"end": 6791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6813,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6513,
											"end": 6854,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6043,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6061,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6080,
											"end": 6095,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6080,
											"end": 6095,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6080,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6095,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6123,
											"end": 6144,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6171,
											"end": 6174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6154,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6185,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6234,
											"end": 6255,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6267,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 6185,
											"end": 6269,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6185,
											"end": 6269,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6185,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6279,
											"end": 6343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6279,
											"end": 6343,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6279,
											"end": 6343,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 6279,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "PUSH",
											"source": 9,
											"value": "D9D5E983E9E8A6571FFBEAFA6A3C2FBD9F0F44E52607977B5E1E7934F7D91BFC"
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6383,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 6390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 6390,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4405,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4406,
											"end": 4409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4397,
											"end": 4414,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4317,
											"end": 4421,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4190,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4182,
											"end": 4225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4270,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4271,
											"end": 4274,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 11,
											"value": "F77F9A799FE8B0BE1463ABD7459A18FC55DFD8A6A24DDD29B54FD098088089C8"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4276,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4284,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3267,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3313,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3256,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3313,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3313,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3256,
											"end": 3313,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4874,
											"end": 4886,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4874,
											"end": 4886,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4838,
											"end": 4911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4886,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4898,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4838,
											"end": 4911,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4911,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4838,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4963,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 4990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 4990,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4973,
											"end": 5077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5006,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5006,
											"end": 5066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5006,
											"end": 5066,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5006,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "PUSH",
											"source": 9,
											"value": "5E7B34819CD91B239220BEC92FCFD3C10DA2214BA13E4E2B1F6C9CFDBD68A9A2"
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 5124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5124,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3651,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "61646A7573744D6178416D6F756E745065725265636569766500000000000000"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 3820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "D07363C93CA88CA1140B355020CB77B0320B19E19A34BB15AA4566D27C2FABBD"
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3832,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3842,
											"end": 3874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3874,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6505,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8342,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8322,
											"end": 8343,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8381,
											"name": "PUSH",
											"source": 13,
											"value": "4A"
										},
										{
											"begin": 8359,
											"end": 8377,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8359,
											"end": 8377,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8359,
											"end": 8377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8418,
											"end": 8452,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172647341734574683A2054686572652069"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8391,
											"end": 8453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8489,
											"end": 8523,
											"name": "PUSH",
											"source": 13,
											"value": "73206E6F20726F7574657220646566696E656420746F207377617020746F6B65"
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8524,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DCE640CCDEE440CAE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8540,
											"end": 8559,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8540,
											"end": 8559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8540,
											"end": 8559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8533,
											"end": 8574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8138,
											"end": 8616,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 6482,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6627,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6627,
											"end": 6639,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6627,
											"end": 6639,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6627,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6639,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6639,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10499,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10500,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10538,
											"name": "PUSH",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 10516,
											"end": 10534,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10516,
											"end": 10534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10516,
											"end": 10534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10539,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10609,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742073"
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10548,
											"end": 10610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10646,
											"end": 10680,
											"name": "PUSH",
											"source": 13,
											"value": "656E64206D6F72652072657761726473207468616E20696E2072657761726420"
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73797374656D21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10697,
											"end": 10716,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10697,
											"end": 10716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10697,
											"end": 10716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10745,
											"end": 10764,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 10745,
											"end": 10764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10295,
											"end": 10770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6609,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6763,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6743,
											"end": 6763,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6763,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6763,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7100,
											"end": 7102,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7139,
											"end": 7173,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742073"
										},
										{
											"begin": 7119,
											"end": 7137,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7119,
											"end": 7137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7119,
											"end": 7137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7240,
											"name": "PUSH",
											"source": 13,
											"value": "656E64206D6F72652072657761726473207468616E206C696D69742100000000"
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7258,
											"end": 7277,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7258,
											"end": 7277,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6859,
											"end": 7283,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6725,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6846,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6855,
											"end": 6859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6846,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6846,
											"end": 6860,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6846,
											"end": 6860,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 6846,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8823,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "PUSH",
											"source": 13,
											"value": "3B"
										},
										{
											"begin": 8842,
											"end": 8860,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8842,
											"end": 8860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8842,
											"end": 8860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8901,
											"end": 8935,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A3A73656E645265776172647341734574683A2043616E27742063"
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8881,
											"end": 8899,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8874,
											"end": 8936,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9001,
											"name": "PUSH",
											"source": 13,
											"value": "6C61696D206D6F7265207468616E206F6E636520706572206461790000000000"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8945,
											"end": 9002,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9019,
											"end": 9038,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9019,
											"end": 9038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 6838,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6945,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6954,
											"end": 6969,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6969,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7020,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7047,
											"end": 7053,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 7082,
											"end": 7103,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7082,
											"end": 7118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7082,
											"end": 7118,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 7082,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7154,
											"end": 7167,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7149,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7142,
											"end": 7153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7142,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7188,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7188,
											"end": 7195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7188,
											"end": 7204,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7188,
											"end": 7204,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 7188,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7253,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7267,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7214,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7308,
											"end": 7312,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 7277,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7370,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "PUSH",
											"source": 9,
											"value": "75B2EAC24930BF6A8227DBE172D34480E56BE5C6994435067628424190D53431"
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7371,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 6472,
											"end": 7378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6472,
											"end": 7378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6472,
											"end": 7378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 7378,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4993,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5029,
											"end": 5031,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5119,
											"end": 5137,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5119,
											"end": 5137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5148,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5184,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5165,
											"end": 5184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4788,
											"end": 5190,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2274,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2303,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 2253,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 2245,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3716,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH",
											"source": 11,
											"value": "2C08B62BFAC9A1B19BB1DEC9323F1CE01696A77948B256ABF3603D30F25A864E"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3751,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3891,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB83230BA32A932BBB0B9322A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2035,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2056,
											"end": 2071,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2052,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 2017,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 861,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 2075,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 2017,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1990,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 10979,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10959,
											"end": 10980,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11016,
											"end": 11018,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10996,
											"end": 11014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10989,
											"end": 11019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11055,
											"end": 11089,
											"name": "PUSH",
											"source": 13,
											"value": "41424F41543A757064617465526577617264546F6B656E3A20596F752063616E"
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11028,
											"end": 11090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11159,
											"name": "PUSH",
											"source": 13,
											"value": "277420757064617465207468652065786163742073616D6520746F6B656E7300"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11106,
											"end": 11124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11160,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11177,
											"end": 11196,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11177,
											"end": 11196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10775,
											"end": 11202,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 3993,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "CB89265F21B9FC8710E9D9E42BBB37AF1EB207454DECA6D5E36787BE2367C1D6"
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4174,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4196,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4210,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2177,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2164,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3128,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3135,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7388,
											"end": 7931,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7388,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7531,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7550,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7591,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7591,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7591,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7616,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7601,
											"end": 7616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7663,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7656,
											"end": 7663,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7663,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7663,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7647,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 7627,
											"end": 7647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 7627,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B6A046B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7772,
											"name": "PUSH",
											"source": 9,
											"value": "B6A046B3"
										},
										{
											"begin": 7714,
											"end": 7772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7786,
											"end": 7797,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7786,
											"end": 7797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7924,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7388,
											"end": 7931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7388,
											"end": 7931,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5820,
											"end": 5822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5802,
											"end": 5823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5898,
											"end": 5932,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665724554483A"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5933,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8115512081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 5992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6009,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6009,
											"end": 6028,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 5618,
											"end": 6034,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 1161,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1026,
											"end": 1274,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4089,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4039,
											"end": 4090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4099,
											"end": 4133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 382,
											"end": 427,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 371,
											"end": 381,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 371,
											"end": 381,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 371,
											"end": 381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 371,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 323,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 323,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 459,
											"end": 466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 459,
											"end": 516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 459,
											"end": 516,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 459,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 459,
											"end": 516,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 482,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 471,
											"end": 482,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 471,
											"end": 487,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 471,
											"end": 487,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 471,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 471,
											"end": 515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 471,
											"end": 515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 506,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 491,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 491,
											"end": 515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11409,
											"end": 11411,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 438,
											"end": 587,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11391,
											"end": 11412,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11450,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 11428,
											"end": 11446,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11428,
											"end": 11446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11428,
											"end": 11446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11451,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11487,
											"end": 11521,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E7366657248656C7065723A3A736166655472616E736665723A207472"
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11460,
											"end": 11522,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11538,
											"end": 11556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11531,
											"end": 11574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11591,
											"end": 11610,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11591,
											"end": 11610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 438,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 11207,
											"end": 11616,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 438,
											"end": 587,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 438,
											"end": 587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 313,
											"end": 594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 210,
											"end": 594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 210,
											"end": 594,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 543,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 266,
											"end": 543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 333,
											"end": 339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 383,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 372,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 361,
											"end": 384,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 357,
											"end": 389,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 354,
											"end": 406,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 354,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 354,
											"end": 406,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 402,
											"end": 403,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 392,
											"end": 404,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 354,
											"end": 406,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 354,
											"end": 406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 428,
											"end": 444,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 487,
											"end": 492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 480,
											"end": 493,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 473,
											"end": 494,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 466,
											"end": 471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 463,
											"end": 495,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 453,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 453,
											"end": 513,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 499,
											"end": 511,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 2010,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1088,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1230,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1178,
											"end": 1230,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1228,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1230,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1178,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1276,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1339,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1379,
											"end": 1388,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1375,
											"end": 1397,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1432,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1420,
											"end": 1433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1416,
											"end": 1443,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1406,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1406,
											"end": 1461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1459,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1406,
											"end": 1461,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1406,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1493,
											"end": 1495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1480,
											"end": 1496,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1518,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1505,
											"end": 1541,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1505,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 1505,
											"end": 1541,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1642,
											"end": 1673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1678,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1714,
											"end": 1736,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1714,
											"end": 1736,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1714,
											"end": 1736,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1691,
											"end": 1737,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1688,
											"end": 1760,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1688,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1688,
											"end": 1760,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1780,
											"end": 1790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1837,
											"end": 1848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1830,
											"end": 1863,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1880,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1827,
											"end": 1880,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1880,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 1827,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1925,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1919,
											"end": 1930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 1935,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1979,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1979,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1979,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 2010,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 2010,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2195,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2015,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2125,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2166,
											"end": 2189,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2166,
											"end": 2189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2015,
											"end": 2195,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2200,
											"end": 2384,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2200,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2321,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2337,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2341,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 2291,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2362,
											"end": 2378,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2200,
											"end": 2384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2384,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2493,
											"end": 2516,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2489,
											"end": 2521,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 2486,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2580,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2634,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 2643,
											"end": 2674,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2674,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 2643,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2704,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2709,
											"end": 3092,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2709,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2841,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2853,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2858,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2873,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 2917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2971,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 3092,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 3092,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 3092,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3097,
											"end": 3371,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3097,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3226,
											"end": 3229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3324,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 3280,
											"end": 3333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3333,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3280,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3365,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3097,
											"end": 3371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3371,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7777,
											"end": 8133,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 7777,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7979,
											"end": 7981,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7982,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 7982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 7982,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7991,
											"end": 8021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8091,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8052,
											"end": 8054,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8124,
											"end": 8126,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7777,
											"end": 8133,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9049,
											"end": 9391,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 9049,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9290,
											"end": 9292,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9263,
											"end": 9293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119D5B98DD1A5BDB881A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9382,
											"end": 9384,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9367,
											"end": 9385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9391,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9396,
											"end": 9813,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9396,
											"end": 9813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9600,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9580,
											"end": 9601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9637,
											"end": 9639,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9676,
											"end": 9710,
											"name": "PUSH",
											"source": 13,
											"value": "6F70657261746F723A2063616C6C6572206973206E6F7420616C6C6F77656420"
										},
										{
											"begin": 9671,
											"end": 9673,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9656,
											"end": 9674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9649,
											"end": 9711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A379031B0B636103A3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9742,
											"end": 9744,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9788,
											"end": 9807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9788,
											"end": 9807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9813,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12225,
											"end": 13205,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 12225,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12487,
											"end": 12491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12535,
											"end": 12538,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12524,
											"end": 12533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12520,
											"end": 12539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12566,
											"end": 12572,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12592,
											"end": 12594,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12676,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12668,
											"end": 12670,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12653,
											"end": 12671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12677,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12697,
											"end": 12703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12739,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12763,
											"end": 12769,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12755,
											"end": 12761,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12770,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12801,
											"end": 12804,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 12790,
											"end": 12799,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12786,
											"end": 12805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12779,
											"end": 12805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12779,
											"end": 12805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12840,
											"end": 12842,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12832,
											"end": 12838,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12828,
											"end": 12843,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12814,
											"end": 12843,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12814,
											"end": 12843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12885,
											"end": 12891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12882,
											"end": 12883,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12879,
											"end": 12892,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12950,
											"end": 12963,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12950,
											"end": 12963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12946,
											"end": 12985,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12934,
											"end": 12986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12934,
											"end": 12986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13056,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12982,
											"end": 12983,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12900,
											"end": 12909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 12871,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13122,
											"end": 13154,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13154,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13154,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13154,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13119,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13102,
											"end": 13120,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13102,
											"end": 13120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13095,
											"end": 13155,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13186,
											"end": 13189,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13171,
											"end": 13190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13083,
											"end": 13086,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 13205,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12225,
											"end": 13205,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13210,
											"end": 13338,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 13210,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13250,
											"end": 13253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13281,
											"end": 13282,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13274,
											"end": 13275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13271,
											"end": 13284,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13268,
											"end": 13307,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13268,
											"end": 13307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13268,
											"end": 13307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13323,
											"end": 13332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13323,
											"end": 13332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13210,
											"end": 13338,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13343,
											"end": 13560,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 13343,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13383,
											"end": 13384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13409,
											"end": 13410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 13399,
											"end": 13531,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13453,
											"end": 13463,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 13448,
											"end": 13451,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13444,
											"end": 13464,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13441,
											"end": 13442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13434,
											"end": 13465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13488,
											"end": 13492,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 13485,
											"end": 13486,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13478,
											"end": 13493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13520,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13513,
											"end": 13514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13521,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13531,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 13399,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13545,
											"end": 13554,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13343,
											"end": 13560,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13565,
											"end": 13690,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 13565,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13630,
											"end": 13631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13627,
											"end": 13635,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13658,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 13624,
											"end": 13658,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13638,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 13638,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 13638,
											"end": 13656,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13638,
											"end": 13656,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 13638,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13565,
											"end": 13690,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 13797,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13788,
											"end": 13789,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13798,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13867,
											"end": 13878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13867,
											"end": 13878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13867,
											"end": 13878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13861,
											"end": 13879,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13859,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13859,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13880,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13813,
											"end": 13815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13806,
											"end": 13816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 13777,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13908,
											"end": 13914,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13902,
											"end": 13915,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13943,
											"end": 13944,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13934,
											"end": 13940,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13932,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13925,
											"end": 13941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 13945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13899,
											"end": 13947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13953,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13958,
											"end": 14085,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 13958,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14019,
											"end": 14029,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 14014,
											"end": 14017,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14010,
											"end": 14030,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14031,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14050,
											"end": 14054,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 14047,
											"end": 14048,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14040,
											"end": 14055,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14064,
											"end": 14079,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14217,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 14090,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14151,
											"end": 14161,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 14146,
											"end": 14149,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14142,
											"end": 14162,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14139,
											"end": 14140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 14163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 14179,
											"end": 14180,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14172,
											"end": 14187,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14210,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14222,
											"end": 14349,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 14222,
											"end": 14349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14283,
											"end": 14293,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 14278,
											"end": 14281,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14274,
											"end": 14294,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14271,
											"end": 14272,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14264,
											"end": 14295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14314,
											"end": 14318,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 14311,
											"end": 14312,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14304,
											"end": 14319,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14338,
											"end": 14342,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14335,
											"end": 14336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14328,
											"end": 14343,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14354,
											"end": 14485,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 14354,
											"end": 14485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14429,
											"end": 14460,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14461,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 14409,
											"end": 14479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14472,
											"end": 14473,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14465,
											"end": 14477,
											"name": "REVERT",
											"source": 13
										}
									]
								},
								"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572"
							}
						},
						"methodIdentifiers": {
							"_claimTimes(address)": "f7e77bc2",
							"_devWallet()": "11a63e17",
							"_maxAmountPerReceive()": "5dd53826",
							"_oracleWallet()": "a221a15f",
							"_rewardToken()": "b59c6e0e",
							"_rewards(address)": "7d6dfb7e",
							"_router()": "edae876f",
							"_timeBetweenClaims()": "0126ffb9",
							"_weth()": "a1764595",
							"adjustMaxAmountPerReceive(uint256)": "de996a6e",
							"canClaim(address)": "bf3506c1",
							"changeFee(uint256)": "6a1db1bf",
							"changeOracleWallet(address)": "63cd79b7",
							"emergencyWithdraw()": "db2e21bc",
							"getBalance()": "12065fe0",
							"getEthBalance()": "70ed0ada",
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"nativeSwapFee()": "c07a1d4d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sendRewardAsEth(uint256,address)": "e7b6ebba",
							"sendRewards(uint256,address,uint256)": "9f371995",
							"setMaintainer(address)": "13ea5d29",
							"setRouter(address)": "c0d78655",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a",
							"updateRewardToken(address)": "f8cf31cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ChangedFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChangedMaxAmountPerReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ChangedOracleWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"ChangedRewardToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"EnabledRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SentRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"SentRewardsETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_claimTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxAmountPerReceive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_oracleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_rewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_router\",\"outputs\":[{\"internalType\":\"contract IKaiDexRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_timeBetweenClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"adjustMaxAmountPerReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleWallet\",\"type\":\"address\"}],\"name\":\"changeOracleWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"sendRewardAsEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"sendRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IKaiDexRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chains/kardiachain/RewardSystem.sol\":\"RewardSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/chains/kardiachain/RewardSystem.sol\":{\"keccak256\":\"0x3af8c91f4e93f5d864c2265ec9451b2594c30aa1b13b4e254031cc2fedda3d70\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://027381e0581cf9e64584a2a56d11e9d4652c334c3f5b26945d470a5f43409461\",\"dweb:/ipfs/QmWazYP2LPoevmTcWN2n6vSdA95c5czEQPDy5qdzTQacQz\"]},\"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol\":{\"keccak256\":\"0x22acbbb6b12c97ceaf8efab745a1f5a631ac89783aef2f69f3d60e68120fefbb\",\"urls\":[\"bzz-raw://37cbbdb5fab89a4a602c7f8f9ce0e690e5c1c3537752afd15fc4c3604dbf60f4\",\"dweb:/ipfs/QmTscxXqay7m7LvStJsrrSg5Y8f7og3Uo351AqWcfeBA84\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2782,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2786,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2791,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1801,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_rewards",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1805,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_claimTimes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1808,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "nativeSwapFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1811,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_oracleWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1814,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_devWallet",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1817,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_rewardToken",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)727"
							},
							{
								"astId": 1820,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_maxAmountPerReceive",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1823,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_timeBetweenClaims",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1826,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_weth",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1832,
								"contract": "contracts/chains/kardiachain/RewardSystem.sol:RewardSystem",
								"label": "_router",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IKaiDexRouter)2767"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)727": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IKaiDexRouter)2767": {
								"encoding": "inplace",
								"label": "contract IKaiDexRouter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol": {
				"IKaiDexRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAIMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityKAI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAI",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAIMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityKAI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAI",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAIMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityKAISupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountKAI",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAIMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityKAIWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAI",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountKAIMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityKAIWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountKAI",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactKAIForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactKAIForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForKAI",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForKAISupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapKAIForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactKAI",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityKAI(address,uint256,uint256,uint256,address,uint256)": "d06ebe7d",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityKAI(address,uint256,uint256,uint256,address,uint256)": "56732d73",
							"removeLiquidityKAISupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "23da1b27",
							"removeLiquidityKAIWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "0c7e815a",
							"removeLiquidityKAIWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "629f4306",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapExactKAIForTokens(uint256,address[],address,uint256)": "b62761fa",
							"swapExactKAIForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "04d464b1",
							"swapExactTokensForKAI(uint256,uint256,address[],address,uint256)": "6937ffb6",
							"swapExactTokensForKAISupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "b6a046b3",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapKAIForExactTokens(uint256,address[],address,uint256)": "9df02c72",
							"swapTokensForExactKAI(uint256,uint256,address[],address,uint256)": "56b2cc2f",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAIMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityKAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAIMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityKAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAI\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAIMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityKAISupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKAI\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAIMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityKAIWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAI\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountKAIMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityKAIWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKAI\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactKAIForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactKAIForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForKAI\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForKAISupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapKAIForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactKAI\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol\":\"IKaiDexRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol\":{\"keccak256\":\"0x22acbbb6b12c97ceaf8efab745a1f5a631ac89783aef2f69f3d60e68120fefbb\",\"urls\":[\"bzz-raw://37cbbdb5fab89a4a602c7f8f9ce0e690e5c1c3537752afd15fc4c3604dbf60f4\",\"dweb:/ipfs/QmTscxXqay7m7LvStJsrrSg5Y8f7og3Uo351AqWcfeBA84\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TimeLock.sol": {
				"TimeLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaintainer(address)": "13ea5d29",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TimeLock.sol\":\"TimeLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2782,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2786,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 2791,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;181:1095:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP EXTCODECOPY 0xED 0xCE SWAP14 GASPRICE SWAP2 0xC2 0x28 DELEGATECALL 0xB5 0xB8 MSIZE EQ 0xC3 CODESIZE 0xF8 TIMESTAMP 0xEA 0xD5 0x27 AND 0xC6 BALANCE 0xEB SWAP2 CALLER 0xB6 NOT CALLER 0xC3 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220563cedce9d3a91c228f4b5b85914c338f842ead52716c631eb9133b61933c38f64736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1070,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1069
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 650,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 728,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 753,
							"src": "81:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 650,
							"sourceUnit": 1070,
							"src": "123:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 110,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1069,
										"src": "1339:7:1"
									},
									"id": 111,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:1"
								},
								{
									"baseName": {
										"id": 112,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1348:6:1"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:1"
								},
								{
									"baseName": {
										"id": 114,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 752,
										"src": "1356:14:1"
									},
									"id": 115,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 109,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 649,
							"linearizedBaseContracts": [
								649,
								752,
								727,
								1069
							],
							"name": "ERC20",
							"nameLocation": "1330:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1413:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1377:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 117,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1485:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1429:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 124,
										"keyType": {
											"id": 120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 123,
											"keyType": {
												"id": 121,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1467:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1519:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1503:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1553:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1538:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 128,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1579:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 649,
									"src": "1564:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 130,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1564:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1593:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 649,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										739
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2143:29:1",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "2160:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "2153:12:1"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2110:8:1"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2128:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2128:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:15:1"
									},
									"scope": 649,
									"src": "2074:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2356:31:1",
										"statements": [
											{
												"expression": {
													"id": 165,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "2373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 164,
												"id": 166,
												"nodeType": "Return",
												"src": "2366:14:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2178:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2294:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2323:8:1"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:2:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2341:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2341:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:15:1"
									},
									"scope": 649,
									"src": "2285:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "3076:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "3086:9:1"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2393:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3020:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "3069:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 172,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3069:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:7:1"
									},
									"scope": 649,
									"src": "3011:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3232:36:1",
										"statements": [
											{
												"expression": {
													"id": 185,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "3249:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 186,
												"nodeType": "Return",
												"src": "3242:19:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "3108:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3171:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3223:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:1"
									},
									"scope": 649,
									"src": "3162:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3409:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 197,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3426:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 199,
													"indexExpression": {
														"id": 198,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 196,
												"id": 200,
												"nodeType": "Return",
												"src": "3419:25:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3274:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3335:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:1"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3353:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3345:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "3400:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:9:1"
									},
									"scope": 649,
									"src": "3326:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3746:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3766:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3780:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3791:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "3756:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3756:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 212,
												"id": 221,
												"nodeType": "Return",
												"src": "3808:11:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3457:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3663:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:1"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3680:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3672:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3699:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3691:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:35:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3740:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:1"
									},
									"scope": 649,
									"src": "3654:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3982:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 234,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3999:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4011:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3999:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 238,
													"indexExpression": {
														"id": 237,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4018:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3999:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "3992:34:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3832:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3893:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3955:8:1"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3911:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3903:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3918:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:32:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3973:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:9:1"
									},
									"scope": 649,
									"src": "3884:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "4260:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "4279:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4279:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4293:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4302:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "4270:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4270:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 251,
												"id": 260,
												"nodeType": "Return",
												"src": "4319:11:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4039:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4180:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:1"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4196:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4188:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:33:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "4254:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:6:1"
									},
									"scope": 649,
									"src": "4171:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										708
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "4946:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4966:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4974:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "4985:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "4956:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "4956:36:1"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5011:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5003:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 289,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 283,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "5030:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 285,
														"indexExpression": {
															"id": 284,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "5042:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5030:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 288,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 286,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "5050:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5050:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5030:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "5081:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "5101:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5081:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "5073:79:1"
											},
											{
												"id": 306,
												"nodeType": "UncheckedBlock",
												"src": "5162:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 298,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "5195:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 299,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "5203:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5203:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 301,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "5217:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 302,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "5236:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5217:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 297,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5186:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5186:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 305,
														"nodeType": "ExpressionStatement",
														"src": "5186:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5271:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 308,
												"nodeType": "Return",
												"src": "5264:11:1"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "4343:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4813:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4922:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4843:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4835:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4867:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4859:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4894:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4886:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:81:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4940:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:6:1"
									},
									"scope": 649,
									"src": "4804:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "5771:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 321,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5790:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 324,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "5813:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 327,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 325,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "5825:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5825:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5813:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 329,
																"indexExpression": {
																	"id": 328,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "5839:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5813:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 330,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "5850:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5813:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 320,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "5781:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5781:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "5781:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5878:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 319,
												"id": 335,
												"nodeType": "Return",
												"src": "5871:11:1"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5288:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5686:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5712:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5704:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5729:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5721:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:37:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "5765:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:6:1"
									},
									"scope": 649,
									"src": "5677:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "6475:306:1",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6493:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "6485:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 347,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6485:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 349,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "6512:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 350,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "6524:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6512:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "6538:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6485:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6564:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "6584:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6564:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6601:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "6556:85:1"
											},
											{
												"id": 372,
												"nodeType": "UncheckedBlock",
												"src": "6651:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 364,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "6684:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 366,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "6698:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 367,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "6707:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 368,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "6726:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6707:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 363,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6675:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 371,
														"nodeType": "ExpressionStatement",
														"src": "6675:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 346,
												"id": 374,
												"nodeType": "Return",
												"src": "6763:11:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "5895:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6385:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6411:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6403:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6428:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6420:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:42:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "6469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:6:1"
									},
									"scope": 649,
									"src": "6376:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7372:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7390:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 388,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7390:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7470:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 398,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7470:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7462:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7565:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7573:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7584:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7544:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7610:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "7602:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"baseExpression": {
														"id": 414,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "7626:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 416,
													"indexExpression": {
														"id": 415,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "7636:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7626:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "7661:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 420,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "7678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7661:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7686:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "7653:74:1"
											},
											{
												"id": 433,
												"nodeType": "UncheckedBlock",
												"src": "7737:77:1",
												"statements": [
													{
														"expression": {
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 425,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "7761:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 427,
																"indexExpression": {
																	"id": 426,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7771:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7761:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 428,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7781:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 429,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "7797:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7761:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 432,
														"nodeType": "ExpressionStatement",
														"src": "7761:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 434,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "7823:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 436,
														"indexExpression": {
															"id": 435,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7833:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7823:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "7847:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "7823:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 441,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7878:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7886:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7897:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7869:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "EmitStatement",
												"src": "7864:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7935:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7943:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "7915:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7915:46:1"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "6787:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7264:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7291:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7283:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7315:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7307:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7342:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7334:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:81:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:1"
									},
									"scope": 649,
									"src": "7255:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "8309:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 462,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8327:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8346:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8338:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8338:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8327:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8319:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "8319:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8424:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8416:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8416:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8416:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8437:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "8395:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8395:49:1"
											},
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "8455:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 481,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8471:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "8455:22:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "8487:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8497:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8487:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8487:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8487:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8547:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8539:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8539:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8560:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "8530:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "8525:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8606:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8598:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8598:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8598:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8610:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8619:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "8578:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "8578:48:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "7974:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8253:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8284:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "8276:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:33:1"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8309:0:1"
									},
									"scope": 649,
									"src": "8244:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "9018:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9036:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9055:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9047:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9047:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9047:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9036:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9059:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "9028:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9127:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9144:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9148:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "9106:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "9106:49:1"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9174:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "9166:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9166:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"baseExpression": {
														"id": 538,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 540,
													"indexExpression": {
														"id": 539,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9201:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9191:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "9227:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 544,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "9245:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9227:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9219:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9219:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9219:71:1"
											},
											{
												"id": 557,
												"nodeType": "UncheckedBlock",
												"src": "9300:79:1",
												"statements": [
													{
														"expression": {
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 549,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "9324:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 551,
																"indexExpression": {
																	"id": 550,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9334:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9324:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 552,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "9345:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 553,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9362:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9345:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9324:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"nodeType": "ExpressionStatement",
														"src": "9324:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "9388:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 559,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "9404:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9388:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9388:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9435:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9426:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "9421:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9494:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9511:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9503:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9503:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9503:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9515:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "9474:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9474:48:1"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "8639:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8962:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8976:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8968:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8993:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "8985:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8967:33:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:1"
									},
									"scope": 649,
									"src": "8953:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "10065:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10083:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10092:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 593,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10092:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10092:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "10075:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "10161:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10180:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10172:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10172:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10172:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10161:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10184:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "10153:68:1"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 611,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "10232:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 614,
															"indexExpression": {
																"id": 612,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10244:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10232:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 615,
														"indexExpression": {
															"id": 613,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10251:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10232:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 616,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "10262:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "10232:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 620,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10292:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "10308:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10283:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10283:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "EmitStatement",
												"src": "10278:37:1"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "9535:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "9979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10010:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10002:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10035:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "10027:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10027:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:78:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:1"
									},
									"scope": 649,
									"src": "9952:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "11025:2:1",
										"statements": []
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "10328:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10915:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10953:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10945:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10975:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10967:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10995:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "10987:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:72:1"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11025:0:1"
									},
									"scope": 649,
									"src": "10906:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "11733:2:1",
										"statements": []
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "11033:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11624:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11683:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11675:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11703:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "11695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:72:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:1"
									},
									"scope": 649,
									"src": "11615:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 650,
							"src": "1321:10416:1",
							"usedErrors": []
						}
					],
					"src": "33:11705:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 727,
							"linearizedBaseContracts": [
								727
							],
							"name": "IERC20",
							"nameLocation": "139:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 727,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 727,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 727,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 727,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 727,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2149:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2173:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2200:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2239:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:2"
									},
									"scope": 727,
									"src": "2118:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 717,
									"name": "Transfer",
									"nameLocation": "2420:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2429:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2451:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:2"
									},
									"src": "2414:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 726,
									"name": "Approval",
									"nameLocation": "2651:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2660:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2683:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:2"
									},
									"src": "2645:78:2"
								}
							],
							"scope": 728,
							"src": "129:2596:2",
							"usedErrors": []
						}
					],
					"src": "33:2693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						]
					},
					"id": 753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 753,
							"sourceUnit": 728,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "228:6:3"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 752,
							"linearizedBaseContracts": [
								752,
								727
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "339:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:3"
									},
									"scope": 752,
									"src": "300:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "462:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:3"
									},
									"scope": 752,
									"src": "421:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "596:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 748,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:3"
									},
									"scope": 752,
									"src": "553:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 753,
							"src": "200:405:3",
							"usedErrors": []
						}
					],
					"src": "33:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 755,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1048,
							"linearizedBaseContracts": [
								1048
							],
							"name": "Address",
							"nameLocation": "134:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "784:311:4",
										"statements": [
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:4",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:4",
														"valueSize": 1
													}
												],
												"id": 766,
												"nodeType": "InlineAssembly",
												"src": "1003:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "1080:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 770,
												"nodeType": "Return",
												"src": "1073:15:4"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 1048,
									"src": "718:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2083:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 783,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 781,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2126:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:4"
											},
											{
												"assignments": [
													792,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "2178:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 799,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 793,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2196:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 795,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2218:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2247:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:4"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2031:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2058:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:4"
									},
									"scope": 1048,
									"src": "2012:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "3155:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3185:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 816,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															823,
															843
														],
														"referencedDeclaration": 843,
														"src": "3172:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 815,
												"id": 821,
												"nodeType": "Return",
												"src": "3165:67:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3088:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3104:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "3141:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:4"
									},
									"scope": 1048,
									"src": "3066:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "3608:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3647:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "3655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 839,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3664:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 835,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "3625:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 834,
												"id": 841,
												"nodeType": "Return",
												"src": "3618:59:4"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3492:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3516:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3543:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "3594:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:4"
									},
									"scope": 1048,
									"src": "3461:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "4189:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "4228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4236:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4242:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 855,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															913
														],
														"referencedDeclaration": 913,
														"src": "4206:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 861,
												"nodeType": "Return",
												"src": "4199:94:4"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4086:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4110:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "4175:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:4"
									},
									"scope": 1048,
									"src": "4046:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "4727:321:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 880,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1048",
																				"typeString": "library Address"
																			}
																		],
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 878,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 883,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4770:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "4847:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 889,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4836:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:4"
											},
											{
												"assignments": [
													896,
													898
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4900:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 895,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "4914:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 897,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4967:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 899,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "4941:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 901,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4960:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "5007:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 908,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "5016:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 909,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5028:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 906,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4989:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 911,
												"nodeType": "Return",
												"src": "4982:59:4"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4588:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4612:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4639:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4662:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:4"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4713:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:4"
									},
									"scope": 1048,
									"src": "4548:500:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "5325:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "5361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5369:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 923,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															965
														],
														"referencedDeclaration": 965,
														"src": "5342:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 922,
												"id": 928,
												"nodeType": "Return",
												"src": "5335:80:4"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5253:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5269:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:4"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5311:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:4"
									},
									"scope": 1048,
									"src": "5225:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "5764:229:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 944,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "5793:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 943,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "5782:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:4"
											},
											{
												"assignments": [
													950,
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5853:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 949,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "5867:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "5912:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 953,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5952:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 960,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "5961:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 961,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5973:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 958,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "5934:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 941,
												"id": 963,
												"nodeType": "Return",
												"src": "5927:59:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5643:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5667:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5694:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "5750:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:4"
									},
									"scope": 1048,
									"src": "5606:387:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "6269:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "6307:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "6315:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 975,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															982,
															1017
														],
														"referencedDeclaration": 1017,
														"src": "6286:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 974,
												"id": 980,
												"nodeType": "Return",
												"src": "6279:84:4"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6202:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6218:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:4"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "6255:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:4"
									},
									"scope": 1048,
									"src": "6172:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "6711:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 996,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "6740:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 995,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "6729:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:4"
											},
											{
												"assignments": [
													1002,
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6802:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "6816:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1003,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "6863:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1005,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6843:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1011,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "6903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1012,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6912:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1013,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6924:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1010,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "6885:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 993,
												"id": 1015,
												"nodeType": "Return",
												"src": "6878:59:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6595:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6646:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "6697:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:4"
									},
									"scope": 1048,
									"src": "6556:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "7110:532:4",
										"statements": [
											{
												"condition": {
													"id": 1028,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "7124:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "7181:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1032,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "7265:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1042,
																"nodeType": "Block",
																"src": "7573:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "7598:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1038,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1041,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:4"
																	}
																]
															},
															"id": 1043,
															"nodeType": "IfStatement",
															"src": "7261:365:4",
															"trueBody": {
																"id": 1037,
																"nodeType": "Block",
																"src": "7288:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1021,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1036,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "7120:516:4",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "7133:42:4",
													"statements": [
														{
															"expression": {
																"id": 1029,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "7154:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1030,
															"nodeType": "Return",
															"src": "7147:17:4"
														}
													]
												}
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "6986:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7008:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7041:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7096:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:4"
									},
									"scope": 1048,
									"src": "6950:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1049,
							"src": "126:7518:4",
							"usedErrors": []
						}
					],
					"src": "33:7612:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1069
						]
					},
					"id": 1070,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1069,
							"linearizedBaseContracts": [
								1069
							],
							"name": "Context",
							"nameLocation": "572:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "648:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1055,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1057,
												"nodeType": "Return",
												"src": "658:17:5"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"scope": 1069,
									"src": "586:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "755:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1064,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1066,
												"nodeType": "Return",
												"src": "765:15:5"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:5"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "739:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:5"
									},
									"scope": 1069,
									"src": "688:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1070,
							"src": "554:235:5",
							"usedErrors": []
						}
					],
					"src": "33:757:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1071,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1072,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "SafeMath",
							"nameLocation": "406:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "633:140:6",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "643:124:6",
												"statements": [
													{
														"assignments": [
															1085
														],
														"declarations": [
															{
																"constant": false,
																"id": 1085,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "667:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1084,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1089,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "702:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1091,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "706:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "698:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1083,
															"id": 1096,
															"nodeType": "Return",
															"src": "709:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1099,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "754:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1083,
														"id": 1101,
														"nodeType": "Return",
														"src": "740:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "573:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "618:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:6"
									},
									"scope": 1381,
									"src": "557:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "995:113:6",
										"statements": [
											{
												"id": 1130,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "1033:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "1037:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "1029:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1115,
															"id": 1122,
															"nodeType": "Return",
															"src": "1040:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1085:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "1089:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1115,
														"id": 1129,
														"nodeType": "Return",
														"src": "1071:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "935:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "946:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "980:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "986:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:6"
									},
									"scope": 1381,
									"src": "919:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1332:417:6",
										"statements": [
											{
												"id": 1172,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1600:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "1596:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1150,
															"nodeType": "Return",
															"src": "1608:16:6"
														}
													},
													{
														"assignments": [
															1153
														],
														"declarations": [
															{
																"constant": false,
																"id": 1153,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1172,
																"src": "1638:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1152,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1157,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "1650:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1654:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1158,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1673:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1159,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "1677:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1682:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "1669:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1143,
															"id": 1166,
															"nodeType": "Return",
															"src": "1685:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "1730:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1170,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1143,
														"id": 1171,
														"nodeType": "Return",
														"src": "1716:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1272:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1283:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1317:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1323:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:6"
									},
									"scope": 1381,
									"src": "1256:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1974:114:6",
										"statements": [
											{
												"id": 1200,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "2012:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1193,
														"nodeType": "IfStatement",
														"src": "2008:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1185,
															"id": 1192,
															"nodeType": "Return",
															"src": "2020:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1195,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "2065:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1196,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "2069:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1198,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1185,
														"id": 1199,
														"nodeType": "Return",
														"src": "2051:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1914:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1925:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1959:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1965:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:6"
									},
									"scope": 1381,
									"src": "1898:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "2323:114:6",
										"statements": [
											{
												"id": 1228,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2361:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1221,
														"nodeType": "IfStatement",
														"src": "2357:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1220,
															"nodeType": "Return",
															"src": "2369:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1223,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "2414:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1224,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "2418:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1226,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1213,
														"id": 1227,
														"nodeType": "Return",
														"src": "2400:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2263:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2274:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:6"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2308:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2314:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:6"
									},
									"scope": 1381,
									"src": "2247:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2739:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "2756:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2760:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1243,
												"nodeType": "Return",
												"src": "2749:12:6"
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2685:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2696:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:6"
									},
									"scope": 1381,
									"src": "2672:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3106:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1256,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "3127:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1254,
												"id": 1258,
												"nodeType": "Return",
												"src": "3116:12:6"
											}
										]
									},
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3052:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:6"
									},
									"scope": 1381,
									"src": "3039:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "3449:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "3466:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "3470:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1273,
												"nodeType": "Return",
												"src": "3459:12:6"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3395:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3406:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:6"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3440:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:6"
									},
									"scope": 1381,
									"src": "3382:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3834:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3851:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3855:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "3844:12:6"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3780:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3791:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3825:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:6"
									},
									"scope": 1381,
									"src": "3767:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4383:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "4400:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4404:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1303,
												"nodeType": "Return",
												"src": "4393:12:6"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4329:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4340:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4374:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:6"
									},
									"scope": 1381,
									"src": "4316:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5001:106:6",
										"statements": [
											{
												"id": 1328,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "5043:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1319,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "5048:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1321,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "5051:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1317,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5085:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5089:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1327,
														"nodeType": "Return",
														"src": "5078:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4898:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4917:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4936:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4992:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:6"
									},
									"scope": 1381,
									"src": "4876:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "5716:105:6",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "5758:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1346,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "5765:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1342,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5803:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1341,
														"id": 1352,
														"nodeType": "Return",
														"src": "5792:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5613:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5632:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "5707:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:6"
									},
									"scope": 1381,
									"src": "5591:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "6592:105:6",
										"statements": [
											{
												"id": 1378,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1368,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "6634:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1371,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "6641:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1367,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1373,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "6675:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1375,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "6679:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1366,
														"id": 1377,
														"nodeType": "Return",
														"src": "6668:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6508:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6527:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "6583:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:6"
									},
									"scope": 1381,
									"src": "6467:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "398:6301:6",
							"usedErrors": []
						}
					],
					"src": "33:6667:6"
				},
				"id": 6
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1689
						]
					},
					"id": 1690,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1689,
							"linearizedBaseContracts": [
								1689
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:7"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "103:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:7"
									},
									"scope": 1689,
									"src": "61:51:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:7"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "156:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:7"
									},
									"scope": 1689,
									"src": "117:48:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "202:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "226:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "250:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "279:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "308:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "333:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "358:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "378:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:7"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "416:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "430:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "444:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:7"
									},
									"scope": 1689,
									"src": "171:289:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "499:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "522:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "555:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "584:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "611:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "631:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:7"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "677:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "695:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "711:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:7"
									},
									"scope": 1689,
									"src": "465:262:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "766:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "790:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "814:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "838:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "863:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "888:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "908:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:7"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "946:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "960:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:7"
									},
									"scope": 1689,
									"src": "732:242:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1039:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1063:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1092:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1119:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1139:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:7"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1177:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1195:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:7"
									},
									"scope": 1689,
									"src": "979:232:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1260:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1284:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1308:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1357:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1382:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1402:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1425:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1442:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1496,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1451:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1462:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1496:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1510:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:7"
									},
									"scope": 1689,
									"src": "1216:308:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1623:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1652:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1679:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1699:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1722:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1739:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1748:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1759:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:7"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1793:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1811:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:7"
									},
									"scope": 1689,
									"src": "1529:298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1898:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1925:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1958:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "1978:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:7"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2016:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:7"
									},
									"scope": 1689,
									"src": "1832:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2087:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2111:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2137:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1557,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1558,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2170:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2190:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2228:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1565,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1566,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:7"
									},
									"scope": 1689,
									"src": "2044:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2287:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2306:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2331:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:7"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2408:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1580,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1581,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:7"
									},
									"scope": 1689,
									"src": "2256:175:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2467:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2483:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2501:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1589,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1590,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2526:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2538:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2587:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1597,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1598,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:7"
									},
									"scope": 1689,
									"src": "2436:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2646:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2661:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2680:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1606,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1607,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2705:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2717:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:7"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "2766:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:7"
									},
									"scope": 1689,
									"src": "2615:174:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2825:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2841:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2866:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2878:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:7"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2943:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1629,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1630,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:7"
									},
									"scope": 1689,
									"src": "2794:172:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "2987:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3001:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:7"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3054:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:7"
									},
									"scope": 1689,
									"src": "2972:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3095:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:7"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "3166:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:7"
									},
									"scope": 1689,
									"src": "3073:109:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3224:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3240:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:7"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "3280:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:7"
									},
									"scope": 1689,
									"src": "3187:108:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3323:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3338:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1669,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1670,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:7"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3386:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1673,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1674,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:7"
									},
									"scope": 1689,
									"src": "3300:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3436:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3452:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3500:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1684,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1685,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:7"
									},
									"scope": 1689,
									"src": "3414:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1690,
							"src": "26:3499:7",
							"usedErrors": []
						}
					],
					"src": "0:3526:7"
				},
				"id": 7
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1689
						],
						"IUniswapV2Router02": [
							1777
						]
					},
					"id": 1778,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1691,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1778,
							"sourceUnit": 1690,
							"src": "26:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1693,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1689,
										"src": "94:18:8"
									},
									"id": 1694,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1777,
							"linearizedBaseContracts": [
								1777,
								1689
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "185:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "232:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "261:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "288:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "308:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "346:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:8"
									},
									"scope": 1777,
									"src": "119:243:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "443:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "490:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "519:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "546:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "566:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "589:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "606:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1726,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "615:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "626:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:8"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "660:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:8"
									},
									"scope": 1777,
									"src": "367:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "754:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "777:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "804:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1741,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1742,
													"nodeType": "ArrayTypeName",
													"src": "804:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "837:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "857:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:8"
									},
									"scope": 1777,
									"src": "682:204:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "960:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "987:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1753,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1754,
													"nodeType": "ArrayTypeName",
													"src": "987:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1020:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1040:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:8"
									},
									"scope": 1777,
									"src": "891:186:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1151:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1174:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1201:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1767,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1768,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1234:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1254:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:8"
									},
									"scope": 1777,
									"src": "1082:201:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1778,
							"src": "62:1223:8",
							"usedErrors": []
						}
					],
					"src": "0:1286:8"
				},
				"id": 8
			},
			"contracts/chains/kardiachain/RewardSystem.sol": {
				"ast": {
					"absolutePath": "contracts/chains/kardiachain/RewardSystem.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"IKaiDexRouter": [
							2767
						],
						"IUniswapV2Router01": [
							1689
						],
						"IUniswapV2Router02": [
							1777
						],
						"Ownable": [
							103
						],
						"RewardSystem": [
							2387
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2969
						],
						"TransferHelper": [
							3086
						]
					},
					"id": 2388,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1779,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 1049,
							"src": "61:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 104,
							"src": "113:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 728,
							"src": "166:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 1382,
							"src": "223:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 1778,
							"src": "281:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "../../libraries/TransferHelper.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 3087,
							"src": "357:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TimeLock.sol",
							"file": "../../libraries/TimeLock.sol",
							"id": 1786,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 2970,
							"src": "402:38:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol",
							"file": "./interfaces/IKaiDexRouter.sol",
							"id": 1787,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2388,
							"sourceUnit": 2768,
							"src": "441:40:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1788,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "508:7:9"
									},
									"id": 1789,
									"nodeType": "InheritanceSpecifier",
									"src": "508:7:9"
								},
								{
									"baseName": {
										"id": 1790,
										"name": "TimeLock",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2969,
										"src": "517:8:9"
									},
									"id": 1791,
									"nodeType": "InheritanceSpecifier",
									"src": "517:8:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2387,
							"linearizedBaseContracts": [
								2387,
								2969,
								103,
								1069
							],
							"name": "RewardSystem",
							"nameLocation": "492:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1794,
									"libraryName": {
										"id": 1792,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "538:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "532:26:9",
									"typeName": {
										"id": 1793,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 1797,
									"libraryName": {
										"id": 1795,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1381,
										"src": "569:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "563:27:9",
									"typeName": {
										"id": 1796,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "582:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "7d6dfb7e",
									"id": 1801,
									"mutability": "mutable",
									"name": "_rewards",
									"nameLocation": "948:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "916:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1800,
										"keyType": {
											"id": 1798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "924:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "916:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1799,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "935:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7e77bc2",
									"id": 1805,
									"mutability": "mutable",
									"name": "_claimTimes",
									"nameLocation": "997:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "962:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1804,
										"keyType": {
											"id": 1802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "970:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "962:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1803,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c07a1d4d",
									"id": 1808,
									"mutability": "mutable",
									"name": "nativeSwapFee",
									"nameLocation": "1029:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1014:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1807,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1045:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a221a15f",
									"id": 1811,
									"mutability": "mutable",
									"name": "_oracleWallet",
									"nameLocation": "1083:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1068:73:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1809,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1068:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837363034396237634161423330623862424264636646334131303539643931343764424637423139",
										"id": 1810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1099:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x76049b7cAaB30b8bBBdcfF3A1059d9147dBF7B19"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11a63e17",
									"id": 1814,
									"mutability": "mutable",
									"name": "_devWallet",
									"nameLocation": "1162:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1147:70:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1812,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1147:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863353539614363333536443330333745433664626333336132303538373035313138386238363334",
										"id": 1813,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1175:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xc559aCc356D3037EC6dbc33a20587051188b8634"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b59c6e0e",
									"id": 1817,
									"mutability": "mutable",
									"name": "_rewardToken",
									"nameLocation": "1242:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1228:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$727",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1816,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1815,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 727,
											"src": "1228:6:9"
										},
										"referencedDeclaration": 727,
										"src": "1228:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$727",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5dd53826",
									"id": 1820,
									"mutability": "mutable",
									"name": "_maxAmountPerReceive",
									"nameLocation": "1275:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1260:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1260:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030",
										"id": 1819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1298:14:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"value": "10000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0126ffb9",
									"id": 1823,
									"mutability": "mutable",
									"name": "_timeBetweenClaims",
									"nameLocation": "1333:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1318:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1318:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1354:6:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1764595",
									"id": 1826,
									"mutability": "mutable",
									"name": "_weth",
									"nameLocation": "1381:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1366:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1824,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1366:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841463938344532334541413345373936374633433545303037666265333937443835363644323364",
										"id": 1825,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1389:42:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAF984E23EAA3E7967F3C5E007fbe397D8566D23d"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edae876f",
									"id": 1832,
									"mutability": "mutable",
									"name": "_router",
									"nameLocation": "1459:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2387,
									"src": "1438:88:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
										"typeString": "contract IKaiDexRouter"
									},
									"typeName": {
										"id": 1828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1827,
											"name": "IKaiDexRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2767,
											"src": "1438:13:9"
										},
										"referencedDeclaration": 2767,
										"src": "1438:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
											"typeString": "contract IKaiDexRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307862414663646162653635413033383235613133313239386245373637306330614543373742333766",
												"id": 1830,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1483:42:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xbAFcdabe65A03825a131298bE7670c0aEC77B37f"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1829,
											"name": "IKaiDexRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2767,
											"src": "1469:13:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IKaiDexRouter_$2767_$",
												"typeString": "type(contract IKaiDexRouter)"
											}
										},
										"id": 1831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1469:57:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
											"typeString": "contract IKaiDexRouter"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1838,
									"name": "SentRewards",
									"nameLocation": "1856:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1884:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "1868:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1907:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "1891:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:47:9"
									},
									"src": "1850:65:9"
								},
								{
									"anonymous": false,
									"id": 1846,
									"name": "SentRewardsETH",
									"nameLocation": "1926:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1957:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1941:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1980:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1964:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"indexed": true,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "1988:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:69:9"
									},
									"src": "1920:90:9"
								},
								{
									"anonymous": false,
									"id": 1850,
									"name": "EnabledRewards",
									"nameLocation": "2021:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2052:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "2036:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:23:9"
									},
									"src": "2015:44:9"
								},
								{
									"anonymous": false,
									"id": 1856,
									"name": "ChangedFee",
									"nameLocation": "2070:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousFee",
												"nameLocation": "2097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "2081:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2126:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "2110:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:50:9"
									},
									"src": "2064:67:9"
								},
								{
									"anonymous": false,
									"id": 1862,
									"name": "ChangedRewardToken",
									"nameLocation": "2142:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousToken",
												"nameLocation": "2177:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2161:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "2208:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "2192:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:57:9"
									},
									"src": "2136:82:9"
								},
								{
									"anonymous": false,
									"id": 1868,
									"name": "ChangedOracleWallet",
									"nameLocation": "2229:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAddress",
												"nameLocation": "2265:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2249:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2298:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2282:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:61:9"
									},
									"src": "2223:87:9"
								},
								{
									"anonymous": false,
									"id": 1874,
									"name": "ChangedMaxAmountPerReceive",
									"nameLocation": "2321:26:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAmount",
												"nameLocation": "2364:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2348:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2396:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2380:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2380:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:56:9"
									},
									"src": "2315:89:9"
								},
								{
									"anonymous": false,
									"id": 1878,
									"name": "EmergencyWithdraw",
									"nameLocation": "2415:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2449:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "2433:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:23:9"
									},
									"src": "2409:47:9"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "2498:86:9",
										"statements": [
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1884,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "2508:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1885,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "2523:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"src": "2508:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "2508:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1889,
															"name": "_oracleWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "2563:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1888,
														"name": "changeOracleWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "2544:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2544:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "2544:33:9"
											}
										]
									},
									"id": 1893,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "2485:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "2478:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$727",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1879,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 727,
														"src": "2478:6:9"
													},
													"referencedDeclaration": 727,
													"src": "2478:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:20:9"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2498:0:9"
									},
									"scope": 2387,
									"src": "2466:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "2621:2:9",
										"statements": []
									},
									"id": 1897,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:2:9"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2621:0:9"
									},
									"scope": 2387,
									"src": "2594:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "3005:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1906,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3053:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardSystem_$2387",
																		"typeString": "contract RewardSystem"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardSystem_$2387",
																		"typeString": "contract RewardSystem"
																	}
																],
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3045:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1904,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3045:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3045:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1902,
															"name": "_rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "3022:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 666,
														"src": "3022:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1909,
												"nodeType": "Return",
												"src": "3015:44:9"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2962:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2972:2:9"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2996:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:9:9"
									},
									"scope": 2387,
									"src": "2953:113:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "3127:45:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1918,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3152:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3144:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1916,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3144:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3144:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3144:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1921,
												"nodeType": "Return",
												"src": "3137:28:9"
											}
										]
									},
									"functionSelector": "70ed0ada",
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthBalance",
									"nameLocation": "3081:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3094:2:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "3118:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3117:9:9"
									},
									"scope": 2387,
									"src": "3072:100:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "3239:81:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1930,
																"name": "_claimTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "3256:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1932,
															"indexExpression": {
																"id": 1931,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "3268:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3256:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1933,
															"name": "_timeBetweenClaims",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "3276:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3256:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1935,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3298:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3298:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3256:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1938,
												"nodeType": "Return",
												"src": "3249:64:9"
											}
										]
									},
									"functionSelector": "bf3506c1",
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaim",
									"nameLocation": "3189:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3206:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "3198:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:14:9"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "3233:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3233:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:6:9"
									},
									"scope": 2387,
									"src": "3180:140:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "3758:123:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1951,
															"name": "_maxAmountPerReceive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "3800:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1952,
															"name": "newAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "3822:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1950,
														"name": "ChangedMaxAmountPerReceive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "3773:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3773:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "EmitStatement",
												"src": "3768:64:9"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "_maxAmountPerReceive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "3842:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "3865:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3842:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "3842:32:9"
											}
										]
									},
									"functionSelector": "de996a6e",
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1945,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1944,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3712:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3712:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "61646a7573744d6178416d6f756e7450657252656365697665",
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3729:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cbcc65ad171c8d46fe010e7cf5a33e88c6ee5faecd052e87d18440041ee8dd14",
														"typeString": "literal_string \"adjustMaxAmountPerReceive\""
													},
													"value": "adjustMaxAmountPerReceive"
												}
											],
											"id": 1948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1946,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2844,
												"src": "3722:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3722:35:9"
										}
									],
									"name": "adjustMaxAmountPerReceive",
									"nameLocation": "3660:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "3694:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "3686:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3686:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:19:9"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3758:0:9"
									},
									"scope": 2387,
									"src": "3651:230:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "3983:234:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1972,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "4001:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1973,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "4016:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															},
															"src": "4001:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a757064617465526577617264546f6b656e3a20596f752063616e277420757064617465207468652065786163742073616d6520746f6b656e73",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4030:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4",
																"typeString": "literal_string \"ABOAT:updateRewardToken: You can't update the exact same tokens\""
															},
															"value": "ABOAT:updateRewardToken: You can't update the exact same tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18485cf9b22c0b279dbf6cf12d3c0901e19feb6b1e73f681a33dcd416999ed4",
																"typeString": "literal_string \"ABOAT:updateRewardToken: You can't update the exact same tokens\""
															}
														],
														"id": 1971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3993:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3993:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "3993:103:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1981,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "4138:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4130:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1979,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4130:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4130:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1985,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "4161:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4153:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1983,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4153:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4153:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1978,
														"name": "ChangedRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "4111:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "EmitStatement",
												"src": "4106:68:9"
											},
											{
												"expression": {
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1989,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "4184:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1990,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "4199:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$727",
															"typeString": "contract IERC20"
														}
													},
													"src": "4184:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "4184:26:9"
											}
										]
									},
									"functionSelector": "f8cf31cb",
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1966,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1965,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3945:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3945:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "757064617465526577617264546f6b656e",
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3962:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b233b15b7a0f628e9af8c1942e4e0f2d9d24d47bdc346a408ec09f18c3c8c5e2",
														"typeString": "literal_string \"updateRewardToken\""
													},
													"value": "updateRewardToken"
												}
											],
											"id": 1969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1967,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2844,
												"src": "3955:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3955:27:9"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "3900:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "3925:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3918:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$727",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1961,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 727,
														"src": "3918:6:9"
													},
													"referencedDeclaration": 727,
													"src": "3918:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$727",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3917:20:9"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3983:0:9"
									},
									"scope": 2387,
									"src": "3891:326:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "4323:187:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2005,
															"name": "oracleWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "4351:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2004,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "4333:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4333:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "4333:31:9"
											},
											{
												"assignments": [
													2009
												],
												"declarations": [
													{
														"constant": false,
														"id": 2009,
														"mutability": "mutable",
														"name": "previous",
														"nameLocation": "4382:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 2021,
														"src": "4374:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2008,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4374:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2011,
												"initialValue": {
													"id": 2010,
													"name": "_oracleWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1811,
													"src": "4393:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4374:32:9"
											},
											{
												"expression": {
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2012,
														"name": "_oracleWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "4416:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2013,
														"name": "oracleWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "4432:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4416:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "4416:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2017,
															"name": "previous",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "4479:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "_oracleWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "4489:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2016,
														"name": "ChangedOracleWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "4459:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4459:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "EmitStatement",
												"src": "4454:49:9"
											}
										]
									},
									"functionSelector": "63cd79b7",
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1998,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4284:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4284:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "6368616e67654f7261636c6557616c6c6574",
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4301:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f9b46895d200dc7e4eb4b04dca0fe211cb7fffbe7e3d7f1aed36d93fda073713",
														"typeString": "literal_string \"changeOracleWallet\""
													},
													"value": "changeOracleWallet"
												}
											],
											"id": 2002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2000,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2844,
												"src": "4294:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4294:28:9"
										}
									],
									"name": "changeOracleWallet",
									"nameLocation": "4236:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "oracleWallet",
												"nameLocation": "4263:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "4255:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:22:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4323:0:9"
									},
									"scope": 2387,
									"src": "4227:283:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "4578:33:9",
										"statements": [
											{
												"expression": {
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2030,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "4588:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
															"typeString": "contract IKaiDexRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2031,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "4598:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
															"typeString": "contract IKaiDexRouter"
														}
													},
													"src": "4588:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
														"typeString": "contract IKaiDexRouter"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "4588:16:9"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2028,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2027,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4568:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4568:9:9"
										}
									],
									"name": "setRouter",
									"nameLocation": "4529:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "4553:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "4539:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
													"typeString": "contract IKaiDexRouter"
												},
												"typeName": {
													"id": 2024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2023,
														"name": "IKaiDexRouter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2767,
														"src": "4539:13:9"
													},
													"referencedDeclaration": 2767,
													"src": "4539:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
														"typeString": "contract IKaiDexRouter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4538:22:9"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4578:0:9"
									},
									"scope": 2387,
									"src": "4520:91:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "4689:87:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2046,
															"name": "nativeSwapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "4715:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2047,
															"name": "newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "4730:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2045,
														"name": "ChangedFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "4704:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2049,
												"nodeType": "EmitStatement",
												"src": "4699:38:9"
											},
											{
												"expression": {
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2050,
														"name": "nativeSwapFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "4747:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2051,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "4763:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4747:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "4747:22:9"
											}
										]
									},
									"functionSelector": "6a1db1bf",
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2039,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4659:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4659:9:9"
										},
										{
											"arguments": [
												{
													"hexValue": "6368616e6765466565",
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4676:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_85fecea0123deaf1ec6b125dfb3ebb67d43ae1820f1cfddfd04748c2bb8723f2",
														"typeString": "literal_string \"changeFee\""
													},
													"value": "changeFee"
												}
											],
											"id": 2043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2041,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2844,
												"src": "4669:6:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4669:19:9"
										}
									],
									"name": "changeFee",
									"nameLocation": "4626:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "4644:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "4636:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:16:9"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4689:0:9"
									},
									"scope": 2387,
									"src": "4617:159:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "4828:296:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2065,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "4874:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4866:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4866:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4866:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2067,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "4889:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2069,
																"name": "getBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "4898:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4898:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2060,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "4838:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3014,
														"src": "4838:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4838:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "4838:73:9"
											},
											{
												"assignments": [
													2074
												],
												"declarations": [
													{
														"constant": false,
														"id": 2074,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "4929:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2102,
														"src": "4921:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4921:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2080,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2077,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4950:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4942:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2075,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4942:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4942:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "4942:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4921:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2081,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "4976:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4989:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4976:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"nodeType": "IfStatement",
												"src": "4973:104:9",
												"trueBody": {
													"id": 2095,
													"nodeType": "Block",
													"src": "4992:85:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2089,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 32,
																					"src": "5045:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5045:7:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5037:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2087,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5037:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5037:16:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2092,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "5055:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2084,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3086,
																		"src": "5006:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3085,
																	"src": "5006:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5006:60:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2094,
															"nodeType": "ExpressionStatement",
															"src": "5006:60:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2098,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "5109:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5109:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2097,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "5091:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "EmitStatement",
												"src": "5086:31:9"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2057,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4818:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4818:9:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "4791:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4808:2:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4828:0:9"
									},
									"scope": 2387,
									"src": "4782:342:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "5536:854:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2117,
																		"name": "_router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "5562:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																			"typeString": "contract IKaiDexRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																			"typeString": "contract IKaiDexRouter"
																		}
																	],
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5554:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5554:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5554:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5582:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5574:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2119,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5574:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5574:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5554:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a205468657265206973206e6f20726f7574657220646566696e656420746f207377617020746f6b656e7320666f7220657468",
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5586:70:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4",
																"typeString": "literal_string \"ABOAT::sendReward: There is no router defined to swap tokens for eth\""
															},
															"value": "ABOAT::sendReward: There is no router defined to swap tokens for eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c819d89cb63196b1aa54a4f452a423dd40d797799cc1ad7b3539b10f11894eb4",
																"typeString": "literal_string \"ABOAT::sendReward: There is no router defined to swap tokens for eth\""
															}
														],
														"id": 2114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5546:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "5546:111:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "5675:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2129,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "5685:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5685:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5675:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f72652072657761726473207468616e20696e207265776172642073797374656d21",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:67:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than in reward system!\""
															},
															"value": "ABOAT::sendReward: Can't send more rewards than in reward system!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64c36c2d6d7c369a2d5a4c92c76fa5107b199a5d671d1a19839a4db0404be134",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than in reward system!\""
															}
														],
														"id": 2127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5667:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5667:100:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "5667:100:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2136,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "5785:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2137,
																"name": "_maxAmountPerReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "5795:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5785:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e27742073656e64206d6f72652072657761726473207468616e206c696d697421",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5817:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than limit!\""
															},
															"value": "ABOAT::sendReward: Can't send more rewards than limit!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2932ec6eb0e5b606296eb52daeee6325c9590dd849921384f2cc828ed33b2a1b",
																"typeString": "literal_string \"ABOAT::sendReward: Can't send more rewards than limit!\""
															}
														],
														"id": 2135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5777:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5777:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "5777:97:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2144,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "5901:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2143,
																"name": "canClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "5892:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5892:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172643a2043616e277420636c61696d206d6f7265207468616e206f6e63652070657220646179",
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5908:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a",
																"typeString": "literal_string \"ABOAT::sendReward: Can't claim more than once per day\""
															},
															"value": "ABOAT::sendReward: Can't claim more than once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef70392df53425e08dec12ae1ea8be4e60e098deed08cc18b3434f727c6a518a",
																"typeString": "literal_string \"ABOAT::sendReward: Can't claim more than once per day\""
															}
														],
														"id": 2142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5884:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5884:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "ExpressionStatement",
												"src": "5884:80:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2150,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "5982:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2151,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "5991:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5982:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e64526577617264",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5996:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f",
																"typeString": "literal_string \"ABOAT::sendReward\""
															},
															"value": "ABOAT::sendReward"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68152e77196566c98c7fc614de8e0365abcf4904843f442a30a95fc005c8335f",
																"typeString": "literal_string \"ABOAT::sendReward\""
															}
														],
														"id": 2149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5974:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "5974:42:9"
											},
											{
												"expression": {
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2156,
															"name": "_claimTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "6026:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2158,
														"indexExpression": {
															"id": 2157,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6038:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6026:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2159,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6046:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6046:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6026:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "6026:35:9"
											},
											{
												"expression": {
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2163,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "6071:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2166,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "6091:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2164,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "6080:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1260,
															"src": "6080:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6080:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6071:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "6071:24:9"
											},
											{
												"assignments": [
													2171
												],
												"declarations": [
													{
														"constant": false,
														"id": 2171,
														"mutability": "mutable",
														"name": "userEth",
														"nameLocation": "6113:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2216,
														"src": "6105:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2177,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2174,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "6131:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6123:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2172,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6123:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6123:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6123:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6105:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2179,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "6171:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2178,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "6154:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6154:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "6154:21:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2187,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "6224:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6224:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6216:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2185,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6216:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6216:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2196,
																	"name": "userEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "6260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2192,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6242:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_RewardSystem_$2387",
																					"typeString": "contract RewardSystem"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_RewardSystem_$2387",
																					"typeString": "contract RewardSystem"
																				}
																			],
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6234:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2190,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6234:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6234:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "6234:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1260,
																"src": "6234:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6234:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2182,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "6185:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3085,
														"src": "6185:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:84:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "6185:84:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2205,
																	"name": "_rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "6315:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$727",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6307:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6307:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2207,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6330:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "6336:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2200,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "6279:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3014,
														"src": "6279:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6279:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "6279:64:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2212,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6370:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "6376:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2211,
														"name": "SentRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "6358:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2215,
												"nodeType": "EmitStatement",
												"src": "6353:30:9"
											}
										]
									},
									"functionSelector": "9f371995",
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2111,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5526:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5526:9:9"
										}
									],
									"name": "sendRewards",
									"nameLocation": "5464:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5484:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "5476:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5500:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "5492:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5514:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "5506:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5506:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5475:43:9"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5536:0:9"
									},
									"scope": 2387,
									"src": "5455:935:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "6472:906:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2229,
																		"name": "_router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "6498:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																			"typeString": "contract IKaiDexRouter"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																			"typeString": "contract IKaiDexRouter"
																		}
																	],
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6490:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2227,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6490:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6490:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6518:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6510:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2231,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6510:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6510:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6490:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a205468657265206973206e6f20726f7574657220646566696e656420746f207377617020746f6b656e7320666f7220657468",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6522:76:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\""
															},
															"value": "ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_996c83963bdffcc170bb429b33c20cd5ae713892932442470501134016df88fb",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: There is no router defined to swap tokens for eth\""
															}
														],
														"id": 2226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6482:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6482:117:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "6482:117:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "6617:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2241,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "6627:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6627:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6617:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073656e64206d6f72652072657761726473207468616e20696e207265776172642073797374656d21",
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6641:73:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8ac61d9764455f982ce7d03ba5bcda807f51030171f4b0f18486e3706bac7dc",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than in reward system!\""
															}
														],
														"id": 2239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6609:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6609:106:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "6609:106:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2248,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "6733:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2249,
																"name": "_maxAmountPerReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "6743:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6733:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e27742073656e64206d6f72652072657761726473207468616e206c696d697421",
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6765:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't send more rewards than limit!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82d20e15e0d869189730e57a90e1082a0c00561233329a4934704d4d7d382614",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't send more rewards than limit!\""
															}
														],
														"id": 2247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6725:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6725:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "6725:103:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2256,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "6855:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2255,
																"name": "canClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "6846:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6846:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73656e645265776172647341734574683a2043616e277420636c61696d206d6f7265207468616e206f6e63652070657220646179",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6862:61:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\""
															},
															"value": "ABOAT::sendRewardsAsEth: Can't claim more than once per day"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0f16053e67180e69b33bb33405f9ba94c6c1458265ed5960bf82c3582fc5845",
																"typeString": "literal_string \"ABOAT::sendRewardsAsEth: Can't claim more than once per day\""
															}
														],
														"id": 2254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6838:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6838:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "6838:86:9"
											},
											{
												"expression": {
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2261,
															"name": "_claimTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "6934:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2263,
														"indexExpression": {
															"id": 2262,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "6946:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6934:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2264,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6954:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6954:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6934:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2267,
												"nodeType": "ExpressionStatement",
												"src": "6934:35:9"
											},
											{
												"assignments": [
													2269
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "ethBefore",
														"nameLocation": "6987:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "6979:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6979:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2272,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7007:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_RewardSystem_$2387",
																	"typeString": "contract RewardSystem"
																}
															],
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6999:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6999:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6999:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6999:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6979:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2277,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "7047:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2276,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "7030:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7030:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "7030:24:9"
											},
											{
												"assignments": [
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "userEth",
														"nameLocation": "7072:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "7064:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7064:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2290,
												"initialValue": {
													"arguments": [
														{
															"id": 2288,
															"name": "ethBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "7108:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2284,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7090:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RewardSystem_$2387",
																			"typeString": "contract RewardSystem"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RewardSystem_$2387",
																			"typeString": "contract RewardSystem"
																		}
																	],
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7082:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2282,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7082:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7082:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7082:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1260,
														"src": "7082:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7082:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7064:54:9"
											},
											{
												"assignments": [
													2292
												],
												"declarations": [
													{
														"constant": false,
														"id": 2292,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "7136:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "7128:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7128:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2297,
												"initialValue": {
													"arguments": [
														{
															"id": 2295,
															"name": "nativeSwapFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "7154:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2293,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7142:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "7142:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7142:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7128:40:9"
											},
											{
												"expression": {
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2298,
														"name": "userEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "7178:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2301,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "7200:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2299,
																"name": "userEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "7188:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1260,
															"src": "7188:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7188:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7178:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2304,
												"nodeType": "ExpressionStatement",
												"src": "7178:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2310,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "7253:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7253:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7245:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2308,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7245:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7245:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2313,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "7263:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2305,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "7214:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3085,
														"src": "7214:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7214:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2315,
												"nodeType": "ExpressionStatement",
												"src": "7214:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2319,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "7308:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2320,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7314:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2316,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "7277:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3086_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3085,
														"src": "7277:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7277:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "7277:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2324,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "7352:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2325,
															"name": "userEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "7358:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2326,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "7367:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2323,
														"name": "SentRewardsETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "7337:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7337:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2328,
												"nodeType": "EmitStatement",
												"src": "7332:39:9"
											}
										]
									},
									"functionSelector": "e7b6ebba",
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2223,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6462:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6462:9:9"
										}
									],
									"name": "sendRewardAsEth",
									"nameLocation": "6409:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6433:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "6425:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6449:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "6441:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6441:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6424:30:9"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6472:0:9"
									},
									"scope": 2387,
									"src": "6400:978:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "7443:488:9",
										"statements": [
											{
												"assignments": [
													2339
												],
												"declarations": [
													{
														"constant": false,
														"id": 2339,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "7527:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "7510:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2337,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7510:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2338,
															"nodeType": "ArrayTypeName",
															"src": "7510:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7548:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7534:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2340,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7538:7:9",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2341,
															"nodeType": "ArrayTypeName",
															"src": "7538:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7534:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7510:40:9"
											},
											{
												"expression": {
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2346,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "7560:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2348,
														"indexExpression": {
															"hexValue": "30",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7565:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7560:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2351,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "7578:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$727",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7570:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2349,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7570:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7570:21:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7560:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "7560:31:9"
											},
											{
												"expression": {
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2355,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "7601:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2357,
														"indexExpression": {
															"hexValue": "31",
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7606:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7601:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2358,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "7611:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7601:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "7601:15:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2366,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "7656:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																		"typeString": "contract IKaiDexRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																		"typeString": "contract IKaiDexRouter"
																	}
																],
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7648:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2364,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7648:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7648:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2368,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "7666:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2361,
															"name": "_rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "7627:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$727",
																"typeString": "contract IERC20"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "7627:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7627:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2370,
												"nodeType": "ExpressionStatement",
												"src": "7627:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2374,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "7786:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7811:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2376,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "7854:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 2379,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7880:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RewardSystem_$2387",
																		"typeString": "contract RewardSystem"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RewardSystem_$2387",
																		"typeString": "contract RewardSystem"
																	}
																],
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7872:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7872:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7872:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2381,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7899:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7899:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2371,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "7714:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IKaiDexRouter_$2767",
																"typeString": "contract IKaiDexRouter"
															}
														},
														"id": 2373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForKAISupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2711,
														"src": "7714:58:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7714:210:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2384,
												"nodeType": "ExpressionStatement",
												"src": "7714:210:9"
											}
										]
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "7397:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7422:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "7414:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7414:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7413:21:9"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7443:0:9"
									},
									"scope": 2387,
									"src": "7388:543:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2388,
							"src": "483:7450:9",
							"usedErrors": []
						}
					],
					"src": "37:7896:9"
				},
				"id": 9
			},
			"contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol": {
				"ast": {
					"absolutePath": "contracts/chains/kardiachain/interfaces/IKaiDexRouter.sol",
					"exportedSymbols": {
						"IKaiDexRouter": [
							2767
						]
					},
					"id": 2768,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2389,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2767,
							"linearizedBaseContracts": [
								2767
							],
							"name": "IKaiDexRouter",
							"nameLocation": "34:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e8e33700",
									"id": 2414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "63:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "93:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "85:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "85:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "117:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "109:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "138:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "133:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "133:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "167:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "162:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "162:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "196:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "191:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "191:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "221:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "216:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "216:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "249:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "241:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "266:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "261:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75:205:10"
									},
									"returnParameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "304:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "299:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "299:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "318:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "313:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "313:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "332:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "327:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:44:10"
									},
									"scope": 2767,
									"src": "54:289:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ebe7d",
									"id": 2435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityKAI",
									"nameLocation": "357:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "390:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "382:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "410:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "405:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "405:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "443:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "438:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "438:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "amountKAIMin",
												"nameLocation": "472:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "467:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "494:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "519:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "514:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "514:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:161:10"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "565:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "560:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "amountKAI",
												"nameLocation": "583:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "578:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "599:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "594:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:50:10"
									},
									"scope": 2767,
									"src": "348:262:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "624:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "657:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "649:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "681:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "673:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "702:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "697:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "726:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "721:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "751:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "746:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "779:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "771:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "796:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "791:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:171:10"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "834:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "829:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "848:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "843:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "843:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:28:10"
									},
									"scope": 2767,
									"src": "615:242:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "56732d73",
									"id": 2475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityKAI",
									"nameLocation": "871:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "907:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "899:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "927:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "922:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "922:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "951:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "946:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "amountKAIMin",
												"nameLocation": "980:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "975:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "975:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1010:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "1002:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1027:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "1022:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1022:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:152:10"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1065:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "1060:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "amountKAI",
												"nameLocation": "1083:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "1078:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:34:10"
									},
									"scope": 2767,
									"src": "862:232:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1108:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1147:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1142:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1170:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1165:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1211:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1192:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2480,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1192:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2481,
													"nodeType": "ArrayTypeName",
													"src": "1192:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1233:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1225:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1250:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1245:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:132:10"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1297:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "1283:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2488,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1283:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2489,
													"nodeType": "ArrayTypeName",
													"src": "1283:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:23:10"
									},
									"scope": 2767,
									"src": "1099:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "1320:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1359:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1354:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "1383:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1378:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1378:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1423:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1404:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2497,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1404:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2498,
													"nodeType": "ArrayTypeName",
													"src": "1404:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1445:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1437:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1462:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1457:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:132:10"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1509:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "1495:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2505,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1495:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2506,
													"nodeType": "ArrayTypeName",
													"src": "1495:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:23:10"
									},
									"scope": 2767,
									"src": "1311:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b62761fa",
									"id": 2524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactKAIForTokens",
									"nameLocation": "1532:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1559:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "1554:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1554:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1592:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "1573:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1573:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2513,
													"nodeType": "ArrayTypeName",
													"src": "1573:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1606:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "1598:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1615:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "1610:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1610:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:71:10"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1689:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "1675:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2520,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1675:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2521,
													"nodeType": "ArrayTypeName",
													"src": "1675:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:23:10"
									},
									"scope": 2767,
									"src": "1523:175:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "56b2cc2f",
									"id": 2541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactKAI",
									"nameLocation": "1712:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1739:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1734:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1734:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "1755:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1750:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1750:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1787:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1768:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1768:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2530,
													"nodeType": "ArrayTypeName",
													"src": "1768:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1801:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1793:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1810:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1805:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:86:10"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1868:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1854:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2537,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1854:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2538,
													"nodeType": "ArrayTypeName",
													"src": "1854:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1853:23:10"
									},
									"scope": 2767,
									"src": "1703:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6937ffb6",
									"id": 2558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForKAI",
									"nameLocation": "1891:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1918:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1913:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1913:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1933:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1928:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1966:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1947:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2546,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1947:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2547,
													"nodeType": "ArrayTypeName",
													"src": "1947:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1980:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1972:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1989:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1984:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1984:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1912:86:10"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2047:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2554,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2033:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2555,
													"nodeType": "ArrayTypeName",
													"src": "2033:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 2767,
									"src": "1882:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9df02c72",
									"id": 2573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapKAIForExactTokens",
									"nameLocation": "2070:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2097:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2092:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2092:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2127:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2108:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2561,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2108:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2562,
													"nodeType": "ArrayTypeName",
													"src": "2108:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2141:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2133:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2150:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2145:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2145:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:68:10"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2224:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "2210:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2569,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2210:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2570,
													"nodeType": "ArrayTypeName",
													"src": "2210:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:23:10"
									},
									"scope": 2767,
									"src": "2061:172:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "2256:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2299:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2291:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2323:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2315:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2315:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2347:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2339:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "2374:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2366:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "2402:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2394:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2430:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2422:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2450:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2442:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "2473:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2468:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2468:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2499:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2590,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2493:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2518:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2510:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2592,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2537:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2529:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2594,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:263:10"
									},
									"returnParameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2571:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2563:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2588:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2580:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:34:10"
									},
									"scope": 2767,
									"src": "2247:350:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0c7e815a",
									"id": 2629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityKAIWithPermit",
									"nameLocation": "2612:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2658:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2650:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2681:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2673:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2673:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "2708:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2700:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "amountKAIMin",
												"nameLocation": "2740:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2732:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2770:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2762:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2790:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2782:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "2813:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2808:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2808:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2839:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2833:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2617,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2833:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2858:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2850:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2619,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2877:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2869:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2621,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:244:10"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "2911:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2903:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "amountKAI",
												"nameLocation": "2932:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2924:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:40:10"
									},
									"scope": 2767,
									"src": "2603:340:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23da1b27",
									"id": 2646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityKAISupportingFeeOnTransferTokens",
									"nameLocation": "2967:47:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3032:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3024:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3052:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3047:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3047:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "3076:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3071:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3071:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "amountKAIMin",
												"nameLocation": "3105:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3100:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3100:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3135:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3127:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3152:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3147:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3147:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:152:10"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "amountKAI",
												"nameLocation": "3190:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "3185:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3185:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3184:16:10"
									},
									"scope": 2767,
									"src": "2958:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "629f4306",
									"id": 2671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityKAIWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "3216:57:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3291:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3283:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3314:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3306:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "3341:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3333:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "amountKAIMin",
												"nameLocation": "3373:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3365:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3403:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3395:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3423:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3415:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3415:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "3446:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3441:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3441:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3472:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3466:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2661,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3466:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3491:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3483:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2663,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3502:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:244:10"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "amountKAI",
												"nameLocation": "3544:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3536:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:19:10"
									},
									"scope": 2767,
									"src": "3207:348:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "3572:53:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3640:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "3635:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3635:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3663:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "3658:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3704:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "3685:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2676,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3685:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2677,
													"nodeType": "ArrayTypeName",
													"src": "3685:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3726:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "3718:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3743:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "3738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3738:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:132:10"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3766:0:10"
									},
									"scope": 2767,
									"src": "3563:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04d464b1",
									"id": 2697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactKAIForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "3786:50:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3851:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "3846:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3846:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3892:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "3873:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2688,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3873:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2689,
													"nodeType": "ArrayTypeName",
													"src": "3873:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3914:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "3906:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3931:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "3926:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3926:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3836:109:10"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3962:0:10"
									},
									"scope": 2767,
									"src": "3777:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6a046b3",
									"id": 2711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForKAISupportingFeeOnTransferTokens",
									"nameLocation": "3977:50:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4042:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4037:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4037:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "4065:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4060:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4060:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4106:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4087:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2702,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4087:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2703,
													"nodeType": "ArrayTypeName",
													"src": "4087:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4128:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4120:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4145:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4140:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4140:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:132:10"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4168:0:10"
									},
									"scope": 2767,
									"src": "3968:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "4184:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "4195:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4190:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4190:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "4209:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4204:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4204:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "4224:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4219:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4219:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4189:44:10"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "4262:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "4257:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:14:10"
									},
									"scope": 2767,
									"src": "4175:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "4285:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4303:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4298:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "4318:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4313:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4313:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "4334:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4329:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:48:10"
									},
									"returnParameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4374:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4369:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2730,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4369:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4368:16:10"
									},
									"scope": 2767,
									"src": "4276:109:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "4399:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4416:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "4411:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4411:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "4432:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "4427:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4427:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "4448:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "4443:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4443:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4410:49:10"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4488:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "4483:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4483:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:15:10"
									},
									"scope": 2767,
									"src": "4390:108:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "4512:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4531:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "4526:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4526:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4560:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "4541:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2747,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4541:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2748,
													"nodeType": "ArrayTypeName",
													"src": "4541:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:40:10"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4603:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "4589:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2751,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "4589:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2752,
													"nodeType": "ArrayTypeName",
													"src": "4589:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4588:23:10"
									},
									"scope": 2767,
									"src": "4503:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "4626:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "4644:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4639:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4639:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4674:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4655:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2758,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4655:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2759,
													"nodeType": "ArrayTypeName",
													"src": "4655:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:41:10"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4717:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "4703:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2762,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "4703:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2763,
													"nodeType": "ArrayTypeName",
													"src": "4703:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4702:23:10"
									},
									"scope": 2767,
									"src": "4617:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2768,
							"src": "24:4704:10",
							"usedErrors": []
						}
					],
					"src": "0:4729:10"
				},
				"id": 10
			},
			"contracts/libraries/TimeLock.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TimeLock.sol",
					"exportedSymbols": {
						"Address": [
							1048
						],
						"Context": [
							1069
						],
						"ERC20": [
							649
						],
						"IERC20": [
							727
						],
						"IERC20Metadata": [
							752
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							1381
						],
						"TimeLock": [
							2969
						]
					},
					"id": 2970,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2769,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 650,
							"src": "61:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 728,
							"src": "117:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 1049,
							"src": "174:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 1382,
							"src": "226:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2970,
							"sourceUnit": 104,
							"src": "284:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2775,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "368:7:11"
									},
									"id": 2776,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2969,
							"linearizedBaseContracts": [
								2969,
								103,
								1069
							],
							"name": "TimeLock",
							"nameLocation": "356:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2779,
									"libraryName": {
										"id": 2777,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "388:7:11"
									},
									"nodeType": "UsingForDirective",
									"src": "382:26:11",
									"typeName": {
										"id": 2778,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a347511a",
									"id": 2782,
									"mutability": "mutable",
									"name": "isLockEnabled",
									"nameLocation": "749:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "737:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2780,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "737:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2781,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f98080c0",
									"id": 2786,
									"mutability": "mutable",
									"name": "timelock",
									"nameLocation": "810:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "776:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 2785,
										"keyType": {
											"id": 2783,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "784:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "776:26:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueType": {
											"id": 2784,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2789,
									"mutability": "constant",
									"name": "_TIMELOCK",
									"nameLocation": "849:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "824:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2787,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2788,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:6:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2791,
									"mutability": "mutable",
									"name": "_maintainer",
									"nameLocation": "889:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2969,
									"src": "873:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2790,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2797,
									"name": "MaintainerTransferred",
									"nameLocation": "1236:21:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousMaintainer",
												"nameLocation": "1274:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "1258:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMaintainer",
												"nameLocation": "1310:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "1294:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:67:11"
									},
									"src": "1230:95:11"
								},
								{
									"anonymous": false,
									"id": 2803,
									"name": "UnlockedFunction",
									"nameLocation": "1336:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"indexed": true,
												"mutability": "mutable",
												"name": "functionName",
												"nameLocation": "1368:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1353:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"indexed": true,
												"mutability": "mutable",
												"name": "unlockedAt",
												"nameLocation": "1398:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1382:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:57:11"
									},
									"src": "1330:80:11"
								},
								{
									"anonymous": false,
									"id": 2805,
									"name": "EnabledLock",
									"nameLocation": "1421:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:11"
									},
									"src": "1415:20:11"
								},
								{
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "1980:208:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1998:14:11",
																"subExpression": {
																	"id": 2810,
																	"name": "isLockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "1999:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2812,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2786,
																						"src": "2017:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2814,
																					"indexExpression": {
																						"id": 2813,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "2026:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2017:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2815,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2034:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2017:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2817,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2786,
																						"src": "2039:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2819,
																					"indexExpression": {
																						"id": 2818,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "2048:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2039:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 2820,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2056:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 2821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2056:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2039:32:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2017:54:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2824,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2786,
																						"src": "2075:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 2826,
																					"indexExpression": {
																						"id": 2825,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2807,
																						"src": "2084:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2075:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2827,
																					"name": "_TIMELOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2789,
																					"src": "2091:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2075:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 2829,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2104:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2104:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2075:44:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2017:102:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2016:104:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1998:122:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206973206c6f636b6564",
															"id": 2835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2122:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															},
															"value": "Function is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															}
														],
														"id": 2809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1990:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:153:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2837,
												"nodeType": "ExpressionStatement",
												"src": "1990:153:11"
											},
											{
												"id": 2838,
												"nodeType": "PlaceholderStatement",
												"src": "2153:1:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2840,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "2177:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2839,
														"name": "lockFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "2164:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2842,
												"nodeType": "ExpressionStatement",
												"src": "2164:17:11"
											}
										]
									},
									"id": 2844,
									"name": "locked",
									"nameLocation": "1954:6:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "1975:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1961:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:19:11"
									},
									"src": "1945:243:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "2235:144:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2847,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "2253:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2253:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2849,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2264:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2253:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2852,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2791,
																	"src": "2278:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2853,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2293:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2293:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2278:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2253:50:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:55:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															},
															"value": "operator: caller is not allowed to call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															}
														],
														"id": 2846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:116:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "2245:116:11"
											},
											{
												"id": 2860,
												"nodeType": "PlaceholderStatement",
												"src": "2371:1:11"
											}
										]
									},
									"id": 2862,
									"name": "onlyMaintainerOrOwner",
									"nameLocation": "2211:21:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:11"
									},
									"src": "2202:177:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "2399:41:11",
										"statements": [
											{
												"expression": {
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2865,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "2409:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2866,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2423:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2423:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2409:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2869,
												"nodeType": "ExpressionStatement",
												"src": "2409:24:11"
											}
										]
									},
									"id": 2871,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:2:11"
									},
									"returnParameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:0:11"
									},
									"scope": 2969,
									"src": "2385:55:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2878,
										"nodeType": "Block",
										"src": "2822:35:11",
										"statements": [
											{
												"expression": {
													"id": 2876,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2791,
													"src": "2839:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2875,
												"id": 2877,
												"nodeType": "Return",
												"src": "2832:18:11"
											}
										]
									},
									"functionSelector": "9850d32b",
									"id": 2879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maintainer",
									"nameLocation": "2779:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:2:11"
									},
									"returnParameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "2813:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:11"
									},
									"scope": 2969,
									"src": "2770:87:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "3288:329:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2890,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "3306:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2891,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2791,
																	"src": "3324:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3306:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2893,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "3339:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3365:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3357:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2894,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3357:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3357:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3339:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3306:61:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e65722063616e277420657175616c2070726576696f7573206d61696e7461696e6572206f72207a65726f2061646472657373",
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:83:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															},
															"value": "ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															}
														],
														"id": 2889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3298:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:155:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2902,
												"nodeType": "ExpressionStatement",
												"src": "3298:155:11"
											},
											{
												"assignments": [
													2904
												],
												"declarations": [
													{
														"constant": false,
														"id": 2904,
														"mutability": "mutable",
														"name": "previousMaintainer",
														"nameLocation": "3471:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2916,
														"src": "3463:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3463:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2906,
												"initialValue": {
													"id": 2905,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2791,
													"src": "3492:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:40:11"
											},
											{
												"expression": {
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2907,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "3513:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2908,
														"name": "_newMaintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "3527:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3513:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2910,
												"nodeType": "ExpressionStatement",
												"src": "3513:28:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2912,
															"name": "previousMaintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "3578:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2913,
															"name": "_maintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "3598:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2911,
														"name": "MaintainerTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2797,
														"src": "3556:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2915,
												"nodeType": "EmitStatement",
												"src": "3551:59:11"
											}
										]
									},
									"functionSelector": "13ea5d29",
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2883,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2862,
												"src": "3245:21:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3245:21:11"
										},
										{
											"arguments": [
												{
													"hexValue": "6d61696e7461696e6572",
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3274:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddb9610f823ee4fc79a9d6f81490c93108f5c8a62aad74abbdf4620bfc3e24cd",
														"typeString": "literal_string \"maintainer\""
													},
													"value": "maintainer"
												}
											],
											"id": 2887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2885,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2844,
												"src": "3267:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3267:20:11"
										}
									],
									"name": "setMaintainer",
									"nameLocation": "3200:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "_newMaintainer",
												"nameLocation": "3222:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "3214:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:24:11"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:11"
									},
									"scope": 2969,
									"src": "3191:426:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2929,
										"nodeType": "Block",
										"src": "3686:65:11",
										"statements": [
											{
												"expression": {
													"id": 2924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2922,
														"name": "isLockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "3696:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3696:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2925,
												"nodeType": "ExpressionStatement",
												"src": "3696:20:11"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2926,
														"name": "EnabledLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2805,
														"src": "3731:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2928,
												"nodeType": "EmitStatement",
												"src": "3726:18:11"
											}
										]
									},
									"functionSelector": "f4762fd6",
									"id": 2930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2920,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2919,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2862,
												"src": "3664:21:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3664:21:11"
										}
									],
									"name": "setTimelockEnabled",
									"nameLocation": "3636:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:11"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3686:0:11"
									},
									"scope": 2969,
									"src": "3627:124:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "4172:112:11",
										"statements": [
											{
												"expression": {
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2937,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "4182:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2939,
														"indexExpression": {
															"id": 2938,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "4191:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4182:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2940,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4198:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4198:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2942,
															"name": "_TIMELOCK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "4216:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4198:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4182:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2945,
												"nodeType": "ExpressionStatement",
												"src": "4182:43:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2947,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "4257:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"baseExpression": {
																"id": 2948,
																"name": "timelock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2786,
																"src": "4262:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(string memory => uint256)"
																}
															},
															"id": 2950,
															"indexExpression": {
																"id": 2949,
																"name": "_fn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2932,
																"src": "4271:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4262:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2946,
														"name": "UnlockedFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2803,
														"src": "4240:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2952,
												"nodeType": "EmitStatement",
												"src": "4235:41:11"
											}
										]
									},
									"functionSelector": "a607494a",
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2862,
												"src": "4150:21:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4150:21:11"
										}
									],
									"name": "unlockFunction",
									"nameLocation": "4109:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4138:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "4124:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4124:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:19:11"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4172:0:11"
									},
									"scope": 2969,
									"src": "4100:184:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "4387:34:11",
										"statements": [
											{
												"expression": {
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2961,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2786,
															"src": "4397:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 2963,
														"indexExpression": {
															"id": 2962,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "4406:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4413:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4397:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2966,
												"nodeType": "ExpressionStatement",
												"src": "4397:17:11"
											}
										]
									},
									"functionSelector": "9f531156",
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2958,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2862,
												"src": "4365:21:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4365:21:11"
										}
									],
									"name": "lockFunction",
									"nameLocation": "4326:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4353:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "4339:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:19:11"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:11"
									},
									"scope": 2969,
									"src": "4317:104:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2970,
							"src": "338:4085:11",
							"usedErrors": []
						}
					],
					"src": "37:4386:11"
				},
				"id": 11
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							3086
						]
					},
					"id": 3087,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2971,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3086,
							"linearizedBaseContracts": [
								3086
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3013,
										"nodeType": "Block",
										"src": "313:281:12",
										"statements": [
											{
												"assignments": [
													2981,
													2983
												],
												"declarations": [
													{
														"constant": false,
														"id": 2981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3013,
														"src": "324:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2983,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3013,
														"src": "338:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2982,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2993,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 2989,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "417:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2977,
																	"src": "421:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2986,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2984,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2973,
															"src": "371:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2995,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2981,
																"src": "459:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2996,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2983,
																					"src": "471:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3002,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2983,
																					"src": "502:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3004,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3003,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3005,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3000,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 2994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "438:149:12"
											}
										]
									},
									"id": 3014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "241:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "264:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "284:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:12"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:12"
									},
									"scope": 3086,
									"src": "210:384:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "729:291:12",
										"statements": [
											{
												"assignments": [
													3026,
													3028
												],
												"declarations": [
													{
														"constant": false,
														"id": 3026,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "740:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3025,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3028,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "754:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3027,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3039,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 3034,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3018,
																	"src": "833:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3035,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "839:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "843:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3031,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3029,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3016,
															"src": "787:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3041,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3026,
																"src": "881:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3042,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3028,
																					"src": "893:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3048,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3028,
																					"src": "924:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3049,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3051,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3046,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 3040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "860:153:12"
											}
										]
									},
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "635:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "658:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "680:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "700:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:12"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:12"
									},
									"scope": 3086,
									"src": "600:420:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "1087:187:12",
										"statements": [
											{
												"assignments": [
													3068,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 3068,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 3084,
														"src": "1098:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3067,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3078,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 3073,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3069,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3062,
																"src": "1116:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3071,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3064,
																"src": "1131:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3080,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3068,
															"src": "1182:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 3079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:12"
											}
										]
									},
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1051:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "1063:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:12"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:12"
									},
									"scope": 3086,
									"src": "1026:248:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3087,
							"src": "181:1095:12",
							"usedErrors": []
						}
					],
					"src": "46:1231:12"
				},
				"id": 12
			}
		}
	}
}