{
	"id": "f5be1931e32367c7e0f470fc5e04e145",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/libraries/Liquify.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./TransferHelper.sol\";\nimport \"./TimeLock.sol\";\n\nabstract contract Liquify is ERC20, ReentrancyGuard, Ownable, TimeLock {\n    using Address for address;\n    using SafeMath for uint256;\n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    //Transfer Tax\n    //Transfer tax rate in basis points. default 100 => 1%\n    uint16 public minimumTransferTaxRate = 500;\n    uint16 public maximumTransferTaxRate = 1000;\n    uint16 public constant MAXIMUM_TAX = 1000;\n    \n    uint16 public reDistributionRate = 40;\n    uint16 public devRate = 20;\n    uint16 public donationRate = 10;\n    \n    bool public isLiquifyActive = false;\n    \n    uint256 public _minAmountToLiquify = 100000 ether;\n    \n    address public _devWallet = 0x2EA9CA0ca8043575f2189CFF9897B575b0c7e857;          //Wallet where the dev fees will go to\n    address public _donationWallet = 0xA7C08AEdCe8caDC3bFb622bd7B651993d1cd24e4;     //Wallet where donation fees will go to\n    address public _rewardWallet = 0x2EA9CA0ca8043575f2189CFF9897B575b0c7e857;     //Wallet where rewards will be distributed\n    \n    address public _liquidityPair;\n    \n    IUniswapV2Router02 public _router;\n    \n    mapping(address => bool) public _excludedFromFeesAsSender;\n    mapping(address => bool) public _excludedFromFeesAsReceiver;\n    \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event MinimumTransferTaxRateUpdated(address indexed caller, uint256 previousRate, uint256 newRate);\n    event MaximumTransferTaxRateUpdated(address indexed caller, uint256 previousRate, uint256 newRate);\n    event UpdateTax(uint16 redistribution, uint16 dev, uint16 donation);\n    event MinAmountToLiquifyUpdated(address indexed caller, uint256 previousAmount, uint256 newAmount);\n    event RouterUpdated(address indexed caller, address indexed router, address indexed pair);\n    event ChangedLiquidityPair(address indexed caller, address indexed pair);\n    event SwapAndLiquify(uint256 tokensSwapped, uint256 ethReceived, uint256 tokensIntoLiquidity);\n    \n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    modifier taxFree {\n        uint16 _minimumTransferTaxRate = minimumTransferTaxRate;\n        uint16 _maximumTransferTaxRate = maximumTransferTaxRate;\n        minimumTransferTaxRate = 0;\n        maximumTransferTaxRate = 0;\n        _;\n        minimumTransferTaxRate = _minimumTransferTaxRate;\n        maximumTransferTaxRate = _maximumTransferTaxRate;\n    }\n    \n    constructor() {\n        excludeFromAll(_devWallet);\n        excludeFromAll(_donationWallet);\n        updateRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\n    }\n    \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setLiquidityPair(address _tokenB) public onlyMaintainerOrOwner locked(\"lp_pair\") {\n        require(_tokenB != address(0), \"Liquify::setLiquidityPair: Liquidity pair can't contain zero address\");\n        _liquidityPair = IUniswapV2Factory(_router.factory()).getPair(address(this), _tokenB);\n        if(_liquidityPair == address(0)) {\n            _liquidityPair = IUniswapV2Factory(_router.factory()).createPair(address(this), _tokenB);\n        }\n        excludeTransferFeeAsSender(address(_liquidityPair));\n        emit ChangedLiquidityPair(msg.sender, _liquidityPair);\n    }\n    \n    function setDevWallet(address wallet) public onlyMaintainerOrOwner {\n        require(wallet != address(0), \"ABOAT::setDevWallet: Address can't be zero address\");\n        _devWallet = wallet;\n        excludeFromAll(_devWallet);\n    }\n    \n    function setDonationWallet(address wallet) public onlyMaintainerOrOwner {\n        require(wallet != address(0), \"ABOAT::setDonationWallet: Address can't be zero address\");\n        _donationWallet = wallet;\n    }\n    \n    function setRewardWallet(address wallet) public onlyMaintainerOrOwner {\n        require(wallet != address(0), \"ABOAT::setRewardWallet: Address can't be zero address\");\n        _rewardWallet = wallet;\n        excludeFromAll(_rewardWallet);\n    }\n\n    function setMinAmountToLiquify(uint256 _amount) public onlyMaintainerOrOwner {\n        _minAmountToLiquify = _amount;\n    }\n    \n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    function excludeFromAll(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsSender[_excludee] = true;\n        _excludedFromFeesAsReceiver[_excludee] = true;\n    }\n    \n    function excludeTransferFeeAsSender(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsSender[_excludee] = true;\n    }\n    \n    function excludeFromFeesAsReceiver(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsReceiver[_excludee] = true;\n    }\n    \n    function includeForAll(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsSender[_excludee] = false;\n        _excludedFromFeesAsReceiver[_excludee] = false;\n    }\n    \n    function includeTransferFeeAsSender(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsSender[_excludee] = false;\n    }\n    \n    function includeForFeesAsReciever(address _excludee) public onlyMaintainerOrOwner {\n        _excludedFromFeesAsReceiver[_excludee] = false;\n    }\n    \n    function updateMinimumTransferTaxRate(uint16 _transferTaxRate) public onlyMaintainerOrOwner locked(\"min_tax\") {\n        require(_transferTaxRate <= maximumTransferTaxRate, \"ABOAT::updateMinimumTransferTaxRate: minimumTransferTaxRate must not exceed maximumTransferTaxRate.\");\n        emit MinimumTransferTaxRateUpdated(msg.sender, minimumTransferTaxRate, _transferTaxRate);\n        minimumTransferTaxRate = _transferTaxRate;\n    }\n    \n    function updateMaximumTransferTaxRate(uint16 _transferTaxRate) public onlyMaintainerOrOwner locked(\"max_tax\") {\n        require(_transferTaxRate >= minimumTransferTaxRate, \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must not be below minimumTransferTaxRate.\");\n        require(_transferTaxRate <= MAXIMUM_TAX, \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must exceed MAXIMUM_TAX.\");\n        emit MaximumTransferTaxRateUpdated(msg.sender, minimumTransferTaxRate, _transferTaxRate);\n        maximumTransferTaxRate = _transferTaxRate;\n    }\n\n    function updateTax(uint16 _redistribution, uint16 _dev, uint16 _donation) public onlyMaintainerOrOwner locked(\"updateTax\") {\n        require(_redistribution + _dev + _donation <= 100, \"ABOAT::updateTax: Tax cant exceed 100 percent!\");\n        reDistributionRate = _redistribution;\n        devRate = _dev;\n        donationRate = _donation;\n        emit UpdateTax(reDistributionRate, devRate, donationRate);\n    }\n    \n    function updateRouter(address router) public onlyMaintainerOrOwner locked(\"router\") {\n        _router = IUniswapV2Router02(router);\n        setLiquidityPair(_router.WETH());\n        excludeTransferFeeAsSender(router);\n        emit RouterUpdated(msg.sender, router, _liquidityPair);\n    }\n    \n    /* =====================================================================================================================\n                                                    Liquidity Functions\n    ===================================================================================================================== */\n    \n    /*\n    * @dev Function to swap the stored liquidity fee tokens and add them to the current liquidity pool\n    */\n    function swapAndLiquify() public taxFree {\n        if(isLiquifyActive) {\n            return;\n        }\n        isLiquifyActive = true;\n        uint256 contractTokenBalance = balanceOf(address(this));\n        if (contractTokenBalance >= _minAmountToLiquify) {\n            IUniswapV2Pair pair = IUniswapV2Pair(_liquidityPair);\n            uint256 devTax = _minAmountToLiquify.mul(devRate).div(100);\n            uint256 donationTax = _minAmountToLiquify.mul(donationRate).div(100);\n            // split the liquify amount into halves\n            uint256 half = _minAmountToLiquify.sub(devTax).sub(donationTax).div(2);\n            uint256 otherHalfWithTax = _minAmountToLiquify.sub(half);\n\n\n            address tokenA = address(pair.token0());\n            address tokenB = address(pair.token1());\n            require(tokenA != tokenB, \"Invalid liqudity pair: Pair can\\'t contain the same token twice\");\n            \n            bool isWeth = tokenA == _router.WETH() || tokenB == _router.WETH();\n            uint256 newBalance = 0;\n            if(isWeth) {\n               swapAndLiquifyEth(otherHalfWithTax, half);\n            } else {\n                swapAndLiquifyTokens(tokenA != address(this) ? tokenA : tokenB, otherHalfWithTax, half);\n            }\n            emit SwapAndLiquify(otherHalfWithTax, newBalance, half);\n        }\n        isLiquifyActive = false;\n    }\n    \n    function swapForEth(uint256 amount) private returns (uint256) {\n        uint256 initialBalance = address(this).balance;\n                \n        // swap tokens for ETH\n        swapTokensForEth(amount);\n        \n        uint256 newBalance = address(this).balance.sub(initialBalance);\n        uint256 devTax = newBalance.mul(devRate).div(100);\n        uint256 donationTax = newBalance.mul(donationRate).div(100);\n        TransferHelper.safeTransferETH(_devWallet, devTax);\n        TransferHelper.safeTransferETH(_donationWallet, donationTax);\n        return address(this).balance.sub(initialBalance);\n    }\n    \n    function swapAndLiquifyEth(uint256 half, uint256 otherHalf) private {\n        uint256 newBalance = swapForEth(half);\n        if(newBalance > 0) {\n            addLiquidityETH(otherHalf, newBalance);\n        }\n    }\n    \n    function swapAndLiquifyTokens(address tokenB, uint256 half, uint256 otherHalf) private {\n        IERC20 tokenBContract = IERC20(tokenB);\n        uint256 ethAmount = swapForEth(half);\n        uint256 initialBalance = tokenBContract.balanceOf(address(this));\n        swapEthForTokens(ethAmount, tokenB);\n        uint256 newBalance = tokenBContract.balanceOf(address(this)).sub(initialBalance);\n        addLiquidity(otherHalf, newBalance, tokenB);\n    }\n    \n    function swapEthForTokens(uint256 tokenAmount, address tokenB) private {\n        address[] memory path = new address[](2);\n        path[0] = _router.WETH();\n        path[1] = tokenB;\n        \n        _router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: tokenAmount}(\n            0, // accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    /// @dev Swap tokens for eth\n    function swapTokensForEth(uint256 tokenAmount) private {\n        // generate the Enodi pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = _router.WETH();\n\n        _approve(address(this), address(_router), tokenAmount);\n\n        // make the swap\n        _router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, // accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n    \n    function addLiquidity(uint256 tokenAmount, uint256 otherAmount, address tokenB) internal {\n        // approve token transfer to cover all possible scenarios\n        _approve(address(this), address(_router), tokenAmount);\n        IERC20(tokenB).approve(address(_router), otherAmount);\n        _router.addLiquidity(\n            address(this),\n            tokenB,\n            tokenAmount,\n            otherAmount,\n            0,\n            0,\n            address(0),\n            block.timestamp\n        );\n    }\n\n    /// @dev Add liquidity\n    function addLiquidityETH(uint256 tokenAmount, uint256 ethAmount) internal {\n        // approve token transfer to cover all possible scenarios\n        _approve(address(this), address(_router), tokenAmount);\n\n        // add the liquidity\n        _router.addLiquidityETH{value: ethAmount}(\n            address(this),\n            tokenAmount,\n            0, // slippage is unavoidable\n            0, // slippage is unavoidable\n            address(0), //burn lp token\n            block.timestamp\n        );\n    }\n    \n}"
			},
			"contracts/libraries/TimeLock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nabstract contract TimeLock is Ownable {\n    using Address for address;   \n    \n    /* =====================================================================================================================\n                                                        Variables\n    ===================================================================================================================== */\n    bool public isLockEnabled = false;\n    mapping(string => uint256) public timelock;\n    uint256 private constant _TIMELOCK = 1 days;\n    address private _maintainer;  \n        \n    /* =====================================================================================================================\n                                                        Events\n    ===================================================================================================================== */\n    event MaintainerTransferred(address indexed previousMaintainer, address indexed newMaintainer);\n    event UnlockedFunction(string indexed functionName, uint256 indexed unlockedAt);\n    event EnabledLock();\n    \n    /* =====================================================================================================================\n                                                        Modifier\n    ===================================================================================================================== */\n    //After unlock we have to wait for _TIMELOCK before we can call the Function\n    //Additionally we have a time window of 24 hours to call the function to prevent pre-unlocked calls\n    modifier locked(string memory _fn) {\n        require(!isLockEnabled || (timelock[_fn] != 0 && timelock[_fn] <= block.timestamp && timelock[_fn] + _TIMELOCK >= block.timestamp), \"Function is locked\");\n        _;\n        lockFunction(_fn);\n    }\n        \n    modifier onlyMaintainerOrOwner() {\n        require(owner() == msg.sender || _maintainer == msg.sender, \"operator: caller is not allowed to call this function\");\n        _;\n    }\n\n    constructor() {\n        _maintainer = msg.sender;\n    }\n    \n    /* =====================================================================================================================\n                                                        Get Functions\n    ===================================================================================================================== */\n    function maintainer() public view returns (address) {\n        return _maintainer;\n    }\n        \n    /* =====================================================================================================================\n                                                        Set Functions\n    ===================================================================================================================== */\n    function setMaintainer(address _newMaintainer) public onlyMaintainerOrOwner locked(\"maintainer\") {\n        require(_newMaintainer != _maintainer && _newMaintainer != address(0), \"ABOAT::setMaintainer: Maintainer can\\'t equal previous maintainer or zero address\");\n        address previousMaintainer = _maintainer;\n        _maintainer = _newMaintainer;\n        emit MaintainerTransferred(previousMaintainer, _maintainer);\n    }\n    \n    function setTimelockEnabled() public onlyMaintainerOrOwner {\n        isLockEnabled = true;\n        emit EnabledLock();\n    }\n\n    /* =====================================================================================================================\n                                                    Utility Functions\n    ===================================================================================================================== */ \n    //unlock timelock\n    function unlockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = block.timestamp + _TIMELOCK;\n        emit UnlockedFunction(_fn, timelock[_fn]);\n     }\n      \n     //lock timelock\n    function lockFunction(string memory _fn) public onlyMaintainerOrOwner {\n        timelock[_fn] = 0;\n    }\n}"
			},
			"contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity 0.8.7;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) private pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 114,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:11737  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2128:2141  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2160:2165  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2153:2165  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2172  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4254:4258  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4279:4291  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4279:4289  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4279:4291  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4300  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4302:4308  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4278  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4270:4309  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4326:4330  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4319:4330  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4171:4337  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3223:3230  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3249:3261  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3261  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3162:3268  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4940:4944  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4972  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4974:4983  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4985:4991  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4965  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4956:4992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5027  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5041  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5042:5048  sender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5049  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5050:5062  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5050:5060  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5050:5062  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5030:5063  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5003:5063  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5101:5107  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5097  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5107  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5073:5152  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5195:5201  sender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5215  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5213  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5215  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5236:5242  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5233  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5217:5242  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5194  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5186:5243  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5271:5275  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5264:5275  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4804:5282  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3074  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3095  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3095  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3011:3102  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5765:5769  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5790:5802  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5790:5800  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5790:5802  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5804:5811  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5850:5860  addedValue */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5824  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5825:5837  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5825:5835  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5825:5837  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5838  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5839:5846  spender */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5847  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5813:5860  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5789  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5781:5861  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5878:5882  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5882  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5889  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3435  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3443  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3426:3444  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3444  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3451  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2341:2354  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2373:2380  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2366:2380  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_65\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_65\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2285:2387  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6469:6473  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6509  uint256 currentAllowance */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6523  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6524:6536  _msgSender() */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6524:6534  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6524:6536  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6537  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6538:6545  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6546  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6546  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6599  subtractedValue */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6580  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6564:6599  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6556:6641  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6696  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6694  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6684:6696  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6698:6705  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6726:6741  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6723  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6707:6741  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6683  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6675:6742  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6770:6774  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6763:6774  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6781  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3744  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3766:3778  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3766:3776  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3766:3778  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3780:3789  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3791:3797  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3765  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3756:3798  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3815:3819  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3819  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3654:3826  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3973:3980  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4010  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4011:4016  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4017  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4018:4025  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3999:4026  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3992:4026  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3884:4033  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":639:646  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":658:675  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10100:10101  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10088  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10102  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10143  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10180:10181  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10168  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10161:10182  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10153:10221  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10262:10268  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10243  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10244:10249  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10250  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10251:10258  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10259  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10232:10268  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10306  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10292:10297  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10308:10314  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10283:10315  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9952:10322  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7408:7409  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7410  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7382:7452  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7491:7492  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7479  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7470:7493  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7462:7533  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7591  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7565:7571  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7573:7582  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7584:7590  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7564  _beforeTokenTransfer */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7591  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7623  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7635  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7626:7643  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7643  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7678:7684  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7674  senderBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7661:7684  senderBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7727  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7797:7803  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7794  senderBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7781:7803  senderBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7770  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7777  sender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7778  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7761:7803  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7847:7853  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7832  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7833:7842  recipient */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7843  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7823:7853  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7886:7895  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7878:7884  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7897:7903  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7869:7904  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7961  _afterTokenTransfer(sender, recipient, amount) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7935:7941  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7943:7952  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:7960  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7934  _afterTokenTransfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7961  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7372:7968  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7255:7968  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10906:11027  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11615:11735  function _afterTokenTransfer(... */\n    tag_134:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_138:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_140\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_142:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_144\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":373:492   */\n    tag_147:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_150\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_153\n      tag_149\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":725:844   */\n    tag_152:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_154\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_155\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_158\n      tag_149\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1222:1341   */\n    tag_157:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_159\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_160\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_138\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_161\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_142\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_164\n      tag_149\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1830:1949   */\n    tag_163:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_165\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_138\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_166\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_142\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_167:\n        /* \"#utility.yul\":2298:2319   */\n      tag_169\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_171:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_173\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2503:2574   */\n      tag_175\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_177\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2660:2689   */\n      tag_179\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_181:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_183\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_176\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_184\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_186:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_188\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_176\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_189\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_191:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_193\n        /* \"#utility.yul\":3673:3675   */\n      0x26\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_176\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_194\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3803:3805   */\n      0x40\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_196:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_198\n        /* \"#utility.yul\":4045:4047   */\n      0x28\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_176\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_199\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_201:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_203\n        /* \"#utility.yul\":4417:4419   */\n      0x25\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_176\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_204\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_206:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_208\n        /* \"#utility.yul\":4789:4791   */\n      0x24\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_176\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_209\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_211:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_213\n        /* \"#utility.yul\":5161:5163   */\n      0x25\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_176\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_214\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5424   */\n    tag_216:\n        /* \"#utility.yul\":5393:5417   */\n      tag_218\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5393:5417   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5388:5391   */\n      dup3\n        /* \"#utility.yul\":5381:5418   */\n      mstore\n        /* \"#utility.yul\":5306:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_220:\n        /* \"#utility.yul\":5513:5535   */\n      tag_222\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5758   */\n    tag_24:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:5751   */\n      tag_225\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5733:5750   */\n      add\n        /* \"#utility.yul\":5724:5730   */\n      dup5\n        /* \"#utility.yul\":5686:5751   */\n      tag_167\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5548:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6077   */\n    tag_18:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:5973   */\n      dup2\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      sub\n        /* \"#utility.yul\":5950:5951   */\n      0x00\n        /* \"#utility.yul\":5939:5948   */\n      dup4\n        /* \"#utility.yul\":5935:5952   */\n      add\n        /* \"#utility.yul\":5928:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6070   */\n      tag_227\n        /* \"#utility.yul\":6065:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":5992:6070   */\n      tag_171\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5984:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5764:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6502   */\n    tag_125:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6495   */\n      tag_229\n        /* \"#utility.yul\":6490:6494   */\n      dup2\n        /* \"#utility.yul\":6364:6495   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6356:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6927   */\n    tag_117:\n        /* \"#utility.yul\":6674:6678   */\n      0x00\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6697:6715   */\n      add\n        /* \"#utility.yul\":6689:6715   */\n      swap1\n      pop\n        /* \"#utility.yul\":6761:6770   */\n      dup2\n        /* \"#utility.yul\":6755:6759   */\n      dup2\n        /* \"#utility.yul\":6751:6771   */\n      sub\n        /* \"#utility.yul\":6747:6748   */\n      0x00\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6749   */\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6920   */\n      tag_231\n        /* \"#utility.yul\":6915:6919   */\n      dup2\n        /* \"#utility.yul\":6789:6920   */\n      tag_186\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6781:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_130:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_233\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_191\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7777   */\n    tag_82:\n        /* \"#utility.yul\":7524:7528   */\n      0x00\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup3\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7539:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7611:7620   */\n      dup2\n        /* \"#utility.yul\":7605:7609   */\n      dup2\n        /* \"#utility.yul\":7601:7621   */\n      sub\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7599   */\n      add\n        /* \"#utility.yul\":7575:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7770   */\n      tag_235\n        /* \"#utility.yul\":7765:7769   */\n      dup2\n        /* \"#utility.yul\":7639:7770   */\n      tag_196\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7631:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8202   */\n    tag_122:\n        /* \"#utility.yul\":7949:7953   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x20\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7964:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8045   */\n      dup2\n        /* \"#utility.yul\":8030:8034   */\n      dup2\n        /* \"#utility.yul\":8026:8046   */\n      sub\n        /* \"#utility.yul\":8022:8023   */\n      0x00\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":8000:8047   */\n      mstore\n        /* \"#utility.yul\":8064:8195   */\n      tag_237\n        /* \"#utility.yul\":8190:8194   */\n      dup2\n        /* \"#utility.yul\":8064:8195   */\n      tag_201\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8056:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8627   */\n    tag_114:\n        /* \"#utility.yul\":8374:8378   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup3\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8389:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8470   */\n      dup2\n        /* \"#utility.yul\":8455:8459   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      sub\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8449   */\n      add\n        /* \"#utility.yul\":8425:8472   */\n      mstore\n        /* \"#utility.yul\":8489:8620   */\n      tag_239\n        /* \"#utility.yul\":8615:8619   */\n      dup2\n        /* \"#utility.yul\":8489:8620   */\n      tag_206\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8481:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9052   */\n    tag_103:\n        /* \"#utility.yul\":8799:8803   */\n      0x00\n        /* \"#utility.yul\":8837:8839   */\n      0x20\n        /* \"#utility.yul\":8826:8835   */\n      dup3\n        /* \"#utility.yul\":8822:8840   */\n      add\n        /* \"#utility.yul\":8814:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:8895   */\n      dup2\n        /* \"#utility.yul\":8880:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8896   */\n      sub\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8850:8897   */\n      mstore\n        /* \"#utility.yul\":8914:9045   */\n      tag_241\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":8914:9045   */\n      tag_211\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8906:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9280   */\n    tag_28:\n        /* \"#utility.yul\":9151:9155   */\n      0x00\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup3\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9166:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9273   */\n      tag_243\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9255:9272   */\n      add\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9202:9273   */\n      tag_216\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":9058:9280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9286:9500   */\n    tag_37:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9493   */\n      tag_245\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9492   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9426:9493   */\n      tag_220\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9286:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9686   */\n    tag_174:\n        /* \"#utility.yul\":9639:9645   */\n      0x00\n        /* \"#utility.yul\":9673:9678   */\n      dup2\n        /* \"#utility.yul\":9667:9679   */\n      mload\n        /* \"#utility.yul\":9657:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:9861   */\n    tag_176:\n        /* \"#utility.yul\":9776:9787   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9817   */\n      mstore\n        /* \"#utility.yul\":9850:9854   */\n      0x20\n        /* \"#utility.yul\":9845:9848   */\n      dup3\n        /* \"#utility.yul\":9841:9855   */\n      add\n        /* \"#utility.yul\":9826:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:9861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9867:10172   */\n    tag_91:\n        /* \"#utility.yul\":9907:9910   */\n      0x00\n        /* \"#utility.yul\":9926:9946   */\n      tag_251\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9926:9946   */\n      tag_219\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9921:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9960:9980   */\n      tag_252\n        /* \"#utility.yul\":9978:9979   */\n      dup4\n        /* \"#utility.yul\":9960:9980   */\n      tag_219\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9955:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10115   */\n      dup3\n        /* \"#utility.yul\":10046:10112   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10042:10116   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      dup3\n        /* \"#utility.yul\":10036:10117   */\n      gt\n        /* \"#utility.yul\":10033:10140   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":10120:10138   */\n      tag_254\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":10033:10140   */\n    tag_253:\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9867:10172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10274   */\n    tag_256:\n        /* \"#utility.yul\":10215:10222   */\n      0x00\n        /* \"#utility.yul\":10244:10268   */\n      tag_258\n        /* \"#utility.yul\":10262:10267   */\n      dup3\n        /* \"#utility.yul\":10244:10268   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10233:10268   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10280:10370   */\n    tag_170:\n        /* \"#utility.yul\":10314:10321   */\n      0x00\n        /* \"#utility.yul\":10357:10362   */\n      dup2\n        /* \"#utility.yul\":10350:10363   */\n      iszero\n        /* \"#utility.yul\":10343:10364   */\n      iszero\n        /* \"#utility.yul\":10332:10364   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10376:10502   */\n    tag_259:\n        /* \"#utility.yul\":10413:10420   */\n      0x00\n        /* \"#utility.yul\":10453:10495   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10446:10451   */\n      dup3\n        /* \"#utility.yul\":10442:10496   */\n      and\n        /* \"#utility.yul\":10431:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10376:10502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10508:10585   */\n    tag_219:\n        /* \"#utility.yul\":10545:10552   */\n      0x00\n        /* \"#utility.yul\":10574:10579   */\n      dup2\n        /* \"#utility.yul\":10563:10579   */\n      swap1\n      pop\n        /* \"#utility.yul\":10508:10585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:10677   */\n    tag_223:\n        /* \"#utility.yul\":10626:10633   */\n      0x00\n        /* \"#utility.yul\":10666:10670   */\n      0xff\n        /* \"#utility.yul\":10659:10664   */\n      dup3\n        /* \"#utility.yul\":10655:10671   */\n      and\n        /* \"#utility.yul\":10644:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:10677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:10990   */\n    tag_178:\n        /* \"#utility.yul\":10751:10752   */\n      0x00\n        /* \"#utility.yul\":10761:10874   */\n    tag_265:\n        /* \"#utility.yul\":10775:10781   */\n      dup4\n        /* \"#utility.yul\":10772:10773   */\n      dup2\n        /* \"#utility.yul\":10769:10782   */\n      lt\n        /* \"#utility.yul\":10761:10874   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":10860:10861   */\n      dup1\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10851:10862   */\n      add\n        /* \"#utility.yul\":10845:10863   */\n      mload\n        /* \"#utility.yul\":10841:10842   */\n      dup2\n        /* \"#utility.yul\":10836:10839   */\n      dup5\n        /* \"#utility.yul\":10832:10843   */\n      add\n        /* \"#utility.yul\":10825:10864   */\n      mstore\n        /* \"#utility.yul\":10797:10799   */\n      0x20\n        /* \"#utility.yul\":10794:10795   */\n      dup2\n        /* \"#utility.yul\":10790:10800   */\n      add\n        /* \"#utility.yul\":10785:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10761:10874   */\n      jump(tag_265)\n    tag_267:\n        /* \"#utility.yul\":10892:10898   */\n      dup4\n        /* \"#utility.yul\":10889:10890   */\n      dup2\n        /* \"#utility.yul\":10886:10899   */\n      gt\n        /* \"#utility.yul\":10883:10984   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":10972:10973   */\n      0x00\n        /* \"#utility.yul\":10963:10969   */\n      dup5\n        /* \"#utility.yul\":10958:10961   */\n      dup5\n        /* \"#utility.yul\":10954:10970   */\n      add\n        /* \"#utility.yul\":10947:10974   */\n      mstore\n        /* \"#utility.yul\":10883:10984   */\n    tag_268:\n        /* \"#utility.yul\":10732:10990   */\n      pop\n        /* \"#utility.yul\":10683:10990   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11316   */\n    tag_65:\n        /* \"#utility.yul\":11040:11046   */\n      0x00\n        /* \"#utility.yul\":11077:11078   */\n      0x02\n        /* \"#utility.yul\":11071:11075   */\n      dup3\n        /* \"#utility.yul\":11067:11079   */\n      div\n        /* \"#utility.yul\":11057:11079   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11125   */\n      0x01\n        /* \"#utility.yul\":11118:11122   */\n      dup3\n        /* \"#utility.yul\":11114:11126   */\n      and\n        /* \"#utility.yul\":11145:11163   */\n      dup1\n        /* \"#utility.yul\":11135:11216   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":11201:11205   */\n      0x7f\n        /* \"#utility.yul\":11193:11199   */\n      dup3\n        /* \"#utility.yul\":11189:11206   */\n      and\n        /* \"#utility.yul\":11179:11206   */\n      swap2\n      pop\n        /* \"#utility.yul\":11135:11216   */\n    tag_270:\n        /* \"#utility.yul\":11263:11265   */\n      0x20\n        /* \"#utility.yul\":11255:11261   */\n      dup3\n        /* \"#utility.yul\":11252:11266   */\n      lt\n        /* \"#utility.yul\":11232:11250   */\n      dup2\n        /* \"#utility.yul\":11229:11267   */\n      eq\n        /* \"#utility.yul\":11226:11310   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":11282:11300   */\n      tag_272\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11226:11310   */\n    tag_271:\n        /* \"#utility.yul\":11047:11316   */\n      pop\n        /* \"#utility.yul\":10996:11316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11322:11502   */\n    tag_255:\n        /* \"#utility.yul\":11370:11447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11367:11368   */\n      0x00\n        /* \"#utility.yul\":11360:11448   */\n      mstore\n        /* \"#utility.yul\":11467:11471   */\n      0x11\n        /* \"#utility.yul\":11464:11465   */\n      0x04\n        /* \"#utility.yul\":11457:11472   */\n      mstore\n        /* \"#utility.yul\":11491:11495   */\n      0x24\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11481:11496   */\n      revert\n        /* \"#utility.yul\":11508:11688   */\n    tag_273:\n        /* \"#utility.yul\":11556:11633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11553:11554   */\n      0x00\n        /* \"#utility.yul\":11546:11634   */\n      mstore\n        /* \"#utility.yul\":11653:11657   */\n      0x22\n        /* \"#utility.yul\":11650:11651   */\n      0x04\n        /* \"#utility.yul\":11643:11658   */\n      mstore\n        /* \"#utility.yul\":11677:11681   */\n      0x24\n        /* \"#utility.yul\":11674:11675   */\n      0x00\n        /* \"#utility.yul\":11667:11682   */\n      revert\n        /* \"#utility.yul\":11817:11934   */\n    tag_149:\n        /* \"#utility.yul\":11926:11927   */\n      0x00\n        /* \"#utility.yul\":11923:11924   */\n      dup1\n        /* \"#utility.yul\":11916:11928   */\n      revert\n        /* \"#utility.yul\":11940:12042   */\n    tag_180:\n        /* \"#utility.yul\":11981:11987   */\n      0x00\n        /* \"#utility.yul\":12032:12034   */\n      0x1f\n        /* \"#utility.yul\":12028:12035   */\n      not\n        /* \"#utility.yul\":12023:12025   */\n      0x1f\n        /* \"#utility.yul\":12016:12021   */\n      dup4\n        /* \"#utility.yul\":12012:12026   */\n      add\n        /* \"#utility.yul\":12008:12036   */\n      and\n        /* \"#utility.yul\":11998:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11940:12042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12048:12270   */\n    tag_185:\n        /* \"#utility.yul\":12188:12222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12184:12185   */\n      0x00\n        /* \"#utility.yul\":12176:12182   */\n      dup3\n        /* \"#utility.yul\":12172:12186   */\n      add\n        /* \"#utility.yul\":12165:12223   */\n      mstore\n        /* \"#utility.yul\":12257:12262   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"#utility.yul\":12244:12250   */\n      dup3\n        /* \"#utility.yul\":12240:12255   */\n      add\n        /* \"#utility.yul\":12233:12263   */\n      mstore\n        /* \"#utility.yul\":12048:12270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12276:12497   */\n    tag_190:\n        /* \"#utility.yul\":12416:12450   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12412:12413   */\n      0x00\n        /* \"#utility.yul\":12404:12410   */\n      dup3\n        /* \"#utility.yul\":12400:12414   */\n      add\n        /* \"#utility.yul\":12393:12451   */\n      mstore\n        /* \"#utility.yul\":12485:12489   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12480:12482   */\n      0x20\n        /* \"#utility.yul\":12472:12478   */\n      dup3\n        /* \"#utility.yul\":12468:12483   */\n      add\n        /* \"#utility.yul\":12461:12490   */\n      mstore\n        /* \"#utility.yul\":12276:12497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12503:12728   */\n    tag_195:\n        /* \"#utility.yul\":12643:12677   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12639:12640   */\n      0x00\n        /* \"#utility.yul\":12631:12637   */\n      dup3\n        /* \"#utility.yul\":12627:12641   */\n      add\n        /* \"#utility.yul\":12620:12678   */\n      mstore\n        /* \"#utility.yul\":12712:12720   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12707:12709   */\n      0x20\n        /* \"#utility.yul\":12699:12705   */\n      dup3\n        /* \"#utility.yul\":12695:12710   */\n      add\n        /* \"#utility.yul\":12688:12721   */\n      mstore\n        /* \"#utility.yul\":12503:12728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12734:12961   */\n    tag_200:\n        /* \"#utility.yul\":12874:12908   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":12870:12871   */\n      0x00\n        /* \"#utility.yul\":12862:12868   */\n      dup3\n        /* \"#utility.yul\":12858:12872   */\n      add\n        /* \"#utility.yul\":12851:12909   */\n      mstore\n        /* \"#utility.yul\":12943:12953   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12938:12940   */\n      0x20\n        /* \"#utility.yul\":12930:12936   */\n      dup3\n        /* \"#utility.yul\":12926:12941   */\n      add\n        /* \"#utility.yul\":12919:12954   */\n      mstore\n        /* \"#utility.yul\":12734:12961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12967:13191   */\n    tag_205:\n        /* \"#utility.yul\":13107:13141   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13103:13104   */\n      0x00\n        /* \"#utility.yul\":13095:13101   */\n      dup3\n        /* \"#utility.yul\":13091:13105   */\n      add\n        /* \"#utility.yul\":13084:13142   */\n      mstore\n        /* \"#utility.yul\":13176:13183   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13171:13173   */\n      0x20\n        /* \"#utility.yul\":13163:13169   */\n      dup3\n        /* \"#utility.yul\":13159:13174   */\n      add\n        /* \"#utility.yul\":13152:13184   */\n      mstore\n        /* \"#utility.yul\":12967:13191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13197:13420   */\n    tag_210:\n        /* \"#utility.yul\":13337:13371   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13333:13334   */\n      0x00\n        /* \"#utility.yul\":13325:13331   */\n      dup3\n        /* \"#utility.yul\":13321:13335   */\n      add\n        /* \"#utility.yul\":13314:13372   */\n      mstore\n        /* \"#utility.yul\":13406:13412   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13401:13403   */\n      0x20\n        /* \"#utility.yul\":13393:13399   */\n      dup3\n        /* \"#utility.yul\":13389:13404   */\n      add\n        /* \"#utility.yul\":13382:13413   */\n      mstore\n        /* \"#utility.yul\":13197:13420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13426:13650   */\n    tag_215:\n        /* \"#utility.yul\":13566:13600   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":13562:13563   */\n      0x00\n        /* \"#utility.yul\":13554:13560   */\n      dup3\n        /* \"#utility.yul\":13550:13564   */\n      add\n        /* \"#utility.yul\":13543:13601   */\n      mstore\n        /* \"#utility.yul\":13635:13642   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13630:13632   */\n      0x20\n        /* \"#utility.yul\":13622:13628   */\n      dup3\n        /* \"#utility.yul\":13618:13633   */\n      add\n        /* \"#utility.yul\":13611:13643   */\n      mstore\n        /* \"#utility.yul\":13426:13650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13656:13778   */\n    tag_141:\n        /* \"#utility.yul\":13729:13753   */\n      tag_288\n        /* \"#utility.yul\":13747:13752   */\n      dup2\n        /* \"#utility.yul\":13729:13753   */\n      tag_256\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13722:13727   */\n      dup2\n        /* \"#utility.yul\":13719:13754   */\n      eq\n        /* \"#utility.yul\":13709:13772   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":13768:13769   */\n      0x00\n        /* \"#utility.yul\":13765:13766   */\n      dup1\n        /* \"#utility.yul\":13758:13770   */\n      revert\n        /* \"#utility.yul\":13709:13772   */\n    tag_289:\n        /* \"#utility.yul\":13656:13778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13784:13906   */\n    tag_145:\n        /* \"#utility.yul\":13857:13881   */\n      tag_291\n        /* \"#utility.yul\":13875:13880   */\n      dup2\n        /* \"#utility.yul\":13857:13881   */\n      tag_219\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13850:13855   */\n      dup2\n        /* \"#utility.yul\":13847:13882   */\n      eq\n        /* \"#utility.yul\":13837:13900   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13896:13897   */\n      0x00\n        /* \"#utility.yul\":13893:13894   */\n      dup1\n        /* \"#utility.yul\":13886:13898   */\n      revert\n        /* \"#utility.yul\":13837:13900   */\n    tag_292:\n        /* \"#utility.yul\":13784:13906   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205793a1b199808168f83f7019fe938f4f1fce37d47f0b117f549dd6c317fef23764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:15"
															},
															"nodeType": "YulIf",
															"src": "262:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:15",
														"type": ""
													}
												],
												"src": "7:421:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:15"
															},
															"nodeType": "YulIf",
															"src": "531:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:15",
														"type": ""
													}
												],
												"src": "448:355:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:15"
															},
															"nodeType": "YulIf",
															"src": "933:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:15",
														"type": ""
													}
												],
												"src": "809:853:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:15",
														"type": ""
													}
												],
												"src": "1668:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:15",
														"type": ""
													}
												],
												"src": "1803:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:15"
															},
															"nodeType": "YulIf",
															"src": "2022:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:15",
														"type": ""
													}
												],
												"src": "1884:308:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:15",
																"statements": []
															},
															"src": "2276:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:15"
															},
															"nodeType": "YulIf",
															"src": "2398:101:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:15",
														"type": ""
													}
												],
												"src": "2198:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:15"
															},
															"nodeType": "YulIf",
															"src": "2650:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:15"
															},
															"nodeType": "YulIf",
															"src": "2741:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:15",
														"type": ""
													}
												],
												"src": "2511:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:15"
															},
															"nodeType": "YulIf",
															"src": "2993:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:15",
														"type": ""
													}
												],
												"src": "2837:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:15",
														"type": ""
													}
												],
												"src": "3988:102:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017623803806200176283398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6113aa80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e45565b60405180910390f35b6100e660048036038101906100e19190610c8f565b610308565b6040516100f39190610e2a565b60405180910390f35b610104610326565b6040516101119190610f47565b60405180910390f35b610134600480360381019061012f9190610c3c565b610330565b6040516101419190610e2a565b60405180910390f35b610152610428565b60405161015f9190610f62565b60405180910390f35b610182600480360381019061017d9190610c8f565b610431565b60405161018f9190610e2a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f47565b60405180910390f35b6101d0610525565b6040516101dd9190610e45565b60405180910390f35b61020060048036038101906101fb9190610c8f565b6105b7565b60405161020d9190610e2a565b60405180910390f35b610230600480360381019061022b9190610c8f565b6106a2565b60405161023d9190610e2a565b60405180910390f35b610260600480360381019061025b9190610bfc565b6106c0565b60405161026d9190610f47565b60405180910390f35b60606003805461028590611077565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611077565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ec7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f99565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611077565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611077565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f27565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610f07565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e87565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f47565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ee7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e67565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610ea7565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f99565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f47565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611346565b92915050565b600081359050610bc98161135d565b92915050565b600060208284031215610be557610be4611107565b5b6000610bf384828501610ba5565b91505092915050565b60008060408385031215610c1357610c12611107565b5b6000610c2185828601610ba5565b9250506020610c3285828601610ba5565b9150509250929050565b600080600060608486031215610c5557610c54611107565b5b6000610c6386828701610ba5565b9350506020610c7486828701610ba5565b9250506040610c8586828701610bba565b9150509250925092565b60008060408385031215610ca657610ca5611107565b5b6000610cb485828601610ba5565b9250506020610cc585828601610bba565b9150509250929050565b610cd881611001565b82525050565b6000610ce982610f7d565b610cf38185610f88565b9350610d03818560208601611044565b610d0c8161110c565b840191505092915050565b6000610d24602383610f88565b9150610d2f8261111d565b604082019050919050565b6000610d47602283610f88565b9150610d528261116c565b604082019050919050565b6000610d6a602683610f88565b9150610d75826111bb565b604082019050919050565b6000610d8d602883610f88565b9150610d988261120a565b604082019050919050565b6000610db0602583610f88565b9150610dbb82611259565b604082019050919050565b6000610dd3602483610f88565b9150610dde826112a8565b604082019050919050565b6000610df6602583610f88565b9150610e01826112f7565b604082019050919050565b610e158161102d565b82525050565b610e2481611037565b82525050565b6000602082019050610e3f6000830184610ccf565b92915050565b60006020820190508181036000830152610e5f8184610cde565b905092915050565b60006020820190508181036000830152610e8081610d17565b9050919050565b60006020820190508181036000830152610ea081610d3a565b9050919050565b60006020820190508181036000830152610ec081610d5d565b9050919050565b60006020820190508181036000830152610ee081610d80565b9050919050565b60006020820190508181036000830152610f0081610da3565b9050919050565b60006020820190508181036000830152610f2081610dc6565b9050919050565b60006020820190508181036000830152610f4081610de9565b9050919050565b6000602082019050610f5c6000830184610e0c565b92915050565b6000602082019050610f776000830184610e1b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fa48261102d565b9150610faf8361102d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fe457610fe36110a9565b5b828201905092915050565b6000610ffa8261100d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611062578082015181840152602081019050611047565b83811115611071576000848401525b50505050565b6000600282049050600182168061108f57607f821691505b602082108114156110a3576110a26110d8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61134f81610fef565b811461135a57600080fd5b50565b6113668161102d565b811461137157600080fd5b5056fea26469706673582212205793a1b199808168f83f7019fe938f4f1fce37d47f0b117f549dd6c317fef23764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1762 CODESIZE SUB DUP1 PUSH3 0x1762 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x1346 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC32 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC63 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC74 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC85 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0x1001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xCF3 DUP2 DUP6 PUSH2 0xF88 JUMP JUMPDEST SWAP4 POP PUSH2 0xD03 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1044 JUMP JUMPDEST PUSH2 0xD0C DUP2 PUSH2 0x110C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 PUSH1 0x23 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2F DUP3 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD47 PUSH1 0x22 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD52 DUP3 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A PUSH1 0x26 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD75 DUP3 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8D PUSH1 0x28 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD98 DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB0 PUSH1 0x25 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBB DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 PUSH1 0x24 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDE DUP3 PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 PUSH1 0x25 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE24 DUP2 PUSH2 0x1037 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5F DUP2 DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE80 DUP2 PUSH2 0xD17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA0 DUP2 PUSH2 0xD3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC0 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xD80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF00 DUP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF20 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF40 DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA4 DUP3 PUSH2 0x102D JUMP JUMPDEST SWAP2 POP PUSH2 0xFAF DUP4 PUSH2 0x102D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFE4 JUMPI PUSH2 0xFE3 PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFA DUP3 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1062 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1047 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x108F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x10D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134F DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP2 EQ PUSH2 0x135A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP2 EQ PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP4 LOG1 0xB1 SWAP10 DUP1 DUP2 PUSH9 0xF83F7019FE938F4F1F 0xCE CALLDATACOPY 0xD4 PUSH32 0xB117F549DD6C317FEF23764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "1321:10416:2:-:0;;;1896:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1970:5;1962;:13;;;;;;;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;;;;;;;:::i;:::-;;1896:113;;1321:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:15:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1321:10416:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_688": {
									"entryPoint": 2976,
									"id": 688,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_666": {
									"entryPoint": 1871,
									"id": 666,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_677": {
									"entryPoint": 2971,
									"id": 677,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1099": {
									"entryPoint": 1863,
									"id": 1099,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_493": {
									"entryPoint": 2330,
									"id": 493,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_281": {
									"entryPoint": 1728,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 776,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_242": {
									"entryPoint": 1245,
									"id": 242,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_218": {
									"entryPoint": 1064,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_416": {
									"entryPoint": 1463,
									"id": 416,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_377": {
									"entryPoint": 1073,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_198": {
									"entryPoint": 630,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_208": {
									"entryPoint": 1317,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_228": {
									"entryPoint": 806,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_350": {
									"entryPoint": 816,
									"id": 350,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_263": {
									"entryPoint": 1698,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13909:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:15",
														"type": ""
													}
												],
												"src": "7:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:15",
														"type": ""
													}
												],
												"src": "152:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:15"
															},
															"nodeType": "YulIf",
															"src": "373:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:15",
														"type": ""
													}
												],
												"src": "297:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:15"
															},
															"nodeType": "YulIf",
															"src": "725:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:15",
														"type": ""
													}
												],
												"src": "632:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:15"
															},
															"nodeType": "YulIf",
															"src": "1222:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:15",
														"type": ""
													}
												],
												"src": "1112:619:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:15"
															},
															"nodeType": "YulIf",
															"src": "1830:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:15",
														"type": ""
													}
												],
												"src": "1737:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:15",
														"type": ""
													}
												],
												"src": "2217:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:15",
														"type": ""
													}
												],
												"src": "2332:364:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:15",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:15",
														"type": ""
													}
												],
												"src": "2702:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:15",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:15",
														"type": ""
													}
												],
												"src": "3074:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:15",
														"type": ""
													}
												],
												"src": "3446:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:15",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:15",
														"type": ""
													}
												],
												"src": "3818:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:15",
														"type": ""
													}
												],
												"src": "4190:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:15",
														"type": ""
													}
												],
												"src": "4562:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:15",
														"type": ""
													}
												],
												"src": "4934:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5388:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5393:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5366:3:15",
														"type": ""
													}
												],
												"src": "5306:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5479:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5486:3:15",
														"type": ""
													}
												],
												"src": "5430:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5650:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5612:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5624:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5635:4:15",
														"type": ""
													}
												],
												"src": "5548:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:195:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5958:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6065:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:15",
														"type": ""
													}
												],
												"src": "5764:313:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6234:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:15",
														"type": ""
													}
												],
												"src": "6083:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6915:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6789:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6674:4:15",
														"type": ""
													}
												],
												"src": "6508:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7084:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7099:4:15",
														"type": ""
													}
												],
												"src": "6933:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7539:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7539:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7605:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7611:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7765:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7509:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7524:4:15",
														"type": ""
													}
												],
												"src": "7358:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8030:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8056:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8190:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7934:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7949:4:15",
														"type": ""
													}
												],
												"src": "7783:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8379:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8389:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8401:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8389:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8455:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8615:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8489:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8374:4:15",
														"type": ""
													}
												],
												"src": "8208:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8826:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8880:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8914:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:15",
														"type": ""
													}
												],
												"src": "8633:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9156:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9166:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9140:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9151:4:15",
														"type": ""
													}
												],
												"src": "9058:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:120:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:39:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:67:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9352:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:15",
														"type": ""
													}
												],
												"src": "9286:214:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9556:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:15",
														"type": ""
													}
												],
												"src": "9506:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9646:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9657:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9667:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9639:6:15",
														"type": ""
													}
												],
												"src": "9587:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9810:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9826:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9826:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9760:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9765:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9776:11:15",
														"type": ""
													}
												],
												"src": "9692:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:261:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9921:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9926:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9921:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9955:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9960:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9955:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10118:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10120:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10120:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10039:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:66:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10114:1:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:74:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10036:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:81:15"
															},
															"nodeType": "YulIf",
															"src": "10033:107:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9898:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9901:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9907:3:15",
														"type": ""
													}
												],
												"src": "9867:305:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10262:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10244:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10233:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10205:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10215:7:15",
														"type": ""
													}
												],
												"src": "10178:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10322:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10332:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10357:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10350:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10332:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10304:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10314:7:15",
														"type": ""
													}
												],
												"src": "10280:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10431:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10446:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10453:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10431:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10403:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10413:7:15",
														"type": ""
													}
												],
												"src": "10376:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10553:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10563:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10574:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10563:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10535:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10545:7:15",
														"type": ""
													}
												],
												"src": "10508:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:43:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10644:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10659:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10666:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10644:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10616:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10626:7:15",
														"type": ""
													}
												],
												"src": "10591:86:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10732:258:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10742:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10751:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10746:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10811:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10836:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10841:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10832:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10832:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10855:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10860:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10851:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10851:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10845:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10845:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10825:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10825:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10825:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10772:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10775:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10769:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10783:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10785:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10794:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10797:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10790:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10790:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10785:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10765:3:15",
																"statements": []
															},
															"src": "10761:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10908:76:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10958:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10963:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10954:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10954:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10972:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10947:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10947:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10889:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10892:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10886:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:13:15"
															},
															"nodeType": "YulIf",
															"src": "10883:101:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10714:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10719:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10724:6:15",
														"type": ""
													}
												],
												"src": "10683:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11057:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11071:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11077:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11067:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11088:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11118:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11124:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11114:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11114:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11092:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11165:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11179:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11193:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11201:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11189:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11189:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11145:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:26:15"
															},
															"nodeType": "YulIf",
															"src": "11135:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11268:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11282:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11282:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11282:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11232:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11255:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11263:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11252:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11252:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11229:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:38:15"
															},
															"nodeType": "YulIf",
															"src": "11226:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11031:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11040:6:15",
														"type": ""
													}
												],
												"src": "10996:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11350:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11367:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11370:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11360:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11467:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11457:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11457:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11491:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11481:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11322:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11556:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11650:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11643:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11643:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11674:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11677:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11508:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11783:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11800:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11803:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11694:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11906:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11923:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11926:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11817:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11988:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11998:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12016:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12032:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12028:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12028:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12008:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12008:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11998:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11971:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11981:6:15",
														"type": ""
													}
												],
												"src": "11940:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12154:116:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12176:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12184:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12172:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12172:14:15"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12188:34:15",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12165:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12165:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12165:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12244:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12240:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12240:15:15"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12257:5:15",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:30:15"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12146:6:15",
														"type": ""
													}
												],
												"src": "12048:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12382:115:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12404:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12412:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:14:15"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12416:34:15",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12472:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12480:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12468:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12468:15:15"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12485:4:15",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12461:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12461:29:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12461:29:15"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12374:6:15",
														"type": ""
													}
												],
												"src": "12276:221:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12609:119:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12631:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12639:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12627:14:15"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12643:34:15",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12620:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12620:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12620:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12699:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12707:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12695:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12695:15:15"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12712:8:15",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12688:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12688:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12688:33:15"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12601:6:15",
														"type": ""
													}
												],
												"src": "12503:225:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12840:121:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12862:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12870:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12858:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12858:14:15"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12874:34:15",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12851:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12851:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12851:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12930:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12938:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12926:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12926:15:15"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12943:10:15",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12919:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12919:35:15"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12832:6:15",
														"type": ""
													}
												],
												"src": "12734:227:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13073:118:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13095:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13103:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13091:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13091:14:15"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13107:34:15",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13084:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13163:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13171:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13159:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13159:15:15"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13176:7:15",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13152:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13152:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13152:32:15"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13065:6:15",
														"type": ""
													}
												],
												"src": "12967:224:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13303:117:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13325:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13333:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13321:14:15"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13337:34:15",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13314:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13314:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13314:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13393:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13401:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13389:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13389:15:15"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13406:6:15",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13382:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13382:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13382:31:15"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13295:6:15",
														"type": ""
													}
												],
												"src": "13197:223:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13532:118:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13554:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13562:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13550:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13550:14:15"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13566:34:15",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13543:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13543:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13543:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13622:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13618:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13618:15:15"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13635:7:15",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13611:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13611:32:15"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13524:6:15",
														"type": ""
													}
												],
												"src": "13426:224:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13699:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13756:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13765:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13768:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13758:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13758:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13758:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13722:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13747:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13729:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13729:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13719:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:43:15"
															},
															"nodeType": "YulIf",
															"src": "13709:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13692:5:15",
														"type": ""
													}
												],
												"src": "13656:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13827:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13884:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13893:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13896:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13886:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13886:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13886:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13850:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13875:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13857:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13857:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13847:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13847:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13840:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13840:43:15"
															},
															"nodeType": "YulIf",
															"src": "13837:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13820:5:15",
														"type": ""
													}
												],
												"src": "13784:122:15"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e45565b60405180910390f35b6100e660048036038101906100e19190610c8f565b610308565b6040516100f39190610e2a565b60405180910390f35b610104610326565b6040516101119190610f47565b60405180910390f35b610134600480360381019061012f9190610c3c565b610330565b6040516101419190610e2a565b60405180910390f35b610152610428565b60405161015f9190610f62565b60405180910390f35b610182600480360381019061017d9190610c8f565b610431565b60405161018f9190610e2a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f47565b60405180910390f35b6101d0610525565b6040516101dd9190610e45565b60405180910390f35b61020060048036038101906101fb9190610c8f565b6105b7565b60405161020d9190610e2a565b60405180910390f35b610230600480360381019061022b9190610c8f565b6106a2565b60405161023d9190610e2a565b60405180910390f35b610260600480360381019061025b9190610bfc565b6106c0565b60405161026d9190610f47565b60405180910390f35b60606003805461028590611077565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611077565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610ec7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f99565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611077565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611077565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f27565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610f07565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e87565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f47565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ee7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e67565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610ea7565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f99565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f47565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611346565b92915050565b600081359050610bc98161135d565b92915050565b600060208284031215610be557610be4611107565b5b6000610bf384828501610ba5565b91505092915050565b60008060408385031215610c1357610c12611107565b5b6000610c2185828601610ba5565b9250506020610c3285828601610ba5565b9150509250929050565b600080600060608486031215610c5557610c54611107565b5b6000610c6386828701610ba5565b9350506020610c7486828701610ba5565b9250506040610c8586828701610bba565b9150509250925092565b60008060408385031215610ca657610ca5611107565b5b6000610cb485828601610ba5565b9250506020610cc585828601610bba565b9150509250929050565b610cd881611001565b82525050565b6000610ce982610f7d565b610cf38185610f88565b9350610d03818560208601611044565b610d0c8161110c565b840191505092915050565b6000610d24602383610f88565b9150610d2f8261111d565b604082019050919050565b6000610d47602283610f88565b9150610d528261116c565b604082019050919050565b6000610d6a602683610f88565b9150610d75826111bb565b604082019050919050565b6000610d8d602883610f88565b9150610d988261120a565b604082019050919050565b6000610db0602583610f88565b9150610dbb82611259565b604082019050919050565b6000610dd3602483610f88565b9150610dde826112a8565b604082019050919050565b6000610df6602583610f88565b9150610e01826112f7565b604082019050919050565b610e158161102d565b82525050565b610e2481611037565b82525050565b6000602082019050610e3f6000830184610ccf565b92915050565b60006020820190508181036000830152610e5f8184610cde565b905092915050565b60006020820190508181036000830152610e8081610d17565b9050919050565b60006020820190508181036000830152610ea081610d3a565b9050919050565b60006020820190508181036000830152610ec081610d5d565b9050919050565b60006020820190508181036000830152610ee081610d80565b9050919050565b60006020820190508181036000830152610f0081610da3565b9050919050565b60006020820190508181036000830152610f2081610dc6565b9050919050565b60006020820190508181036000830152610f4081610de9565b9050919050565b6000602082019050610f5c6000830184610e0c565b92915050565b6000602082019050610f776000830184610e1b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fa48261102d565b9150610faf8361102d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fe457610fe36110a9565b5b828201905092915050565b6000610ffa8261100d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611062578082015181840152602081019050611047565b83811115611071576000848401525b50505050565b6000600282049050600182168061108f57607f821691505b602082108114156110a3576110a26110d8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61134f81610fef565b811461135a57600080fd5b50565b6113668161102d565b811461137157600080fd5b5056fea26469706673582212205793a1b199808168f83f7019fe938f4f1fce37d47f0b117f549dd6c317fef23764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1077 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x1346 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x135D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE4 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC32 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC63 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC74 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC85 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0x1107 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0x1001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP3 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0xCF3 DUP2 DUP6 PUSH2 0xF88 JUMP JUMPDEST SWAP4 POP PUSH2 0xD03 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1044 JUMP JUMPDEST PUSH2 0xD0C DUP2 PUSH2 0x110C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 PUSH1 0x23 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2F DUP3 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD47 PUSH1 0x22 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD52 DUP3 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A PUSH1 0x26 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD75 DUP3 PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8D PUSH1 0x28 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xD98 DUP3 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB0 PUSH1 0x25 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBB DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD3 PUSH1 0x24 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDE DUP3 PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 PUSH1 0x25 DUP4 PUSH2 0xF88 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE24 DUP2 PUSH2 0x1037 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE5F DUP2 DUP5 PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE80 DUP2 PUSH2 0xD17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEA0 DUP2 PUSH2 0xD3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEC0 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE0 DUP2 PUSH2 0xD80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF00 DUP2 PUSH2 0xDA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF20 DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF40 DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA4 DUP3 PUSH2 0x102D JUMP JUMPDEST SWAP2 POP PUSH2 0xFAF DUP4 PUSH2 0x102D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFE4 JUMPI PUSH2 0xFE3 PUSH2 0x10A9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFA DUP3 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1062 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1047 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x108F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x10D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134F DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP2 EQ PUSH2 0x135A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP2 EQ PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP4 LOG1 0xB1 SWAP10 DUP1 DUP2 PUSH9 0xF83F7019FE938F4F1F 0xCE CALLDATACOPY 0xD4 PUSH32 0xB117F549DD6C317FEF23764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "1321:10416:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3162:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4804:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5677:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3326:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2285:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6376:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3654:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3884:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:98;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;4326:4;4319:11;;4171:166;;;;:::o;3162:106::-;3223:7;3249:12;;3242:19;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;5003:24;5030:11;:19;5042:6;5030:19;;;;;;;;;;;;;;;:33;5050:12;:10;:12::i;:::-;5030:33;;;;;;;;;;;;;;;;5003:60;;5101:6;5081:16;:26;;5073:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;5271:4;5264:11;;;4804:478;;;;;:::o;3011:91::-;3069:5;3093:2;3086:9;;3011:91;:::o;5677:212::-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;5813:25;;;;;;;;;;;;;;;:34;5839:7;5813:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;:::-;5878:4;5871:11;;5677:212;;;;:::o;3326:125::-;3400:7;3426:9;:18;3436:7;3426:18;;;;;;;;;;;;;;;;3419:25;;3326:125;;;:::o;2285:102::-;2341:13;2373:7;2366:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:102;:::o;6376:405::-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;6512:25;;;;;;;;;;;;;;;:34;6538:7;6512:34;;;;;;;;;;;;;;;;6485:61;;6584:15;6564:16;:35;;6556:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;6770:4;6763:11;;;6376:405;;;;:::o;3654:172::-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;:::-;3815:4;3808:11;;3654:172;;;;:::o;3884:149::-;3973:7;3999:11;:18;4011:5;3999:18;;;;;;;;;;;;;;;:27;4018:7;3999:27;;;;;;;;;;;;;;;;3992:34;;3884:149;;;;:::o;586:96:6:-;639:7;665:10;658:17;;586:96;:::o;9952:370:2:-;10100:1;10083:19;;:5;:19;;;;10075:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10180:1;10161:21;;:7;:21;;;;10153:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10262:6;10232:11;:18;10244:5;10232:18;;;;;;;;;;;;;;;:27;10251:7;10232:27;;;;;;;;;;;;;;;:36;;;;10299:7;10283:32;;10292:5;10283:32;;;10308:6;10283:32;;;;;;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;7408:1;7390:20;;:6;:20;;;;7382:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7491:1;7470:23;;:9;:23;;;;7462:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;7602:21;7626:9;:17;7636:6;7626:17;;;;;;;;;;;;;;;;7602:41;;7678:6;7661:13;:23;;7653:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7797:6;7781:13;:22;7761:9;:17;7771:6;7761:17;;;;;;;;;;;;;;;:42;;;;7847:6;7823:9;:20;7833:9;7823:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7886:9;7869:35;;7878:6;7869:35;;;7897:6;7869:35;;;;;;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7372:596;7255:713;;;:::o;10906:121::-;;;;:::o;11615:120::-;;;;:::o;7:139:15:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10178:96;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10280:90;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10376:126;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10508:77;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10591:86;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:101;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:101;10732:258;10683:307;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:81;;11201:4;11193:6;11189:17;11179:27;;11135:81;11263:2;11255:6;11252:14;11232:18;11229:38;11226:84;;;11282:18;;:::i;:::-;11226:84;11047:269;10996:320;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11940:102;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12048:222;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12276:221;:::o;12503:225::-;12643:34;12639:1;12631:6;12627:14;12620:58;12712:8;12707:2;12699:6;12695:15;12688:33;12503:225;:::o;12734:227::-;12874:34;12870:1;12862:6;12858:14;12851:58;12943:10;12938:2;12930:6;12926:15;12919:35;12734:227;:::o;12967:224::-;13107:34;13103:1;13095:6;13091:14;13084:58;13176:7;13171:2;13163:6;13159:15;13152:32;12967:224;:::o;13197:223::-;13337:34;13333:1;13325:6;13321:14;13314:58;13406:6;13401:2;13393:6;13389:15;13382:31;13197:223;:::o;13426:224::-;13566:34;13562:1;13554:6;13550:14;13543:58;13635:7;13630:2;13622:6;13618:15;13611:32;13426:224;:::o;13656:122::-;13729:24;13747:5;13729:24;:::i;:::-;13722:5;13719:35;13709:63;;13768:1;13765;13758:12;13709:63;13656:122;:::o;13784:::-;13857:24;13875:5;13857:24;:::i;:::-;13850:5;13847:35;13837:63;;13896:1;13893;13886:12;13837:63;13784:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1006800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 11737,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205793a1b199808168f83f7019fe938f4f1fce37d47f0b117f549dd6c317fef23764736f6c63430008070033",
									".code": [
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 11737,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2172,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4270,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4319,
											"end": 4330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4956,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5041,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5050,
											"end": 5062,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5062,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5050,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5030,
											"end": 5063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5073,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5203,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5203,
											"end": 5215,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5215,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5203,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5186,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5264,
											"end": 5275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 5282,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3102,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5790,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5824,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5825,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5838,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5846,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5813,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5781,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5878,
											"end": 5882,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5871,
											"end": 5882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5871,
											"end": 5882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5889,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3451,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2387,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6523,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6524,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6545,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6546,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6485,
											"end": 6546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6485,
											"end": 6546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6599,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6556,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6684,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6698,
											"end": 6705,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6741,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6741,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6675,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6763,
											"end": 6774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6781,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3766,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3766,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3766,
											"end": 3778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3766,
											"end": 3778,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3766,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3756,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3826,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 639,
											"end": 646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 658,
											"end": 675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 658,
											"end": 675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10083,
											"end": 10102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10075,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10153,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10243,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10249,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10259,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10297,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10283,
											"end": 10315,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9952,
											"end": 10322,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7382,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7470,
											"end": 7493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7462,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 7544,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7602,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7643,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7602,
											"end": 7643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7602,
											"end": 7643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7684,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7653,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7803,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7778,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7823,
											"end": 7853,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7897,
											"end": 7903,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7904,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7943,
											"end": 7952,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7915,
											"end": 7961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7915,
											"end": 7961,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7915,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7255,
											"end": 7968,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10906,
											"end": 11027,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11615,
											"end": 11735,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5381,
											"end": 5418,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5733,
											"end": 5750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5928,
											"end": 5975,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7622,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8000,
											"end": 8047,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8432,
											"end": 8449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8425,
											"end": 8472,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8835,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8850,
											"end": 8897,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9475,
											"end": 9492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9798,
											"end": 9817,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9850,
											"end": 9854,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10046,
											"end": 10112,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10116,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10036,
											"end": 10117,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 10262,
											"end": 10267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10314,
											"end": 10321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10350,
											"end": 10363,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10343,
											"end": 10364,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10495,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10446,
											"end": 10451,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10442,
											"end": 10496,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10552,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10579,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10670,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10775,
											"end": 10781,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10769,
											"end": 10782,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10851,
											"end": 10862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10845,
											"end": 10863,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10836,
											"end": 10839,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10825,
											"end": 10864,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10892,
											"end": 10898,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10886,
											"end": 10899,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10972,
											"end": 10973,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10969,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10947,
											"end": 10974,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10732,
											"end": 10990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 11071,
											"end": 11075,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11067,
											"end": 11079,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11114,
											"end": 11126,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 11193,
											"end": 11199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11263,
											"end": 11265,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11252,
											"end": 11266,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 11232,
											"end": 11250,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11229,
											"end": 11267,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11370,
											"end": 11447,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11367,
											"end": 11368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11448,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11467,
											"end": 11471,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11457,
											"end": 11472,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11491,
											"end": 11495,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11481,
											"end": 11496,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "tag",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11556,
											"end": 11633,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11634,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11643,
											"end": 11658,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11677,
											"end": 11681,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "tag",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12028,
											"end": 12035,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12016,
											"end": 12021,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12012,
											"end": 12026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12008,
											"end": 12036,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12188,
											"end": 12222,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12184,
											"end": 12185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12172,
											"end": 12186,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "PUSH",
											"source": 15,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12416,
											"end": 12450,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12400,
											"end": 12414,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12393,
											"end": 12451,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 15,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12480,
											"end": 12482,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12468,
											"end": 12483,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12461,
											"end": 12490,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12503,
											"end": 12728,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 12503,
											"end": 12728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12643,
											"end": 12677,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12631,
											"end": 12637,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12627,
											"end": 12641,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12678,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12712,
											"end": 12720,
											"name": "PUSH",
											"source": 15,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12707,
											"end": 12709,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12705,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12695,
											"end": 12710,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12688,
											"end": 12721,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12503,
											"end": 12728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12503,
											"end": 12728,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12734,
											"end": 12961,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 12734,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 12908,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 12870,
											"end": 12871,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12868,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12858,
											"end": 12872,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12851,
											"end": 12909,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12943,
											"end": 12953,
											"name": "PUSH",
											"source": 15,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12938,
											"end": 12940,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12930,
											"end": 12936,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12926,
											"end": 12941,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12919,
											"end": 12954,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12734,
											"end": 12961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12734,
											"end": 12961,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12967,
											"end": 13191,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 12967,
											"end": 13191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13107,
											"end": 13141,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13103,
											"end": 13104,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13101,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13091,
											"end": 13105,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13142,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13176,
											"end": 13183,
											"name": "PUSH",
											"source": 15,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13171,
											"end": 13173,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13163,
											"end": 13169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13152,
											"end": 13184,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12967,
											"end": 13191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12967,
											"end": 13191,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13197,
											"end": 13420,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 13197,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13337,
											"end": 13371,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13333,
											"end": 13334,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13325,
											"end": 13331,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13335,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13314,
											"end": 13372,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13406,
											"end": 13412,
											"name": "PUSH",
											"source": 15,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13401,
											"end": 13403,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13393,
											"end": 13399,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13389,
											"end": 13404,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13382,
											"end": 13413,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13197,
											"end": 13420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13197,
											"end": 13420,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13426,
											"end": 13650,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 13426,
											"end": 13650,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13566,
											"end": 13600,
											"name": "PUSH",
											"source": 15,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13550,
											"end": 13564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13543,
											"end": 13601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13635,
											"end": 13642,
											"name": "PUSH",
											"source": 15,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13618,
											"end": 13633,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13611,
											"end": 13643,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13650,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13656,
											"end": 13778,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 13656,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13729,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 13747,
											"end": 13752,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13729,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 13729,
											"end": 13753,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13729,
											"end": 13753,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 13729,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13722,
											"end": 13727,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13719,
											"end": 13754,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 13709,
											"end": 13772,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 13709,
											"end": 13772,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13768,
											"end": 13769,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13758,
											"end": 13770,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13709,
											"end": 13772,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 13709,
											"end": 13772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13656,
											"end": 13778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13656,
											"end": 13778,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 13784,
											"end": 13906,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 13784,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13857,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 13875,
											"end": 13880,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13857,
											"end": 13881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 13857,
											"end": 13881,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 13857,
											"end": 13881,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 13857,
											"end": 13881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13850,
											"end": 13855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13847,
											"end": 13882,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 13837,
											"end": 13900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 13837,
											"end": 13900,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13896,
											"end": 13897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13886,
											"end": 13898,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13837,
											"end": 13900,
											"name": "tag",
											"source": 15,
											"value": "292"
										},
										{
											"begin": 13837,
											"end": 13900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13784,
											"end": 13906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13784,
											"end": 13906,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":126:7644  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xF9 0xCB 0x26 TIMESTAMP GASLIMIT BALANCE DUP15 SWAP12 SDIV SELFDESTRUCT MOD GT PUSH6 0xB15ECDF24941 SWAP5 0xCC LOG0 SWAP8 0x4B 0x49 0xB0 SWAP16 0xCD DUP3 0xB2 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "126:7518:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7644,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ff9cb264245318e9b05ff061165b15ecdf2494194cca0974b49b09fcd82b25464736f6c63430008070033",
									".code": [
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7644,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB CODECOPY CALLCODE EQ 0xE6 0x49 STATICCALL CALLVALUE 0xE1 0xF9 LOG1 MSTORE8 0xA7 PUSH27 0x55E38AB95B2663B7BD2C96A001666763C0164736F6C6343000807 STOP CALLER ",
							"sourceMap": "398:6301:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb39f214e649fa34e1f9a153a77a055e38ab95b2663b7bd2c96a001666763c0164736f6c63430008070033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Liquify.sol": {
				"Liquify": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "ChangedLiquidityPair",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "MaximumTransferTaxRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "MinAmountToLiquifyUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newRate",
									"type": "uint256"
								}
							],
							"name": "MinimumTransferTaxRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "RouterUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensSwapped",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReceived",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensIntoLiquidity",
									"type": "uint256"
								}
							],
							"name": "SwapAndLiquify",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "redistribution",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "dev",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "donation",
									"type": "uint16"
								}
							],
							"name": "UpdateTax",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAXIMUM_TAX",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_devWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_donationWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_excludedFromFeesAsReceiver",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_excludedFromFeesAsSender",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_liquidityPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_minAmountToLiquify",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_rewardWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donationRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "excludeFromAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "excludeFromFeesAsReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "excludeTransferFeeAsSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "includeForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "includeForFeesAsReciever",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_excludee",
									"type": "address"
								}
							],
							"name": "includeTransferFeeAsSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLiquifyActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maximumTransferTaxRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumTransferTaxRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reDistributionRate",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "setDevWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "setDonationWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"name": "setLiquidityPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMinAmountToLiquify",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "setRewardWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapAndLiquify",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_transferTaxRate",
									"type": "uint16"
								}
							],
							"name": "updateMaximumTransferTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_transferTaxRate",
									"type": "uint16"
								}
							],
							"name": "updateMinimumTransferTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								}
							],
							"name": "updateRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_redistribution",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_dev",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_donation",
									"type": "uint16"
								}
							],
							"name": "updateTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAXIMUM_TAX()": "d9324079",
							"_devWallet()": "11a63e17",
							"_donationWallet()": "a37f4ea9",
							"_excludedFromFeesAsReceiver(address)": "1ac818a1",
							"_excludedFromFeesAsSender(address)": "ae7e1d7a",
							"_liquidityPair()": "645830b4",
							"_minAmountToLiquify()": "982ceeb7",
							"_rewardWallet()": "a4f4a765",
							"_router()": "edae876f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"devRate()": "c9574975",
							"donationRate()": "0d38ffcd",
							"excludeFromAll(address)": "370f0a60",
							"excludeFromFeesAsReceiver(address)": "986d6142",
							"excludeTransferFeeAsSender(address)": "7897af86",
							"includeForAll(address)": "a17252a4",
							"includeForFeesAsReciever(address)": "53a54511",
							"includeTransferFeeAsSender(address)": "4ad1eb81",
							"increaseAllowance(address,uint256)": "39509351",
							"isLiquifyActive()": "005d1afc",
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"maximumTransferTaxRate()": "fafa4489",
							"minimumTransferTaxRate()": "01bbba4d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"reDistributionRate()": "03fcdbdf",
							"renounceOwnership()": "715018a6",
							"setDevWallet(address)": "1f53ac02",
							"setDonationWallet(address)": "5a96cdd7",
							"setLiquidityPair(address)": "9d93598e",
							"setMaintainer(address)": "13ea5d29",
							"setMinAmountToLiquify(uint256)": "8efd5e3b",
							"setRewardWallet(address)": "5958621e",
							"setTimelockEnabled()": "f4762fd6",
							"swapAndLiquify()": "b29ad50a",
							"symbol()": "95d89b41",
							"timelock(string)": "f98080c0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a",
							"updateMaximumTransferTaxRate(uint16)": "af10e03e",
							"updateMinimumTransferTaxRate(uint16)": "7d8e9615",
							"updateRouter(address)": "c851cc32",
							"updateTax(uint16,uint16,uint16)": "737dc9bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"ChangedLiquidityPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"MaximumTransferTaxRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MinAmountToLiquifyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"MinimumTransferTaxRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"redistribution\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"dev\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"donation\",\"type\":\"uint16\"}],\"name\":\"UpdateTax\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAXIMUM_TAX\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_donationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_excludedFromFeesAsReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_excludedFromFeesAsSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_minAmountToLiquify\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"excludeFromAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"excludeFromFeesAsReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"excludeTransferFeeAsSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"includeForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"includeForFeesAsReciever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_excludee\",\"type\":\"address\"}],\"name\":\"includeTransferFeeAsSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLiquifyActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumTransferTaxRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTransferTaxRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reDistributionRate\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setDonationWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"setLiquidityPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinAmountToLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setRewardWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_transferTaxRate\",\"type\":\"uint16\"}],\"name\":\"updateMaximumTransferTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_transferTaxRate\",\"type\":\"uint16\"}],\"name\":\"updateMinimumTransferTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"updateRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_redistribution\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_dev\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_donation\",\"type\":\"uint16\"}],\"name\":\"updateTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Liquify.sol\":\"Liquify\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/libraries/Liquify.sol\":{\"keccak256\":\"0xbeb5ac174e98cdd73cb2e836aed552ce0f7f95e4e538b03bc4a88a7ccfc9a52b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://56f2417ad6814d01d6ca38ddf1feb58f6a692ba24cadaace5fadbb1bcf3da146\",\"dweb:/ipfs/QmXKypNu3qxeFyhsraw2RR4C5sgY75r2BHzuLcAxcbzYfy\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 114,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 3215,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 3219,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "timelock",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 3224,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_maintainer",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 2152,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "minimumTransferTaxRate",
								"offset": 20,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 2155,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "maximumTransferTaxRate",
								"offset": 22,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 2161,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "reDistributionRate",
								"offset": 24,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 2164,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "devRate",
								"offset": 26,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 2167,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "donationRate",
								"offset": 28,
								"slot": "8",
								"type": "t_uint16"
							},
							{
								"astId": 2170,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "isLiquifyActive",
								"offset": 30,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 2173,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_minAmountToLiquify",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2176,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_devWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 2179,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_donationWallet",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 2182,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_rewardWallet",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 2184,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_liquidityPair",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 2187,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_router",
								"offset": 0,
								"slot": "14",
								"type": "t_contract(IUniswapV2Router02)2122"
							},
							{
								"astId": 2191,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_excludedFromFeesAsSender",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2195,
								"contract": "contracts/libraries/Liquify.sol:Liquify",
								"label": "_excludedFromFeesAsReceiver",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)2122": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TimeLock.sol": {
				"TimeLock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EnabledLock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousMaintainer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMaintainer",
									"type": "address"
								}
							],
							"name": "MaintainerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "functionName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "unlockedAt",
									"type": "uint256"
								}
							],
							"name": "UnlockedFunction",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isLockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "lockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMaintainer",
									"type": "address"
								}
							],
							"name": "setMaintainer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setTimelockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "timelock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fn",
									"type": "string"
								}
							],
							"name": "unlockFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isLockEnabled()": "a347511a",
							"lockFunction(string)": "9f531156",
							"maintainer()": "9850d32b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaintainer(address)": "13ea5d29",
							"setTimelockEnabled()": "f4762fd6",
							"timelock(string)": "f98080c0",
							"transferOwnership(address)": "f2fde38b",
							"unlockFunction(string)": "a607494a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"unlockedAt\",\"type\":\"uint256\"}],\"name\":\"UnlockedFunction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isLockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"lockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"setMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimelockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fn\",\"type\":\"string\"}],\"name\":\"unlockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TimeLock.sol\":\"TimeLock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"contracts/libraries/TimeLock.sol\":{\"keccak256\":\"0x0e85c574298d0aa5124db59c699e584dfdf0d02561ed999fccb2a5121e042c1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1b3f4a737f189f962a6129947275e704a91952b3fced2ab69e93ffad27b7ffd\",\"dweb:/ipfs/QmQfUZTBFBuUrYnR4sL4EJwxQu1Ra1vaJDASvNrLoF86jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3215,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "isLockEnabled",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 3219,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "timelock",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							{
								"astId": 3224,
								"contract": "contracts/libraries/TimeLock.sol:TimeLock",
								"label": "_maintainer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/TransferHelper.sol\":181:1276  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220806bb4d58832dbc4796a2a60119202fd60456cb3c5cb9f49e20b74e6c903bca364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806bb4d58832dbc4796a2a60119202fd60456cb3c5cb9f49e20b74e6c903bca364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH12 0xB4D58832DBC4796A2A601192 MUL REVERT PUSH1 0x45 PUSH13 0xB3C5CB9F49E20B74E6C903BCA3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806bb4d58832dbc4796a2a60119202fd60456cb3c5cb9f49e20b74e6c903bca364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH12 0xB4D58832DBC4796A2A601192 MUL REVERT PUSH1 0x45 PUSH13 0xB3C5CB9F49E20B74E6C903BCA3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "181:1095:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 181,
									"end": 1276,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220806bb4d58832dbc4796a2a60119202fd60456cb3c5cb9f49e20b74e6c903bca364736f6c63430008070033",
									".code": [
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 181,
											"end": 1276,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xca695d0e538e9ff25e60094195cb09927268cfcdebfc7454f0047113bd9f7fa0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe35341ea6086bfea59aff3dbf7211999b23ffb74822dcf43d37121c9bce0bfc\",\"dweb:/ipfs/QmSvn6N4774bkSbWVYNY73QRU4a5fjybe4VhLVEnM1B6Sm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1109
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1110,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1109,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1109
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 106,
								"nodeType": "StructuredDocumentation",
								"src": "58:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "ReentrancyGuard",
							"nameLocation": "827:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 109,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1622:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1597:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1597:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1637:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 112,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1669:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1644:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1644:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1680:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 114,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1704:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "1688:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1688:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1732:39:1",
										"statements": [
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 117,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1742:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 118,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "1752:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1742:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1742:22:1"
											}
										]
									},
									"id": 122,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:0:1"
									},
									"scope": 143,
									"src": "1718:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2170:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2259:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 127,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2270:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2259:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2280:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2251:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2251:63:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2389:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2399:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2389:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2389:18:1"
											},
											{
												"id": 136,
												"nodeType": "PlaceholderStatement",
												"src": "2418:1:1"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "2572:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2562:22:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "1777:364:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2155:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:1"
									},
									"src": "2146:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 144,
							"src": "809:1784:1",
							"usedErrors": []
						}
					],
					"src": "33:2561:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1109
						],
						"ERC20": [
							689
						],
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 768,
							"src": "58:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 793,
							"src": "81:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 1110,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 150,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1109,
										"src": "1339:7:2"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "1348:6:2"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 792,
										"src": "1356:14:2"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								792,
								767,
								1109
							],
							"name": "ERC20",
							"nameLocation": "1330:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1413:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1377:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1396:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1485:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1429:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1437:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1429:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 163,
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1456:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1448:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1467:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1519:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1503:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1553:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1538:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1579:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 689,
									"src": "1564:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1564:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1593:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 689,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2143:29:2",
										"statements": [
											{
												"expression": {
													"id": 195,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2160:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 194,
												"id": 196,
												"nodeType": "Return",
												"src": "2153:12:2"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2110:8:2"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2128:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2128:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:15:2"
									},
									"scope": 689,
									"src": "2074:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										785
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2356:31:2",
										"statements": [
											{
												"expression": {
													"id": 205,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 204,
												"id": 206,
												"nodeType": "Return",
												"src": "2366:14:2"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "2178:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2294:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2323:8:2"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2341:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2341:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:15:2"
									},
									"scope": 689,
									"src": "2285:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "3076:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3093:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 214,
												"id": 216,
												"nodeType": "Return",
												"src": "3086:9:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2393:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3020:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3051:8:2"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "3069:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 212,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3069:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:7:2"
									},
									"scope": 689,
									"src": "3011:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3232:36:2",
										"statements": [
											{
												"expression": {
													"id": 225,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3249:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 226,
												"nodeType": "Return",
												"src": "3242:19:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "3108:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3171:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:2"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3223:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:2"
									},
									"scope": 689,
									"src": "3162:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3409:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 237,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3426:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 239,
													"indexExpression": {
														"id": 238,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "3436:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3426:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 240,
												"nodeType": "Return",
												"src": "3419:25:2"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "3274:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3335:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:2"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3353:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3345:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3344:17:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3400:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:9:2"
									},
									"scope": 689,
									"src": "3326:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3746:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 254,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "3766:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3766:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3780:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3791:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "3756:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3756:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3756:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 252,
												"id": 261,
												"nodeType": "Return",
												"src": "3808:11:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3457:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3663:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:2"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3680:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3672:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3699:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3691:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:35:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3740:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:2"
									},
									"scope": 689,
									"src": "3654:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "3982:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 274,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3999:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4011:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3999:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 278,
													"indexExpression": {
														"id": 277,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "4018:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3999:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 279,
												"nodeType": "Return",
												"src": "3992:34:2"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3832:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3893:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 270,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3955:8:2"
									},
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3911:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3903:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3918:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:32:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "3973:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:9:2"
									},
									"scope": 689,
									"src": "3884:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										736
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4260:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 293,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "4279:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4279:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4293:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "4302:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "4270:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4270:39:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4326:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 300,
												"nodeType": "Return",
												"src": "4319:11:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4039:127:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4180:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4236:8:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4196:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4188:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4213:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4205:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:33:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4254:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:6:2"
									},
									"scope": 689,
									"src": "4171:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "4946:336:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4966:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4974:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4985:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "4956:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4956:36:2"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5011:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 349,
														"src": "5003:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 323,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5030:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 325,
														"indexExpression": {
															"id": 324,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5042:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5030:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 328,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 326,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5050:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5050:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5030:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 331,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "5081:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "5101:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5081:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5073:79:2"
											},
											{
												"id": 346,
												"nodeType": "UncheckedBlock",
												"src": "5162:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 338,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "5195:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 339,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "5203:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5203:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "5217:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 342,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "5236:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5217:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 337,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "5186:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5186:57:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "5186:57:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5271:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 314,
												"id": 348,
												"nodeType": "Return",
												"src": "5264:11:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4343:456:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4813:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 311,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4922:8:2"
									},
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4843:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4835:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4867:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4859:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4894:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4886:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:81:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4940:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4940:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:6:2"
									},
									"scope": 689,
									"src": "4804:478:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5771:118:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "5790:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "5804:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 364,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "5813:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 367,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 365,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "5825:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5825:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5813:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 369,
																"indexExpression": {
																	"id": 368,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "5839:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5813:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 370,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5850:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5813:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5781:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5781:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5781:80:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 359,
												"id": 375,
												"nodeType": "Return",
												"src": "5871:11:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "5288:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5686:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5712:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5704:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5729:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5721:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:37:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5765:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5765:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5764:6:2"
									},
									"scope": 689,
									"src": "5677:212:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "6475:306:2",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6493:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "6485:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6485:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 389,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "6512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 392,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 390,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1099,
																"src": "6524:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6512:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 394,
													"indexExpression": {
														"id": 393,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "6538:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6512:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6485:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "6564:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 398,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6584:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6564:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6601:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "6556:85:2"
											},
											{
												"id": 412,
												"nodeType": "UncheckedBlock",
												"src": "6651:102:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 404,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1099,
																		"src": "6684:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 406,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6698:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6707:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 408,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "6726:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6707:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 403,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "6675:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:67:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 411,
														"nodeType": "ExpressionStatement",
														"src": "6675:67:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 386,
												"id": 414,
												"nodeType": "Return",
												"src": "6763:11:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5895:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6385:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6411:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6403:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6428:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6420:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:42:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:6:2"
									},
									"scope": 689,
									"src": "6376:405:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "7372:596:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7408:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7400:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7400:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7400:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7390:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7412:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7382:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7382:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "7382:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "7470:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7491:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7483:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7483:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7483:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7470:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7495:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7462:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7462:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "7462:71:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7565:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7573:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7584:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "7544:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7544:47:2"
											},
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7610:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "7602:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 452,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7602:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"baseExpression": {
														"id": 454,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7626:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 456,
													"indexExpression": {
														"id": 455,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "7636:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7626:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7602:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7661:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 460,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "7678:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7661:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7686:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "7653:74:2"
											},
											{
												"id": 473,
												"nodeType": "UncheckedBlock",
												"src": "7737:77:2",
												"statements": [
													{
														"expression": {
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 465,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "7761:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 467,
																"indexExpression": {
																	"id": 466,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7771:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7761:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "7781:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 469,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7797:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7761:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 472,
														"nodeType": "ExpressionStatement",
														"src": "7761:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 474,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7823:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 476,
														"indexExpression": {
															"id": 475,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7833:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7823:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 477,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "7847:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "7823:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 481,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7878:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7886:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7897:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "7869:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "7864:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7935:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "7943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7954:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7915:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "7915:46:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "6787:463:2",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7264:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7291:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7283:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7283:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7315:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7307:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7342:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7334:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7273:81:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:2"
									},
									"scope": 689,
									"src": "7255:713:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8309:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "8327:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8346:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8338:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8338:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8338:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8327:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8350:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8319:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "8319:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8424:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8416:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8416:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8416:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8428:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8437:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "8395:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "8395:49:2"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 520,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "8455:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 521,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8471:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8455:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "8455:22:2"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 524,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "8487:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8487:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 527,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "8509:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8487:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "8487:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8547:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8539:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8539:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8551:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8560:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "8530:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8530:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "EmitStatement",
												"src": "8525:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8606:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8598:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 540,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8598:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8598:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8610:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8619:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8578:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8578:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8578:48:2"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "7974:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8253:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8267:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8259:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8284:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8276:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8258:33:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8309:0:2"
									},
									"scope": 689,
									"src": "8244:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "9018:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "9036:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9055:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9047:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 559,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9047:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9047:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9036:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9059:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9028:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "9028:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9127:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9144:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9136:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 569,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9136:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9136:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9148:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "9106:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "9106:49:2"
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9174:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "9166:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9166:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"baseExpression": {
														"id": 578,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "9191:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 580,
													"indexExpression": {
														"id": 579,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "9201:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9191:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9166:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "9227:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 584,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "9245:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9227:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9253:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9219:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9219:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "9219:71:2"
											},
											{
												"id": 597,
												"nodeType": "UncheckedBlock",
												"src": "9300:79:2",
												"statements": [
													{
														"expression": {
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 589,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "9324:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 591,
																"indexExpression": {
																	"id": 590,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "9334:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9324:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 592,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "9345:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 593,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "9362:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9345:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9324:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 596,
														"nodeType": "ExpressionStatement",
														"src": "9324:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "9388:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 599,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "9404:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9388:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "9388:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 603,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9435:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 604,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9456:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "9426:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "9421:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9494:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9511:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9503:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 613,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9503:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9503:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "9474:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9474:48:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8639:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8962:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8976:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "8968:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8968:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8993:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "8985:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8967:33:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9018:0:2"
									},
									"scope": 689,
									"src": "8953:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "10065:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "10083:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10092:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10092:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10092:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "10075:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "10161:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10180:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10172:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10172:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10172:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10161:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10184:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10153:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "10153:68:2"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 651,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10232:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 654,
															"indexExpression": {
																"id": 652,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "10244:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10232:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 655,
														"indexExpression": {
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "10251:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10232:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "10262:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10232:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "10232:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 660,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "10292:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "10299:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "10308:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10283:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10283:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "10278:37:2"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "9535:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9961:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9987:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "9979:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9979:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10010:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "10002:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10035:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "10027:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:78:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:2"
									},
									"scope": 689,
									"src": "9952:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "11025:2:2",
										"statements": []
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "10328:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10915:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10953:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10945:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10975:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10967:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10995:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "10987:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:72:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11025:0:2"
									},
									"scope": 689,
									"src": "10906:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "11733:2:2",
										"statements": []
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "11033:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11624:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11683:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11675:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11703:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "11695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:72:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11733:0:2"
									},
									"scope": 689,
									"src": "11615:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "1321:10416:2",
							"usedErrors": []
						}
					],
					"src": "33:11705:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "IERC20",
							"nameLocation": "139:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "269:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:3"
									},
									"scope": 767,
									"src": "223:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "380:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "420:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:3"
									},
									"scope": 767,
									"src": "361:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "667:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "686:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "720:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:3"
									},
									"scope": 767,
									"src": "649:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1020:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1035:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:3"
									},
									"scope": 767,
									"src": "1001:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1771:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1805:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:3"
									},
									"scope": 767,
									"src": "1737:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2157:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2149:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2181:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2173:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2200:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:81:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2239:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:6:3"
									},
									"scope": 767,
									"src": "2118:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 757,
									"name": "Transfer",
									"nameLocation": "2420:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2445:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2429:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2467:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2451:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:57:3"
									},
									"src": "2414:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 766,
									"name": "Approval",
									"nameLocation": "2651:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2676:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2660:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2683:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2716:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "2708:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:63:3"
									},
									"src": "2645:78:3"
								}
							],
							"scope": 768,
							"src": "129:2596:3",
							"usedErrors": []
						}
					],
					"src": "33:2693:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						]
					},
					"id": 793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 793,
							"sourceUnit": 768,
							"src": "58:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "228:6:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 792,
							"linearizedBaseContracts": [
								792,
								767
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "339:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:4"
									},
									"scope": 792,
									"src": "300:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "462:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:4"
									},
									"scope": 792,
									"src": "421:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "596:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:4"
									},
									"scope": 792,
									"src": "553:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 793,
							"src": "200:405:4",
							"usedErrors": []
						}
					],
					"src": "33:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1088
						]
					},
					"id": 1089,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 795,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1088,
							"linearizedBaseContracts": [
								1088
							],
							"name": "Address",
							"nameLocation": "134:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "784:311:5",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1012:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1026:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1046:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1034:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "1046:7:5",
														"valueSize": 1
													},
													{
														"declaration": 804,
														"isOffset": false,
														"isSlot": false,
														"src": "1026:4:5",
														"valueSize": 1
													}
												],
												"id": 806,
												"nodeType": "InlineAssembly",
												"src": "1003:61:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "1080:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1087:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1080:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 802,
												"id": 810,
												"nodeType": "Return",
												"src": "1073:15:5"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "738:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:5"
									},
									"scope": 1088,
									"src": "718:377:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "2083:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 823,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2109:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1088",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1088",
																				"typeString": "library Address"
																			}
																		],
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 821,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2101:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2101:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2101:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "2126:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2101:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2093:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2093:73:5"
											},
											{
												"assignments": [
													832,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2183:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "2178:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 831,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2178:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 839,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2226:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 833,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "2196:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2196:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 835,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "2218:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2196:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 841,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2247:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "2239:78:5"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "1101:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2021:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2047:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "2031:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2066:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "2058:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:43:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:5"
									},
									"scope": 1088,
									"src": "2012:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "3155:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 857,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3185:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "3193:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 856,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															883
														],
														"referencedDeclaration": 883,
														"src": "3172:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 855,
												"id": 861,
												"nodeType": "Return",
												"src": "3165:67:5"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "2330:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3075:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3096:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3088:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3117:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3104:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:35:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "3141:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3141:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:14:5"
									},
									"scope": 1088,
									"src": "3066:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "3608:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 876,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "3647:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3655:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3661:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 879,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3664:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 875,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															903,
															953
														],
														"referencedDeclaration": 953,
														"src": "3625:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 874,
												"id": 881,
												"nodeType": "Return",
												"src": "3618:59:5"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "3245:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3470:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3500:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3492:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3529:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3516:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3516:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3557:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3543:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3543:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:93:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "3594:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3594:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:14:5"
									},
									"scope": 1088,
									"src": "3461:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "4189:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "4228:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4236:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "4242:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4249:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 895,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															903,
															953
														],
														"referencedDeclaration": 953,
														"src": "4206:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4206:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 894,
												"id": 901,
												"nodeType": "Return",
												"src": "4199:94:5"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "3690:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4055:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4094:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "4086:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4123:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "4110:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 887,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4110:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "4137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:80:5"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "4175:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:14:5"
									},
									"scope": 1088,
									"src": "4046:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "4727:321:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 920,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4753:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1088",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1088",
																				"typeString": "library Address"
																			}
																		],
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4745:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 918,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4745:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4745:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 923,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "4770:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4745:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4777:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "4737:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 930,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "4847:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 929,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "4836:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4836:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4856:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "4828:60:5"
											},
											{
												"assignments": [
													936,
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4905:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "4900:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 935,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4900:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4927:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "4914:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 937,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4914:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4967:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 939,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "4941:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4941:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 941,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "4960:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4941:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4899:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5007:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 948,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "5016:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 949,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "5028:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 946,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "4989:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4989:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 916,
												"id": 951,
												"nodeType": "Return",
												"src": "4982:59:5"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "4306:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4557:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4596:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4588:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4625:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4612:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 907,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4612:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4647:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4639:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4676:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4662:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:116:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "4713:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4713:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:14:5"
									},
									"scope": 1088,
									"src": "4548:500:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "5325:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "5361:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "5369:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5375:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 963,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															970,
															1005
														],
														"referencedDeclaration": 1005,
														"src": "5342:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 962,
												"id": 968,
												"nodeType": "Return",
												"src": "5335:80:5"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "5054:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5234:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5261:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5253:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5269:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5269:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:35:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5311:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5311:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5310:14:5"
									},
									"scope": 1088,
									"src": "5225:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "5764:229:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 984,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "5793:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 983,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "5782:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5782:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5802:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5774:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5774:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "5774:67:5"
											},
											{
												"assignments": [
													990,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5858:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "5853:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5880:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "5867:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 991,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "5912:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 993,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "5894:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5894:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5894:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5952:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1000,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "5961:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1001,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5973:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 998,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "5934:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 981,
												"id": 1003,
												"nodeType": "Return",
												"src": "5927:59:5"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "5428:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5615:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5651:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "5643:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5680:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "5667:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5667:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5708:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "5694:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5694:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5633:93:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "5750:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5750:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:14:5"
									},
									"scope": 1088,
									"src": "5606:387:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "6269:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6307:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6315:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6321:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1015,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1022,
															1057
														],
														"referencedDeclaration": 1057,
														"src": "6286:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1020,
												"nodeType": "Return",
												"src": "6279:84:5"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "5999:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6181:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6210:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6202:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6231:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6218:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6218:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6201:35:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "6255:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6255:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6254:14:5"
									},
									"scope": 1088,
									"src": "6172:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "6711:233:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1036,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "6740:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1035,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "6729:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6729:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6749:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "6721:69:5"
											},
											{
												"assignments": [
													1042,
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6807:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "6802:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1041,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6802:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6829:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "6816:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1043,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6816:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"arguments": [
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "6863:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1045,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "6843:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6843:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1051,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1052,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "6912:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1053,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6924:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1050,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "6885:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6885:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "6878:59:5"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "6376:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6565:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6595:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6632:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6619:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6619:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6660:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6646:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6646:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6585:93:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "6697:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6697:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6696:14:5"
									},
									"scope": 1088,
									"src": "6556:388:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "7110:532:5",
										"statements": [
											{
												"condition": {
													"id": 1068,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1059,
													"src": "7124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "7181:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1072,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "7265:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7265:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7285:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7265:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1082,
																"nodeType": "Block",
																"src": "7573:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1079,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "7598:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1078,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7591:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7591:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1081,
																		"nodeType": "ExpressionStatement",
																		"src": "7591:20:5"
																	}
																]
															},
															"id": 1083,
															"nodeType": "IfStatement",
															"src": "7261:365:5",
															"trueBody": {
																"id": 1077,
																"nodeType": "Block",
																"src": "7288:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7408:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7430:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7459:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7453:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7453:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7434:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7502:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7506:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7498:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7519:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7491:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7491:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7491:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1061,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7459:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1061,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7506:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1076,
																		"nodeType": "InlineAssembly",
																		"src": "7399:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1085,
												"nodeType": "IfStatement",
												"src": "7120:516:5",
												"trueBody": {
													"id": 1071,
													"nodeType": "Block",
													"src": "7133:42:5",
													"statements": [
														{
															"expression": {
																"id": 1069,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "7154:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1067,
															"id": 1070,
															"nodeType": "Return",
															"src": "7147:17:5"
														}
													]
												}
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "6959:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6991:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "6986:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6986:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7021:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "7008:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7008:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7055:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "7041:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7041:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:97:5"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "7096:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7096:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:14:5"
									},
									"scope": 1088,
									"src": "6950:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1089,
							"src": "126:7518:5",
							"usedErrors": []
						}
					],
					"src": "33:7612:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1109
						]
					},
					"id": 1110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1090,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1109,
							"linearizedBaseContracts": [
								1109
							],
							"name": "Context",
							"nameLocation": "572:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "648:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1095,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1097,
												"nodeType": "Return",
												"src": "658:17:6"
											}
										]
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "639:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:6"
									},
									"scope": 1109,
									"src": "586:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "755:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1104,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1106,
												"nodeType": "Return",
												"src": "765:15:6"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:6"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "739:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:6"
									},
									"scope": 1109,
									"src": "688:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1110,
							"src": "554:235:6",
							"usedErrors": []
						}
					],
					"src": "33:757:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1421
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1112,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421
							],
							"name": "SafeMath",
							"nameLocation": "406:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "633:140:7",
										"statements": [
											{
												"id": 1142,
												"nodeType": "UncheckedBlock",
												"src": "643:124:7",
												"statements": [
													{
														"assignments": [
															1125
														],
														"declarations": [
															{
																"constant": false,
																"id": 1125,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1142,
																"src": "667:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1129,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "679:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "702:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1131,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "706:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1137,
														"nodeType": "IfStatement",
														"src": "698:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1123,
															"id": 1136,
															"nodeType": "Return",
															"src": "709:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1139,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "754:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1140,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1123,
														"id": 1141,
														"nodeType": "Return",
														"src": "740:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "573:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "584:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:7"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "618:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "624:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:7"
									},
									"scope": 1421,
									"src": "557:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "995:113:7",
										"statements": [
											{
												"id": 1170,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "1033:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1157,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "1037:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1163,
														"nodeType": "IfStatement",
														"src": "1029:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1162,
															"nodeType": "Return",
															"src": "1040:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "1085:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1166,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "1089:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1168,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1155,
														"id": 1169,
														"nodeType": "Return",
														"src": "1071:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:7",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "935:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "946:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:7"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "980:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "986:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:7"
									},
									"scope": 1421,
									"src": "919:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "1332:417:7",
										"statements": [
											{
												"id": 1212,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "1600:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1191,
														"nodeType": "IfStatement",
														"src": "1596:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1183,
															"id": 1190,
															"nodeType": "Return",
															"src": "1608:16:7"
														}
													},
													{
														"assignments": [
															1193
														],
														"declarations": [
															{
																"constant": false,
																"id": 1193,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1212,
																"src": "1638:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1192,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1197,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "1650:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1195,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1654:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1198,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "1673:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1199,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "1677:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1201,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1682:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1207,
														"nodeType": "IfStatement",
														"src": "1669:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1183,
															"id": 1206,
															"nodeType": "Return",
															"src": "1685:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1209,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "1730:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1210,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1183,
														"id": 1211,
														"nodeType": "Return",
														"src": "1716:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1272:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1283:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1317:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1323:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:7"
									},
									"scope": 1421,
									"src": "1256:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "1974:114:7",
										"statements": [
											{
												"id": 1240,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "2012:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1233,
														"nodeType": "IfStatement",
														"src": "2008:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1225,
															"id": 1232,
															"nodeType": "Return",
															"src": "2020:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1235,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "2065:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1236,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "2069:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1238,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1225,
														"id": 1239,
														"nodeType": "Return",
														"src": "2051:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1914:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1925:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:7"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1959:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1965:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:7"
									},
									"scope": 1421,
									"src": "1898:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "2323:114:7",
										"statements": [
											{
												"id": 1268,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "2361:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1261,
														"nodeType": "IfStatement",
														"src": "2357:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1259,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1253,
															"id": 1260,
															"nodeType": "Return",
															"src": "2369:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "2414:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1264,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "2418:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1266,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1253,
														"id": 1267,
														"nodeType": "Return",
														"src": "2400:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2263:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2274:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2308:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2314:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:7"
									},
									"scope": 1421,
									"src": "2247:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2739:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1280,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "2756:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1281,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "2760:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1283,
												"nodeType": "Return",
												"src": "2749:12:7"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2685:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2696:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:7"
									},
									"scope": 1421,
									"src": "2672:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "3106:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1295,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3123:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1296,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "3127:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1298,
												"nodeType": "Return",
												"src": "3116:12:7"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "3052:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "3063:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "3097:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:7"
									},
									"scope": 1421,
									"src": "3039:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "3449:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "3466:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1311,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "3470:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1313,
												"nodeType": "Return",
												"src": "3459:12:7"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3395:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3406:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3440:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:7"
									},
									"scope": 1421,
									"src": "3382:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3834:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1325,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3851:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1326,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "3855:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1328,
												"nodeType": "Return",
												"src": "3844:12:7"
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3780:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3791:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:7"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3825:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:7"
									},
									"scope": 1421,
									"src": "3767:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "4383:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "4400:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1341,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "4404:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1343,
												"nodeType": "Return",
												"src": "4393:12:7"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "4329:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "4340:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:7"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "4374:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:7"
									},
									"scope": 1421,
									"src": "4316:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "5001:106:7",
										"statements": [
											{
												"id": 1368,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1358,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "5043:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1359,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "5048:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1361,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5051:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1357,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1363,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1364,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "5085:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1365,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "5089:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1356,
														"id": 1367,
														"nodeType": "Return",
														"src": "5078:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "4898:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "4917:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "4936:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:7"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "4992:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:7"
									},
									"scope": 1421,
									"src": "4876:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "5716:105:7",
										"statements": [
											{
												"id": 1393,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1383,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "5758:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1386,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "5765:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1382,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1388,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "5799:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "5803:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1381,
														"id": 1392,
														"nodeType": "Return",
														"src": "5792:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5613:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5632:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5651:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:7"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "5707:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:7"
									},
									"scope": 1421,
									"src": "5591:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "6592:105:7",
										"statements": [
											{
												"id": 1418,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1408,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "6634:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1411,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "6641:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1407,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1413,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "6675:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "6679:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1406,
														"id": 1417,
														"nodeType": "Return",
														"src": "6668:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6508:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6527:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6583:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:7"
									},
									"scope": 1421,
									"src": "6467:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1422,
							"src": "398:6301:7",
							"usedErrors": []
						}
					],
					"src": "33:6667:7"
				},
				"id": 7
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1484
						]
					},
					"id": 1485,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1484,
							"linearizedBaseContracts": [
								1484
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "36:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1433,
									"name": "PairCreated",
									"nameLocation": "66:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "94:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "78:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "118:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "102:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "134:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "126:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "140:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77:68:8"
									},
									"src": "60:86:8"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "161:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:8"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "192:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:8"
									},
									"scope": 1484,
									"src": "152:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "215:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:8"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "252:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:8"
									},
									"scope": 1484,
									"src": "206:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "276:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "292:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "284:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "308:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "300:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:32:8"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "347:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "339:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:14:8"
									},
									"scope": 1484,
									"src": "267:86:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "367:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:6:8"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "413:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "405:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:14:8"
									},
									"scope": 1484,
									"src": "358:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "433:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "473:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:6:8"
									},
									"scope": 1484,
									"src": "424:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "494:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "513:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "505:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "529:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "521:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:32:8"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "563:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "555:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:14:8"
									},
									"scope": 1484,
									"src": "485:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "584:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "593:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:8"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:8"
									},
									"scope": 1484,
									"src": "575:36:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "625:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "640:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:8"
									},
									"scope": 1484,
									"src": "616:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1485,
							"src": "26:634:8",
							"usedErrors": []
						}
					],
					"src": "0:661:8"
				},
				"id": 8
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1726
						]
					},
					"id": 1727,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1486,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "36:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1494,
									"name": "Approval",
									"nameLocation": "63:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "88:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "72:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "111:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "95:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "125:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "120:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:9"
									},
									"src": "57:75:9"
								},
								{
									"anonymous": false,
									"id": 1502,
									"name": "Transfer",
									"nameLocation": "143:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "168:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "152:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "190:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "174:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "199:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "194:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:9"
									},
									"src": "137:69:9"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "221:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:9"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "251:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:9"
									},
									"scope": 1726,
									"src": "212:54:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "280:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:9"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "312:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:9"
									},
									"scope": 1726,
									"src": "271:56:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "341:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:9"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "375:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1514,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:9"
									},
									"scope": 1726,
									"src": "332:50:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "396:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:9"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "433:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:9"
									},
									"scope": 1726,
									"src": "387:52:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "453:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "471:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "463:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:9"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "501:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:9"
									},
									"scope": 1726,
									"src": "444:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "521:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "539:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "531:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "554:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "546:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:9"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "586:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:9"
									},
									"scope": 1726,
									"src": "512:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "607:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "623:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "615:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "637:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "632:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "662:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:9"
									},
									"scope": 1726,
									"src": "598:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "682:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "699:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "691:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "703:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "733:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:9"
									},
									"scope": 1726,
									"src": "673:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "753:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "774:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "766:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "788:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "780:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "797:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "792:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:9"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "822:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:9"
									},
									"scope": 1726,
									"src": "744:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "843:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "885:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:9"
									},
									"scope": 1726,
									"src": "834:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "908:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "949:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1574,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:9"
									},
									"scope": 1726,
									"src": "899:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "972:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "987:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "979:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:9"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1017:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:9"
									},
									"scope": 1726,
									"src": "963:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1038:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1053:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1045:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1068:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1060:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1082:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1077:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1094:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1089:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1110:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1104:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1593,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1121:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1113:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1132:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "1124:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:9"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:9"
									},
									"scope": 1726,
									"src": "1029:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1609,
									"name": "Mint",
									"nameLocation": "1156:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1177:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1161:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1190:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1185:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1204:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1199:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:52:9"
									},
									"src": "1150:63:9"
								},
								{
									"anonymous": false,
									"id": 1619,
									"name": "Burn",
									"nameLocation": "1224:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1229:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1258:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1253:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1272:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1267:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1297:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1281:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:72:9"
									},
									"src": "1218:83:9"
								},
								{
									"anonymous": false,
									"id": 1633,
									"name": "Swap",
									"nameLocation": "1312:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1342:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1326:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1363:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1358:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1387:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1382:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1411:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1406:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1436:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1472:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1456:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:164:9"
									},
									"src": "1306:175:9"
								},
								{
									"anonymous": false,
									"id": 1639,
									"name": "Sync",
									"nameLocation": "1492:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1505:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "1497:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1634,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1523:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "1515:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1636,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:36:9"
									},
									"src": "1486:47:9"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1548:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1591:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:9"
									},
									"scope": 1726,
									"src": "1539:58:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1611:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:9"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "1644:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:9"
									},
									"scope": 1726,
									"src": "1602:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1667:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:9"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "1699:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:9"
									},
									"scope": 1726,
									"src": "1658:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1722:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:9"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "1754:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:9:9"
									},
									"scope": 1726,
									"src": "1713:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1777:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:9"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1822:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1814:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1661,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1840:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1832:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1663,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1857:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1850:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1665,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:63:9"
									},
									"scope": 1726,
									"src": "1768:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1891:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1937:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:9"
									},
									"scope": 1726,
									"src": "1882:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1957:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:9"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "2003:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:6:9"
									},
									"scope": 1726,
									"src": "1948:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2023:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "2054:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2054:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:6:9"
									},
									"scope": 1726,
									"src": "2014:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2075:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2088:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2080:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:12:9"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2115:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2110:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:9"
									},
									"scope": 1726,
									"src": "2066:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2140:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2153:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "2145:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:12:9"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2180:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "2175:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2194:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "2189:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:28:9"
									},
									"scope": 1726,
									"src": "2131:72:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2217:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2227:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2222:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2244:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2239:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2264:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2256:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2283:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2268:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2268:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:67:9"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:9"
									},
									"scope": 1726,
									"src": "2208:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2312:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2325:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "2317:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:12:9"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:9"
									},
									"scope": 1726,
									"src": "2303:35:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2352:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:9"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:9"
									},
									"scope": 1726,
									"src": "2343:25:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2383:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2394:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "2403:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:18:9"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:9"
									},
									"scope": 1726,
									"src": "2374:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1727,
							"src": "26:2397:9",
							"usedErrors": []
						}
					],
					"src": "0:2424:9"
				},
				"id": 9
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2034
						]
					},
					"id": 2035,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1728,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2034,
							"linearizedBaseContracts": [
								2034
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:10"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "103:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:10"
									},
									"scope": 2034,
									"src": "61:51:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:10"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "156:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:10"
									},
									"scope": 2034,
									"src": "117:48:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "202:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "226:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "250:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "279:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "308:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "333:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "358:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "378:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:10"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "416:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "430:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "444:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:10"
									},
									"scope": 2034,
									"src": "171:289:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "499:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "522:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "555:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "584:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "611:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "631:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:10"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "677:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "695:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "711:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:10"
									},
									"scope": 2034,
									"src": "465:262:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "766:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "790:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "814:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "838:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "863:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "888:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "908:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:10"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "946:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "960:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:10"
									},
									"scope": 2034,
									"src": "732:242:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1016:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1039:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1063:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1092:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1119:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1139:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:10"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1177:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1195:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:10"
									},
									"scope": 2034,
									"src": "979:232:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1260:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1284:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1308:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1332:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1357:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1382:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1402:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1425:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1442:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1841,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1451:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1462:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1845,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:10"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1496:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "1510:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:10"
									},
									"scope": 2034,
									"src": "1216:308:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1576:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1599:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1623:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1652:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1679:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1699:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1722:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1739:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1868,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1748:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1759:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:10"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1793:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1811:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:10"
									},
									"scope": 2034,
									"src": "1529:298:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "1875:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "1898:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "1925:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1885,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1886,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "1958:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "1978:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:10"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "2016:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1893,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1894,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:10"
									},
									"scope": 2034,
									"src": "1832:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2087:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2111:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2137:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1902,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1903,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2170:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2190:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:10"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2228:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1910,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1911,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:10"
									},
									"scope": 2034,
									"src": "2044:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2287:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2306:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1917,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1918,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2331:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:10"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "2408:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1925,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1926,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:10"
									},
									"scope": 2034,
									"src": "2256:175:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2467:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2483:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2501:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1934,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1935,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2526:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2538:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:10"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "2587:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1942,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:10"
									},
									"scope": 2034,
									"src": "2436:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2646:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2661:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2680:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1951,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1952,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2705:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2717:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:10"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2766:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1959,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1960,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:10"
									},
									"scope": 2034,
									"src": "2615:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2825:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1966,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1967,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2866:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2878:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:10"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2943:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1974,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1975,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:10"
									},
									"scope": 2034,
									"src": "2794:172:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2987:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3001:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3016:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:10"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "3054:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:10"
									},
									"scope": 2034,
									"src": "2972:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3095:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3110:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3126:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:10"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "3166:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:10"
									},
									"scope": 2034,
									"src": "3073:109:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3208:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3224:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3240:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:10"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "3280:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:10"
									},
									"scope": 2034,
									"src": "3187:108:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3323:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3338:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2014,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2015,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:10"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "3386:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2018,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2019,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:10"
									},
									"scope": 2034,
									"src": "3300:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "3436:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "3452:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2025,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2026,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:10"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "3500:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2029,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2030,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:10"
									},
									"scope": 2034,
									"src": "3414:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2035,
							"src": "26:3499:10",
							"usedErrors": []
						}
					],
					"src": "0:3526:10"
				},
				"id": 10
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2034
						],
						"IUniswapV2Router02": [
							2122
						]
					},
					"id": 2123,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2036,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:11"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2123,
							"sourceUnit": 2035,
							"src": "26:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2038,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2034,
										"src": "94:18:11"
									},
									"id": 2039,
									"nodeType": "InheritanceSpecifier",
									"src": "94:18:11"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2122,
							"linearizedBaseContracts": [
								2122,
								2034
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "72:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "128:47:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "193:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "185:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "213:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "208:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "237:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "232:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "266:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "261:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "296:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "288:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "313:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "308:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:152:11"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "351:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "346:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:16:11"
									},
									"scope": 2122,
									"src": "119:243:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "376:57:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "451:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "443:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "471:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "466:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "495:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "490:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "524:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "519:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "554:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "546:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "571:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "566:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "594:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "589:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "612:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "606:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2071,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "606:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "623:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "615:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2073,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "634:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "626:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:208:11"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "665:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "660:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:16:11"
									},
									"scope": 2122,
									"src": "367:309:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "691:53:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "759:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "754:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "782:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "777:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "823:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "804:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2086,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "804:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2087,
													"nodeType": "ArrayTypeName",
													"src": "804:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "845:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "837:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "862:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "857:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:132:11"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:11"
									},
									"scope": 2122,
									"src": "682:204:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "900:50:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "965:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "960:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1006:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "987:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2098,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "987:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2099,
													"nodeType": "ArrayTypeName",
													"src": "987:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "1020:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1045:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "1040:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:109:11"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:11"
									},
									"scope": 2122,
									"src": "891:186:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1091:50:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1156:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1151:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1151:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1179:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1174:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1220:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1201:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2112,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2113,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1242:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1234:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1259:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1254:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1254:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:132:11"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:11"
									},
									"scope": 2122,
									"src": "1082:201:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2123,
							"src": "62:1223:11",
							"usedErrors": []
						}
					],
					"src": "0:1286:11"
				},
				"id": 11
			},
			"contracts/libraries/Liquify.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Liquify.sol",
					"exportedSymbols": {
						"Address": [
							1088
						],
						"Context": [
							1109
						],
						"ERC20": [
							689
						],
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						],
						"IUniswapV2Factory": [
							1484
						],
						"IUniswapV2Pair": [
							1726
						],
						"IUniswapV2Router01": [
							2034
						],
						"IUniswapV2Router02": [
							2122
						],
						"Liquify": [
							3200
						],
						"Ownable": [
							103
						],
						"ReentrancyGuard": [
							143
						],
						"SafeMath": [
							1421
						],
						"TimeLock": [
							3402
						],
						"TransferHelper": [
							3519
						]
					},
					"id": 3201,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2124,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 690,
							"src": "61:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 768,
							"src": "117:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 1089,
							"src": "174:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 144,
							"src": "226:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 1422,
							"src": "289:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 2130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 2123,
							"src": "347:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"id": 2131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 1727,
							"src": "423:66:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"id": 2132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 1485,
							"src": "490:69:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 104,
							"src": "560:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TransferHelper.sol",
							"file": "./TransferHelper.sol",
							"id": 2134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 3520,
							"src": "613:30:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/TimeLock.sol",
							"file": "./TimeLock.sol",
							"id": 2135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3201,
							"sourceUnit": 3403,
							"src": "644:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2136,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "699:5:12"
									},
									"id": 2137,
									"nodeType": "InheritanceSpecifier",
									"src": "699:5:12"
								},
								{
									"baseName": {
										"id": 2138,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 143,
										"src": "706:15:12"
									},
									"id": 2139,
									"nodeType": "InheritanceSpecifier",
									"src": "706:15:12"
								},
								{
									"baseName": {
										"id": 2140,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "723:7:12"
									},
									"id": 2141,
									"nodeType": "InheritanceSpecifier",
									"src": "723:7:12"
								},
								{
									"baseName": {
										"id": 2142,
										"name": "TimeLock",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3402,
										"src": "732:8:12"
									},
									"id": 2143,
									"nodeType": "InheritanceSpecifier",
									"src": "732:8:12"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 3200,
							"linearizedBaseContracts": [
								3200,
								3402,
								103,
								143,
								689,
								792,
								767,
								1109
							],
							"name": "Liquify",
							"nameLocation": "688:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2146,
									"libraryName": {
										"id": 2144,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1088,
										"src": "753:7:12"
									},
									"nodeType": "UsingForDirective",
									"src": "747:26:12",
									"typeName": {
										"id": 2145,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "765:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 2149,
									"libraryName": {
										"id": 2147,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "784:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "778:27:12",
									"typeName": {
										"id": 2148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "797:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "01bbba4d",
									"id": 2152,
									"mutability": "mutable",
									"name": "minimumTransferTaxRate",
									"nameLocation": "1218:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1204:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2150,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1204:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 2151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1243:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fafa4489",
									"id": 2155,
									"mutability": "mutable",
									"name": "maximumTransferTaxRate",
									"nameLocation": "1266:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1252:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2153,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1252:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 2154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1291:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d9324079",
									"id": 2158,
									"mutability": "constant",
									"name": "MAXIMUM_TAX",
									"nameLocation": "1324:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1301:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2156,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1301:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 2157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1338:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03fcdbdf",
									"id": 2161,
									"mutability": "mutable",
									"name": "reDistributionRate",
									"nameLocation": "1367:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1353:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2159,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1353:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 2160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1388:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9574975",
									"id": 2164,
									"mutability": "mutable",
									"name": "devRate",
									"nameLocation": "1410:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1396:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2162,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1420:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d38ffcd",
									"id": 2167,
									"mutability": "mutable",
									"name": "donationRate",
									"nameLocation": "1442:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1428:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2165,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1428:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1457:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "005d1afc",
									"id": 2170,
									"mutability": "mutable",
									"name": "isLiquifyActive",
									"nameLocation": "1482:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1470:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2168,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1470:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1500:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "982ceeb7",
									"id": 2173,
									"mutability": "mutable",
									"name": "_minAmountToLiquify",
									"nameLocation": "1531:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1516:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1516:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 2172,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1553:12:12",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11a63e17",
									"id": 2176,
									"mutability": "mutable",
									"name": "_devWallet",
									"nameLocation": "1591:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1576:70:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2174,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1576:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832454139434130636138303433353735663231383943464639383937423537356230633765383537",
										"id": 2175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1604:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2EA9CA0ca8043575f2189CFF9897B575b0c7e857"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a37f4ea9",
									"id": 2179,
									"mutability": "mutable",
									"name": "_donationWallet",
									"nameLocation": "1715:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1700:75:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2177,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1700:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841374330384145644365386361444333624662363232626437423635313939336431636432346534",
										"id": 2178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1733:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA7C08AEdCe8caDC3bFb622bd7B651993d1cd24e4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4f4a765",
									"id": 2182,
									"mutability": "mutable",
									"name": "_rewardWallet",
									"nameLocation": "1840:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1825:73:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2180,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1825:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832454139434130636138303433353735663231383943464639383937423537356230633765383537",
										"id": 2181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1856:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2EA9CA0ca8043575f2189CFF9897B575b0c7e857"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "645830b4",
									"id": 2184,
									"mutability": "mutable",
									"name": "_liquidityPair",
									"nameLocation": "1971:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1956:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2183,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edae876f",
									"id": 2187,
									"mutability": "mutable",
									"name": "_router",
									"nameLocation": "2022:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "1996:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 2186,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2185,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2122,
											"src": "1996:18:12"
										},
										"referencedDeclaration": 2122,
										"src": "1996:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ae7e1d7a",
									"id": 2191,
									"mutability": "mutable",
									"name": "_excludedFromFeesAsSender",
									"nameLocation": "2072:25:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "2040:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2190,
										"keyType": {
											"id": 2188,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2048:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2040:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2189,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2059:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ac818a1",
									"id": 2195,
									"mutability": "mutable",
									"name": "_excludedFromFeesAsReceiver",
									"nameLocation": "2135:27:12",
									"nodeType": "VariableDeclaration",
									"scope": 3200,
									"src": "2103:59:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2194,
										"keyType": {
											"id": 2192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2193,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2122:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2203,
									"name": "MinimumTransferTaxRateUpdated",
									"nameLocation": "2492:29:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2538:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "2522:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousRate",
												"nameLocation": "2554:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "2546:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "2576:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "2568:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:63:12"
									},
									"src": "2486:99:12"
								},
								{
									"anonymous": false,
									"id": 2211,
									"name": "MaximumTransferTaxRateUpdated",
									"nameLocation": "2596:29:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2642:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2626:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousRate",
												"nameLocation": "2658:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2650:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRate",
												"nameLocation": "2680:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2672:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:63:12"
									},
									"src": "2590:99:12"
								},
								{
									"anonymous": false,
									"id": 2219,
									"name": "UpdateTax",
									"nameLocation": "2700:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"indexed": false,
												"mutability": "mutable",
												"name": "redistribution",
												"nameLocation": "2717:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "2710:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2212,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2710:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": false,
												"mutability": "mutable",
												"name": "dev",
												"nameLocation": "2740:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "2733:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2214,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2733:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"indexed": false,
												"mutability": "mutable",
												"name": "donation",
												"nameLocation": "2752:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "2745:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2216,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2745:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:52:12"
									},
									"src": "2694:68:12"
								},
								{
									"anonymous": false,
									"id": 2227,
									"name": "MinAmountToLiquifyUpdated",
									"nameLocation": "2773:25:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2815:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "2799:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAmount",
												"nameLocation": "2831:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "2823:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "2855:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "2847:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:67:12"
									},
									"src": "2767:99:12"
								},
								{
									"anonymous": false,
									"id": 2235,
									"name": "RouterUpdated",
									"nameLocation": "2877:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "2907:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2891:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": true,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "2931:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2915:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "2955:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "2939:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:70:12"
									},
									"src": "2871:90:12"
								},
								{
									"anonymous": false,
									"id": 2241,
									"name": "ChangedLiquidityPair",
									"nameLocation": "2972:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "3009:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "2993:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2993:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "3033:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3017:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3017:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2992:46:12"
									},
									"src": "2966:73:12"
								},
								{
									"anonymous": false,
									"id": 2249,
									"name": "SwapAndLiquify",
									"nameLocation": "3050:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensSwapped",
												"nameLocation": "3073:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3065:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReceived",
												"nameLocation": "3096:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3088:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensIntoLiquidity",
												"nameLocation": "3117:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "3109:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:73:12"
									},
									"src": "3044:94:12"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "3480:336:12",
										"statements": [
											{
												"assignments": [
													2252
												],
												"declarations": [
													{
														"constant": false,
														"id": 2252,
														"mutability": "mutable",
														"name": "_minimumTransferTaxRate",
														"nameLocation": "3497:23:12",
														"nodeType": "VariableDeclaration",
														"scope": 2276,
														"src": "3490:30:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2251,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3490:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2254,
												"initialValue": {
													"id": 2253,
													"name": "minimumTransferTaxRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2152,
													"src": "3523:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3490:55:12"
											},
											{
												"assignments": [
													2256
												],
												"declarations": [
													{
														"constant": false,
														"id": 2256,
														"mutability": "mutable",
														"name": "_maximumTransferTaxRate",
														"nameLocation": "3562:23:12",
														"nodeType": "VariableDeclaration",
														"scope": 2276,
														"src": "3555:30:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2255,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3555:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"initialValue": {
													"id": 2257,
													"name": "maximumTransferTaxRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2155,
													"src": "3588:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3555:55:12"
											},
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2259,
														"name": "minimumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "3620:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3645:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3620:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "3620:26:12"
											},
											{
												"expression": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2263,
														"name": "maximumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "3656:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3681:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3656:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "3656:26:12"
											},
											{
												"id": 2267,
												"nodeType": "PlaceholderStatement",
												"src": "3692:1:12"
											},
											{
												"expression": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2268,
														"name": "minimumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "3703:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2269,
														"name": "_minimumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "3728:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3703:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "3703:48:12"
											},
											{
												"expression": {
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2272,
														"name": "maximumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "3761:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2273,
														"name": "_maximumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "3786:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3761:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "3761:48:12"
											}
										]
									},
									"id": 2277,
									"name": "taxFree",
									"nameLocation": "3472:7:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3480:0:12"
									},
									"src": "3463:353:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "3840:150:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2281,
															"name": "_devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3865:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2280,
														"name": "excludeFromAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "3850:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3850:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "3850:26:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2285,
															"name": "_donationWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "3901:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2284,
														"name": "excludeFromAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "3886:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3886:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "3886:31:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307839416336344363366534343135313434433435354244384534383337466561353536303365356333",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3940:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2288,
														"name": "updateRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2690,
														"src": "3927:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3927:56:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "3927:56:12"
											}
										]
									},
									"id": 2293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:2:12"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3840:0:12"
									},
									"scope": 3200,
									"src": "3826:164:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "4410:493:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2304,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "4428:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4447:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2305,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4439:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4439:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4428:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756966793a3a7365744c6971756964697479506169723a204c697175696469747920706169722063616e277420636f6e7461696e207a65726f2061646472657373",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4451:70:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbfb59b9eb1e6707279eac0ff8bea1f6ec738859cb2ce976b372ca7a825227f0",
																"typeString": "literal_string \"Liquify::setLiquidityPair: Liquidity pair can't contain zero address\""
															},
															"value": "Liquify::setLiquidityPair: Liquidity pair can't contain zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbfb59b9eb1e6707279eac0ff8bea1f6ec738859cb2ce976b372ca7a825227f0",
																"typeString": "literal_string \"Liquify::setLiquidityPair: Liquidity pair can't contain zero address\""
															}
														],
														"id": 2303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4420:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:102:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "4420:102:12"
											},
											{
												"expression": {
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2313,
														"name": "_liquidityPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "4532:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2322,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4602:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	],
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4594:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4594:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4594:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2324,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "4609:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2315,
																				"name": "_router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "4567:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1733,
																			"src": "4567:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4567:17:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2314,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "4549:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1484_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4549:36:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$1484",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1452,
															"src": "4549:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) view external returns (address)"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4549:68:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4532:85:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2327,
												"nodeType": "ExpressionStatement",
												"src": "4532:85:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2328,
														"name": "_liquidityPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "4630:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4656:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4648:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2329,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4648:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4648:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4630:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2350,
												"nodeType": "IfStatement",
												"src": "4627:146:12",
												"trueBody": {
													"id": 2349,
													"nodeType": "Block",
													"src": "4660:113:12",
													"statements": [
														{
															"expression": {
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2334,
																	"name": "_liquidityPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2184,
																	"src": "4674:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2343,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4747:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Liquify_$3200",
																						"typeString": "contract Liquify"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Liquify_$3200",
																						"typeString": "contract Liquify"
																					}
																				],
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4739:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2341,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4739:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4739:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2345,
																			"name": "_tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "4754:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2336,
																							"name": "_router",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2187,
																							"src": "4709:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																								"typeString": "contract IUniswapV2Router02"
																							}
																						},
																						"id": 2337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "factory",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1733,
																						"src": "4709:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																							"typeString": "function () pure external returns (address)"
																						}
																					},
																					"id": 2338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4709:17:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2335,
																				"name": "IUniswapV2Factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1484,
																				"src": "4691:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1484_$",
																					"typeString": "type(contract IUniswapV2Factory)"
																				}
																			},
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4691:36:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Factory_$1484",
																				"typeString": "contract IUniswapV2Factory"
																			}
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "createPair",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1473,
																		"src": "4691:47:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																			"typeString": "function (address,address) external returns (address)"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4691:71:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4674:88:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "4674:88:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2354,
																	"name": "_liquidityPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2184,
																	"src": "4817:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4809:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4809:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4809:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2351,
														"name": "excludeTransferFeeAsSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "4782:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4782:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "4782:51:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4869:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4869:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "_liquidityPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "4881:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2358,
														"name": "ChangedLiquidityPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "4848:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4848:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "EmitStatement",
												"src": "4843:53:12"
											}
										]
									},
									"functionSelector": "9d93598e",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2297,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "4370:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4370:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "6c705f70616972",
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1bad427143c06022a8c5668ec10f1c479edab00891a8f1d65c71851ebf27c63c",
														"typeString": "literal_string \"lp_pair\""
													},
													"value": "lp_pair"
												}
											],
											"id": 2301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2299,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "4392:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4392:17:12"
										}
									],
									"name": "setLiquidityPair",
									"nameLocation": "4329:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "4354:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "4346:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:17:12"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4410:0:12"
									},
									"scope": 3200,
									"src": "4320:583:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "4980:165:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2373,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "4998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5016:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5008:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5008:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5008:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4998:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73657444657657616c6c65743a20416464726573732063616e2774206265207a65726f2061646472657373",
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5020:52:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f631ef5a3dea17f35a5015da0afbc99b9de7c86ad7867840a2ecc2a1c021bdb4",
																"typeString": "literal_string \"ABOAT::setDevWallet: Address can't be zero address\""
															},
															"value": "ABOAT::setDevWallet: Address can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f631ef5a3dea17f35a5015da0afbc99b9de7c86ad7867840a2ecc2a1c021bdb4",
																"typeString": "literal_string \"ABOAT::setDevWallet: Address can't be zero address\""
															}
														],
														"id": 2372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4990:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4990:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2381,
												"nodeType": "ExpressionStatement",
												"src": "4990:83:12"
											},
											{
												"expression": {
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2382,
														"name": "_devWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "5083:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2383,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "5096:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5083:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "5083:19:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2387,
															"name": "_devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "5127:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2386,
														"name": "excludeFromAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "5112:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5112:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "5112:26:12"
											}
										]
									},
									"functionSelector": "1f53ac02",
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2369,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "4958:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4958:21:12"
										}
									],
									"name": "setDevWallet",
									"nameLocation": "4922:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "4943:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "4935:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4934:16:12"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4980:0:12"
									},
									"scope": 3200,
									"src": "4913:232:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "5227:139:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2399,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "5245:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5263:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5255:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2400,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5255:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5255:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5245:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a736574446f6e6174696f6e57616c6c65743a20416464726573732063616e2774206265207a65726f2061646472657373",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:57:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c15eda6d10ce8bc20f11826bb18887c98283ac20329aeb3448c4cc8dadbc670",
																"typeString": "literal_string \"ABOAT::setDonationWallet: Address can't be zero address\""
															},
															"value": "ABOAT::setDonationWallet: Address can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c15eda6d10ce8bc20f11826bb18887c98283ac20329aeb3448c4cc8dadbc670",
																"typeString": "literal_string \"ABOAT::setDonationWallet: Address can't be zero address\""
															}
														],
														"id": 2398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5237:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "5237:88:12"
											},
											{
												"expression": {
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2408,
														"name": "_donationWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "5335:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2409,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "5353:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5335:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "5335:24:12"
											}
										]
									},
									"functionSelector": "5a96cdd7",
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2395,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "5205:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5205:21:12"
										}
									],
									"name": "setDonationWallet",
									"nameLocation": "5164:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "5190:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "5182:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5182:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:16:12"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:12"
									},
									"scope": 3200,
									"src": "5155:211:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "5446:174:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2421,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "5464:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5482:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5474:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2422,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5474:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5474:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5464:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a73657452657761726457616c6c65743a20416464726573732063616e2774206265207a65726f2061646472657373",
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5486:55:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e577346e8ae94bbbc17a5bf60fcbcd73e085ca8bcc04888561f8ba514686212b",
																"typeString": "literal_string \"ABOAT::setRewardWallet: Address can't be zero address\""
															},
															"value": "ABOAT::setRewardWallet: Address can't be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e577346e8ae94bbbc17a5bf60fcbcd73e085ca8bcc04888561f8ba514686212b",
																"typeString": "literal_string \"ABOAT::setRewardWallet: Address can't be zero address\""
															}
														],
														"id": 2420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5456:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5456:86:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "5456:86:12"
											},
											{
												"expression": {
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2430,
														"name": "_rewardWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2182,
														"src": "5552:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2431,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "5568:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "5552:22:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2435,
															"name": "_rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "5599:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2434,
														"name": "excludeFromAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "5584:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2437,
												"nodeType": "ExpressionStatement",
												"src": "5584:29:12"
											}
										]
									},
									"functionSelector": "5958621e",
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2417,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "5424:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5424:21:12"
										}
									],
									"name": "setRewardWallet",
									"nameLocation": "5385:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "5409:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "5401:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5401:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5400:16:12"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5446:0:12"
									},
									"scope": 3200,
									"src": "5376:244:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "5703:46:12",
										"statements": [
											{
												"expression": {
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2446,
														"name": "_minAmountToLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "5713:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2447,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2441,
														"src": "5735:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5713:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2449,
												"nodeType": "ExpressionStatement",
												"src": "5713:29:12"
											}
										]
									},
									"functionSelector": "8efd5e3b",
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2443,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "5681:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5681:21:12"
										}
									],
									"name": "setMinAmountToLiquify",
									"nameLocation": "5635:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5665:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "5657:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:17:12"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5703:0:12"
									},
									"scope": 3200,
									"src": "5626:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "6152:115:12",
										"statements": [
											{
												"expression": {
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2458,
															"name": "_excludedFromFeesAsSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "6162:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2460,
														"indexExpression": {
															"id": 2459,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "6188:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6162:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6201:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6162:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "6162:43:12"
											},
											{
												"expression": {
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2464,
															"name": "_excludedFromFeesAsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "6215:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2466,
														"indexExpression": {
															"id": 2465,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "6243:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6215:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6256:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6215:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2469,
												"nodeType": "ExpressionStatement",
												"src": "6215:45:12"
											}
										]
									},
									"functionSelector": "370f0a60",
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2456,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2455,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6130:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6130:21:12"
										}
									],
									"name": "excludeFromAll",
									"nameLocation": "6089:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6112:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "6104:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6104:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:19:12"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6152:0:12"
									},
									"scope": 3200,
									"src": "6080:187:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "6361:60:12",
										"statements": [
											{
												"expression": {
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2478,
															"name": "_excludedFromFeesAsSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "6371:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2480,
														"indexExpression": {
															"id": 2479,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "6397:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6371:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6410:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6371:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "6371:43:12"
											}
										]
									},
									"functionSelector": "7897af86",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2475,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6339:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6339:21:12"
										}
									],
									"name": "excludeTransferFeeAsSender",
									"nameLocation": "6286:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6321:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "6313:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:19:12"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6361:0:12"
									},
									"scope": 3200,
									"src": "6277:144:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "6514:62:12",
										"statements": [
											{
												"expression": {
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2492,
															"name": "_excludedFromFeesAsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "6524:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2494,
														"indexExpression": {
															"id": 2493,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "6552:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6524:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6565:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6524:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "6524:45:12"
											}
										]
									},
									"functionSelector": "986d6142",
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2489,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6492:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6492:21:12"
										}
									],
									"name": "excludeFromFeesAsReceiver",
									"nameLocation": "6440:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6474:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "6466:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6465:19:12"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6514:0:12"
									},
									"scope": 3200,
									"src": "6431:145:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "6657:117:12",
										"statements": [
											{
												"expression": {
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2506,
															"name": "_excludedFromFeesAsSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "6667:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2508,
														"indexExpression": {
															"id": 2507,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "6693:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6667:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6706:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6667:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2511,
												"nodeType": "ExpressionStatement",
												"src": "6667:44:12"
											},
											{
												"expression": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2512,
															"name": "_excludedFromFeesAsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "6721:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2514,
														"indexExpression": {
															"id": 2513,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "6749:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6721:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6762:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6721:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2517,
												"nodeType": "ExpressionStatement",
												"src": "6721:46:12"
											}
										]
									},
									"functionSelector": "a17252a4",
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2503,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6635:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6635:21:12"
										}
									],
									"name": "includeForAll",
									"nameLocation": "6595:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6617:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "6609:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6609:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6608:19:12"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6657:0:12"
									},
									"scope": 3200,
									"src": "6586:188:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "6868:61:12",
										"statements": [
											{
												"expression": {
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2526,
															"name": "_excludedFromFeesAsSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "6878:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2528,
														"indexExpression": {
															"id": 2527,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "6904:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6878:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6917:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6878:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "6878:44:12"
											}
										]
									},
									"functionSelector": "4ad1eb81",
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2523,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6846:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6846:21:12"
										}
									],
									"name": "includeTransferFeeAsSender",
									"nameLocation": "6793:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6828:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "6820:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:19:12"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6868:0:12"
									},
									"scope": 3200,
									"src": "6784:145:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "7021:63:12",
										"statements": [
											{
												"expression": {
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2540,
															"name": "_excludedFromFeesAsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "7031:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2542,
														"indexExpression": {
															"id": 2541,
															"name": "_excludee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "7059:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7031:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7072:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7031:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "7031:46:12"
											}
										]
									},
									"functionSelector": "53a54511",
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2538,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2537,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "6999:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6999:21:12"
										}
									],
									"name": "includeForFeesAsReciever",
									"nameLocation": "6948:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "_excludee",
												"nameLocation": "6981:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6973:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6973:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6972:19:12"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7021:0:12"
									},
									"scope": 3200,
									"src": "6939:145:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "7204:320:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2558,
																"name": "_transferTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "7222:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2559,
																"name": "maximumTransferTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2155,
																"src": "7242:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "7222:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7570646174654d696e696d756d5472616e73666572546178526174653a206d696e696d756d5472616e7366657254617852617465206d757374206e6f7420657863656564206d6178696d756d5472616e73666572546178526174652e",
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7266:101:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aed0c7ef50a57c104f6626da9128d0c3f3e3e2bb104225b86448d028d346fcbc",
																"typeString": "literal_string \"ABOAT::updateMinimumTransferTaxRate: minimumTransferTaxRate must not exceed maximumTransferTaxRate.\""
															},
															"value": "ABOAT::updateMinimumTransferTaxRate: minimumTransferTaxRate must not exceed maximumTransferTaxRate."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aed0c7ef50a57c104f6626da9128d0c3f3e3e2bb104225b86448d028d346fcbc",
																"typeString": "literal_string \"ABOAT::updateMinimumTransferTaxRate: minimumTransferTaxRate must not exceed maximumTransferTaxRate.\""
															}
														],
														"id": 2557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7214:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7214:154:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "7214:154:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7413:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7413:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2567,
															"name": "minimumTransferTaxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "7425:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2568,
															"name": "_transferTaxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "7449:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2564,
														"name": "MinimumTransferTaxRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "7383:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7383:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2570,
												"nodeType": "EmitStatement",
												"src": "7378:88:12"
											},
											{
												"expression": {
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2571,
														"name": "minimumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "7476:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2572,
														"name": "_transferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "7501:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "7476:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "7476:41:12"
											}
										]
									},
									"functionSelector": "7d8e9615",
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2551,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "7164:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7164:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "6d696e5f746178",
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7193:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9cd23b580ec0ee7c27b2535da4b4e692085a5805d53b67e88f81469f7140b703",
														"typeString": "literal_string \"min_tax\""
													},
													"value": "min_tax"
												}
											],
											"id": 2555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2553,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "7186:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7186:17:12"
										}
									],
									"name": "updateMinimumTransferTaxRate",
									"nameLocation": "7103:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "_transferTaxRate",
												"nameLocation": "7139:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "7132:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2548,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7132:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7131:25:12"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7204:0:12"
									},
									"scope": 3200,
									"src": "7094:430:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "7644:460:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2587,
																"name": "_transferTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "7662:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2588,
																"name": "minimumTransferTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "7682:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "7662:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7570646174654d6178696d756d5472616e73666572546178526174653a206d6178696d756d5472616e7366657254617852617465206d757374206e6f742062652062656c6f77206d696e696d756d5472616e73666572546178526174652e",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:103:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16dee1d011eb34ba42ede6d4a6a97156f5ae0afa79a1378212afbb8ca92456ee",
																"typeString": "literal_string \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must not be below minimumTransferTaxRate.\""
															},
															"value": "ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must not be below minimumTransferTaxRate."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16dee1d011eb34ba42ede6d4a6a97156f5ae0afa79a1378212afbb8ca92456ee",
																"typeString": "literal_string \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must not be below minimumTransferTaxRate.\""
															}
														],
														"id": 2586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7654:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7654:156:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2592,
												"nodeType": "ExpressionStatement",
												"src": "7654:156:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "_transferTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "7828:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2595,
																"name": "MAXIMUM_TAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "7848:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "7828:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7570646174654d6178696d756d5472616e73666572546178526174653a206d6178696d756d5472616e7366657254617852617465206d75737420657863656564204d4158494d554d5f5441582e",
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7861:86:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74b7bd495e42122a7b04540f0a039f02f529e110a0b6c6c31266564ffb5faf7b",
																"typeString": "literal_string \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must exceed MAXIMUM_TAX.\""
															},
															"value": "ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must exceed MAXIMUM_TAX."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74b7bd495e42122a7b04540f0a039f02f529e110a0b6c6c31266564ffb5faf7b",
																"typeString": "literal_string \"ABOAT::updateMaximumTransferTaxRate: maximumTransferTaxRate must exceed MAXIMUM_TAX.\""
															}
														],
														"id": 2593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7820:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7820:128:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2599,
												"nodeType": "ExpressionStatement",
												"src": "7820:128:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2601,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7993:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7993:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2603,
															"name": "minimumTransferTaxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "8005:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2604,
															"name": "_transferTaxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "8029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2600,
														"name": "MaximumTransferTaxRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "7963:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7963:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2606,
												"nodeType": "EmitStatement",
												"src": "7958:88:12"
											},
											{
												"expression": {
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2607,
														"name": "maximumTransferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "8056:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2608,
														"name": "_transferTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2578,
														"src": "8081:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8056:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "8056:41:12"
											}
										]
									},
									"functionSelector": "af10e03e",
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2580,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "7604:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7604:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "6d61785f746178",
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7633:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9917de8f1af0166df247984b39d0099ab8854e398bfd014d5c7cf3727802996d",
														"typeString": "literal_string \"max_tax\""
													},
													"value": "max_tax"
												}
											],
											"id": 2584,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2582,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "7626:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7626:17:12"
										}
									],
									"name": "updateMaximumTransferTaxRate",
									"nameLocation": "7543:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "_transferTaxRate",
												"nameLocation": "7579:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "7572:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2577,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7572:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:25:12"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7644:0:12"
									},
									"scope": 3200,
									"src": "7534:570:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "8233:288:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2627,
																		"name": "_redistribution",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2614,
																		"src": "8251:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2628,
																		"name": "_dev",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "8269:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "8251:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2630,
																	"name": "_donation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "8276:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "8251:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8289:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "8251:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7570646174655461783a205461782063616e7420657863656564203130302070657263656e7421",
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8294:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e32ff6a8459bc0c7e567e00262efd9f5ddd4212121206daf5bdc9954aa168cef",
																"typeString": "literal_string \"ABOAT::updateTax: Tax cant exceed 100 percent!\""
															},
															"value": "ABOAT::updateTax: Tax cant exceed 100 percent!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e32ff6a8459bc0c7e567e00262efd9f5ddd4212121206daf5bdc9954aa168cef",
																"typeString": "literal_string \"ABOAT::updateTax: Tax cant exceed 100 percent!\""
															}
														],
														"id": 2626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8243:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8243:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2636,
												"nodeType": "ExpressionStatement",
												"src": "8243:100:12"
											},
											{
												"expression": {
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2637,
														"name": "reDistributionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "8353:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2638,
														"name": "_redistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "8374:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8353:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "8353:36:12"
											},
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2641,
														"name": "devRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "8399:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2642,
														"name": "_dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "8409:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8399:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "8399:14:12"
											},
											{
												"expression": {
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2645,
														"name": "donationRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "8423:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2646,
														"name": "_donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2618,
														"src": "8438:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8423:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2648,
												"nodeType": "ExpressionStatement",
												"src": "8423:24:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2650,
															"name": "reDistributionRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "8472:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2651,
															"name": "devRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "8492:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2652,
															"name": "donationRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "8501:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2649,
														"name": "UpdateTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "8462:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint16_$returns$__$",
															"typeString": "function (uint16,uint16,uint16)"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "EmitStatement",
												"src": "8457:57:12"
											}
										]
									},
									"functionSelector": "737dc9bd",
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2621,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2620,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "8191:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8191:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "757064617465546178",
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8220:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1c15be640796a98109a22c63757672ef0f8cd11d2d90c4c1ac1fcd7cd5361819",
														"typeString": "literal_string \"updateTax\""
													},
													"value": "updateTax"
												}
											],
											"id": 2624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2622,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "8213:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8213:19:12"
										}
									],
									"name": "updateTax",
									"nameLocation": "8119:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "_redistribution",
												"nameLocation": "8136:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "8129:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2613,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8129:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "_dev",
												"nameLocation": "8160:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "8153:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2615,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8153:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "_donation",
												"nameLocation": "8173:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "8166:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2617,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8166:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8128:55:12"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8233:0:12"
									},
									"scope": 3200,
									"src": "8110:411:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "8615:203:12",
										"statements": [
											{
												"expression": {
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2666,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "8625:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2668,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2658,
																"src": "8654:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2667,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "8635:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2122_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8635:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "8625:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "8625:36:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2673,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "8688:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "WETH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1738,
																"src": "8688:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																	"typeString": "function () pure external returns (address)"
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8688:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2672,
														"name": "setLiquidityPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "8671:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "8671:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2679,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "8740:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2678,
														"name": "excludeTransferFeeAsSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "8713:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8713:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "8713:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8776:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8776:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2685,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "8788:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2686,
															"name": "_liquidityPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "8796:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2682,
														"name": "RouterUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "8762:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8762:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2688,
												"nodeType": "EmitStatement",
												"src": "8757:54:12"
											}
										]
									},
									"functionSelector": "c851cc32",
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2660,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "8576:21:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8576:21:12"
										},
										{
											"arguments": [
												{
													"hexValue": "726f75746572",
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8605:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5f6d4e9bb70c9d2aa50e18560b4cdd1b23b30d62b60873d5f23b103e5d7d0185",
														"typeString": "literal_string \"router\""
													},
													"value": "router"
												}
											],
											"id": 2664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2662,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "8598:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8598:16:12"
										}
									],
									"name": "updateRouter",
									"nameLocation": "8540:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "router",
												"nameLocation": "8561:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8553:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8553:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8552:16:12"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8615:0:12"
									},
									"scope": 3200,
									"src": "8531:287:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2840,
										"nodeType": "Block",
										"src": "9313:1327:12",
										"statements": [
											{
												"condition": {
													"id": 2695,
													"name": "isLiquifyActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2170,
													"src": "9326:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2698,
												"nodeType": "IfStatement",
												"src": "9323:51:12",
												"trueBody": {
													"id": 2697,
													"nodeType": "Block",
													"src": "9343:31:12",
													"statements": [
														{
															"functionReturnParameters": 2694,
															"id": 2696,
															"nodeType": "Return",
															"src": "9357:7:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2699,
														"name": "isLiquifyActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "9383:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9401:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9383:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "9383:22:12"
											},
											{
												"assignments": [
													2704
												],
												"declarations": [
													{
														"constant": false,
														"id": 2704,
														"mutability": "mutable",
														"name": "contractTokenBalance",
														"nameLocation": "9423:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 2840,
														"src": "9415:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9415:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2711,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2708,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9464:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9456:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2706,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9456:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9456:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2705,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "9446:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9446:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9415:55:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2712,
														"name": "contractTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "9484:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2713,
														"name": "_minAmountToLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "9508:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9484:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "IfStatement",
												"src": "9480:1121:12",
												"trueBody": {
													"id": 2834,
													"nodeType": "Block",
													"src": "9529:1072:12",
													"statements": [
														{
															"assignments": [
																2717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2717,
																	"mutability": "mutable",
																	"name": "pair",
																	"nameLocation": "9558:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9543:19:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$1726",
																		"typeString": "contract IUniswapV2Pair"
																	},
																	"typeName": {
																		"id": 2716,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2715,
																			"name": "IUniswapV2Pair",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1726,
																			"src": "9543:14:12"
																		},
																		"referencedDeclaration": 1726,
																		"src": "9543:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1726",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2721,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2719,
																		"name": "_liquidityPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2184,
																		"src": "9580:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2718,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "9565:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1726_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:30:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$1726",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9543:52:12"
														},
														{
															"assignments": [
																2723
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2723,
																	"mutability": "mutable",
																	"name": "devTax",
																	"nameLocation": "9617:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9609:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2722,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9609:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2731,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9663:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2726,
																				"name": "devRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2164,
																				"src": "9650:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"expression": {
																				"id": 2724,
																				"name": "_minAmountToLiquify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2173,
																				"src": "9626:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1315,
																			"src": "9626:23:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9626:32:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "9626:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9626:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9609:58:12"
														},
														{
															"assignments": [
																2733
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2733,
																	"mutability": "mutable",
																	"name": "donationTax",
																	"nameLocation": "9689:11:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9681:19:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2732,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9681:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2741,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9745:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2736,
																				"name": "donationRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2167,
																				"src": "9727:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			],
																			"expression": {
																				"id": 2734,
																				"name": "_minAmountToLiquify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2173,
																				"src": "9703:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1315,
																			"src": "9703:23:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9703:37:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "9703:41:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9703:46:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9681:68:12"
														},
														{
															"assignments": [
																2743
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2743,
																	"mutability": "mutable",
																	"name": "half",
																	"nameLocation": "9823:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9815:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2742,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9815:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2754,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9883:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2749,
																				"name": "donationTax",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2733,
																				"src": "9866:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2746,
																						"name": "devTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2723,
																						"src": "9854:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2744,
																						"name": "_minAmountToLiquify",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2173,
																						"src": "9830:19:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1300,
																					"src": "9830:23:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9830:31:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1300,
																			"src": "9830:35:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9830:48:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "9830:52:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9830:55:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9815:70:12"
														},
														{
															"assignments": [
																2756
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2756,
																	"mutability": "mutable",
																	"name": "otherHalfWithTax",
																	"nameLocation": "9907:16:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9899:24:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2755,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9899:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2761,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2759,
																		"name": "half",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2743,
																		"src": "9950:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2757,
																		"name": "_minAmountToLiquify",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "9926:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1300,
																	"src": "9926:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9926:29:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9899:56:12"
														},
														{
															"assignments": [
																2763
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2763,
																	"mutability": "mutable",
																	"name": "tokenA",
																	"nameLocation": "9979:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "9971:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2762,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9971:7:12",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2770,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2766,
																				"name": "pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2717,
																				"src": "9996:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Pair_$1726",
																					"typeString": "contract IUniswapV2Pair"
																				}
																			},
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token0",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1654,
																			"src": "9996:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9996:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9988:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2764,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9988:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9988:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9971:39:12"
														},
														{
															"assignments": [
																2772
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2772,
																	"mutability": "mutable",
																	"name": "tokenB",
																	"nameLocation": "10032:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "10024:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2771,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10024:7:12",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2779,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2775,
																				"name": "pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2717,
																				"src": "10049:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Pair_$1726",
																					"typeString": "contract IUniswapV2Pair"
																				}
																			},
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token1",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1659,
																			"src": "10049:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10049:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10041:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2773,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10041:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10041:22:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10024:39:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2781,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "10085:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2782,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "10095:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10085:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c6964206c6971756469747920706169723a20506169722063616e277420636f6e7461696e207468652073616d6520746f6b656e207477696365",
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10103:65:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_29b5f082b22849b1d191ec536742c730ee25ed09251292ea0934477c8cd02ec1",
																			"typeString": "literal_string \"Invalid liqudity pair: Pair can't contain the same token twice\""
																		},
																		"value": "Invalid liqudity pair: Pair can't contain the same token twice"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_29b5f082b22849b1d191ec536742c730ee25ed09251292ea0934477c8cd02ec1",
																			"typeString": "literal_string \"Invalid liqudity pair: Pair can't contain the same token twice\""
																		}
																	],
																	"id": 2780,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10077:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10077:92:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2786,
															"nodeType": "ExpressionStatement",
															"src": "10077:92:12"
														},
														{
															"assignments": [
																2788
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2788,
																	"mutability": "mutable",
																	"name": "isWeth",
																	"nameLocation": "10201:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "10196:11:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2787,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "10196:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2800,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2789,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2763,
																		"src": "10210:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2790,
																				"name": "_router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "10220:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "WETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1738,
																			"src": "10220:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10220:14:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10210:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2794,
																		"name": "tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2772,
																		"src": "10238:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2795,
																				"name": "_router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2187,
																				"src": "10248:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "WETH",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1738,
																			"src": "10248:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10248:14:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "10238:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10210:52:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10196:66:12"
														},
														{
															"assignments": [
																2802
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2802,
																	"mutability": "mutable",
																	"name": "newBalance",
																	"nameLocation": "10284:10:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2834,
																	"src": "10276:18:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2801,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10276:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2804,
															"initialValue": {
																"hexValue": "30",
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10297:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10276:22:12"
														},
														{
															"condition": {
																"id": 2805,
																"name": "isWeth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2788,
																"src": "10315:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2826,
																"nodeType": "Block",
																"src": "10402:120:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2813,
																							"name": "tokenA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2763,
																							"src": "10441:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2816,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "10459:4:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_Liquify_$3200",
																										"typeString": "contract Liquify"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_Liquify_$3200",
																										"typeString": "contract Liquify"
																									}
																								],
																								"id": 2815,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "10451:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2814,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "10451:7:12",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2817,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10451:13:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "10441:23:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"id": 2820,
																						"name": "tokenB",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2772,
																						"src": "10476:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 2821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "10441:41:12",
																					"trueExpression": {
																						"id": 2819,
																						"name": "tokenA",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2763,
																						"src": "10467:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2822,
																					"name": "otherHalfWithTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10484:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2823,
																					"name": "half",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "10502:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2812,
																				"name": "swapAndLiquifyTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2996,
																				"src": "10420:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256)"
																				}
																			},
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10420:87:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2825,
																		"nodeType": "ExpressionStatement",
																		"src": "10420:87:12"
																	}
																]
															},
															"id": 2827,
															"nodeType": "IfStatement",
															"src": "10312:210:12",
															"trueBody": {
																"id": 2811,
																"nodeType": "Block",
																"src": "10323:73:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2807,
																					"name": "otherHalfWithTax",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2756,
																					"src": "10358:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2808,
																					"name": "half",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "10376:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2806,
																				"name": "swapAndLiquifyEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2939,
																				"src": "10340:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10340:41:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2810,
																		"nodeType": "ExpressionStatement",
																		"src": "10340:41:12"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2829,
																		"name": "otherHalfWithTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2756,
																		"src": "10555:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2830,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2802,
																		"src": "10573:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2831,
																		"name": "half",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2743,
																		"src": "10585:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2828,
																	"name": "SwapAndLiquify",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "10540:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10540:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2833,
															"nodeType": "EmitStatement",
															"src": "10535:55:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2836,
														"name": "isLiquifyActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "10610:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10628:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10610:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "10610:23:12"
											}
										]
									},
									"functionSelector": "b29ad50a",
									"id": 2841,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2692,
												"name": "taxFree",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2277,
												"src": "9305:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9305:7:12"
										}
									],
									"name": "swapAndLiquify",
									"nameLocation": "9281:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9295:2:12"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9313:0:12"
									},
									"scope": 3200,
									"src": "9272:1368:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "10712:542:12",
										"statements": [
											{
												"assignments": [
													2849
												],
												"declarations": [
													{
														"constant": false,
														"id": 2849,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "10730:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2914,
														"src": "10722:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2848,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10722:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2855,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2852,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "10755:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Liquify_$3200",
																	"typeString": "contract Liquify"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Liquify_$3200",
																	"typeString": "contract Liquify"
																}
															],
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10747:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2850,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10747:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10747:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "10747:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10722:46:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2843,
															"src": "10843:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2856,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "10826:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10826:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "10826:24:12"
											},
											{
												"assignments": [
													2861
												],
												"declarations": [
													{
														"constant": false,
														"id": 2861,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "10877:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2914,
														"src": "10869:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10869:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2870,
												"initialValue": {
													"arguments": [
														{
															"id": 2868,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "10916:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2864,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "10898:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	],
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10890:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2862,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10890:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10890:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "10890:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1300,
														"src": "10890:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10890:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10869:62:12"
											},
											{
												"assignments": [
													2872
												],
												"declarations": [
													{
														"constant": false,
														"id": 2872,
														"mutability": "mutable",
														"name": "devTax",
														"nameLocation": "10949:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2914,
														"src": "10941:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10941:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2880,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10986:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2875,
																	"name": "devRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2164,
																	"src": "10973:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 2873,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2861,
																	"src": "10958:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1315,
																"src": "10958:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10958:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "10958:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10958:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10941:49:12"
											},
											{
												"assignments": [
													2882
												],
												"declarations": [
													{
														"constant": false,
														"id": 2882,
														"mutability": "mutable",
														"name": "donationTax",
														"nameLocation": "11008:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2914,
														"src": "11000:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11000:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2890,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11055:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2885,
																	"name": "donationRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "11037:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 2883,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2861,
																	"src": "11022:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1315,
																"src": "11022:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11022:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "11022:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11022:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11000:59:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2894,
															"name": "_devWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "11100:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2895,
															"name": "devTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "11112:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2891,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3519,
															"src": "11069:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3519_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3518,
														"src": "11069:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11069:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "11069:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2901,
															"name": "_donationWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "11160:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2902,
															"name": "donationTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "11177:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2898,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3519,
															"src": "11129:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3519_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3518,
														"src": "11129:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2904,
												"nodeType": "ExpressionStatement",
												"src": "11129:60:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2911,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "11232:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2907,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11214:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Liquify_$3200",
																			"typeString": "contract Liquify"
																		}
																	],
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11206:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2905,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11206:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11206:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "11206:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1300,
														"src": "11206:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11206:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2847,
												"id": 2913,
												"nodeType": "Return",
												"src": "11199:48:12"
											}
										]
									},
									"id": 2915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapForEth",
									"nameLocation": "10659:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10678:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "10670:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10670:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10669:16:12"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "10703:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10702:9:12"
									},
									"scope": 3200,
									"src": "10650:604:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "11332:145:12",
										"statements": [
											{
												"assignments": [
													2923
												],
												"declarations": [
													{
														"constant": false,
														"id": 2923,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "11350:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2938,
														"src": "11342:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11342:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2927,
												"initialValue": {
													"arguments": [
														{
															"id": 2925,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2917,
															"src": "11374:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2924,
														"name": "swapForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "11363:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11363:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11342:37:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2928,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2923,
														"src": "11392:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11392:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2937,
												"nodeType": "IfStatement",
												"src": "11389:82:12",
												"trueBody": {
													"id": 2936,
													"nodeType": "Block",
													"src": "11408:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2932,
																		"name": "otherHalf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2919,
																		"src": "11438:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2933,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2923,
																		"src": "11449:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2931,
																	"name": "addLiquidityETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3199,
																	"src": "11422:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11422:38:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2935,
															"nodeType": "ExpressionStatement",
															"src": "11422:38:12"
														}
													]
												}
											}
										]
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndLiquifyEth",
									"nameLocation": "11273:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "half",
												"nameLocation": "11299:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "11291:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11291:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "otherHalf",
												"nameLocation": "11313:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "11305:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11305:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11290:33:12"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11332:0:12"
									},
									"scope": 3200,
									"src": "11264:213:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "11574:363:12",
										"statements": [
											{
												"assignments": [
													2950
												],
												"declarations": [
													{
														"constant": false,
														"id": 2950,
														"mutability": "mutable",
														"name": "tokenBContract",
														"nameLocation": "11591:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "11584:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$767",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 2949,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2948,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 767,
																"src": "11584:6:12"
															},
															"referencedDeclaration": 767,
															"src": "11584:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2954,
												"initialValue": {
													"arguments": [
														{
															"id": 2952,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "11615:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2951,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "11608:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$767_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11608:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$767",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11584:38:12"
											},
											{
												"assignments": [
													2956
												],
												"declarations": [
													{
														"constant": false,
														"id": 2956,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "11640:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "11632:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2955,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11632:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2960,
												"initialValue": {
													"arguments": [
														{
															"id": 2958,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "11663:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2957,
														"name": "swapForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "11652:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) returns (uint256)"
														}
													},
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11652:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11632:36:12"
											},
											{
												"assignments": [
													2962
												],
												"declarations": [
													{
														"constant": false,
														"id": 2962,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "11686:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "11678:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11678:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2970,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2967,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11736:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 2966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11728:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11728:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11728:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2963,
															"name": "tokenBContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "11703:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "11703:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11703:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11678:64:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2972,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "11769:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2973,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "11780:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2971,
														"name": "swapEthForTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "11752:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11752:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2975,
												"nodeType": "ExpressionStatement",
												"src": "11752:35:12"
											},
											{
												"assignments": [
													2977
												],
												"declarations": [
													{
														"constant": false,
														"id": 2977,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "11805:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "11797:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2976,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11797:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2988,
												"initialValue": {
													"arguments": [
														{
															"id": 2986,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2962,
															"src": "11862:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2982,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11851:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Liquify_$3200",
																				"typeString": "contract Liquify"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Liquify_$3200",
																				"typeString": "contract Liquify"
																			}
																		],
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11843:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2980,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11843:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11843:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2978,
																	"name": "tokenBContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2950,
																	"src": "11818:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$767",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "11818:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11818:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1300,
														"src": "11818:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11818:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11797:80:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2990,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "11900:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2991,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "11911:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2992,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2941,
															"src": "11923:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2989,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3158,
														"src": "11887:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11887:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "ExpressionStatement",
												"src": "11887:43:12"
											}
										]
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapAndLiquifyTokens",
									"nameLocation": "11496:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "11525:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "11517:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11517:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "half",
												"nameLocation": "11541:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "11533:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11533:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "otherHalf",
												"nameLocation": "11555:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "11547:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11547:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11516:49:12"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11574:0:12"
									},
									"scope": 3200,
									"src": "11487:450:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "12018:341:12",
										"statements": [
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "12045:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3043,
														"src": "12028:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12028:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3006,
															"nodeType": "ArrayTypeName",
															"src": "12028:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3013,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12066:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 3010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12052:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3008,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12056:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3009,
															"nodeType": "ArrayTypeName",
															"src": "12056:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12052:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12028:40:12"
											},
											{
												"expression": {
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3014,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "12078:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3016,
														"indexExpression": {
															"hexValue": "30",
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12083:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12078:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3017,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "12088:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1738,
															"src": "12088:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12088:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12078:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "12078:24:12"
											},
											{
												"expression": {
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3022,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "12112:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3024,
														"indexExpression": {
															"hexValue": "31",
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12117:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12112:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3025,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "12122:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12112:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "12112:16:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 3033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12239:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3034,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "12282:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 3037,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12308:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12300:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3035,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12300:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12300:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3039,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12327:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12327:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3028,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "12147:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "swapExactETHForTokensSupportingFeeOnTransferTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2107,
															"src": "12147:58:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (uint256,address[] memory,address,uint256) payable external"
															}
														},
														"id": 3032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3031,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "12213:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12147:78:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$value",
															"typeString": "function (uint256,address[] memory,address,uint256) payable external"
														}
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12147:205:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3042,
												"nodeType": "ExpressionStatement",
												"src": "12147:205:12"
											}
										]
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapEthForTokens",
									"nameLocation": "11956:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "11981:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "11973:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11973:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "12002:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "11994:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11994:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:37:12"
									},
									"returnParameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12018:0:12"
									},
									"scope": 3200,
									"src": "11947:412:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3104,
										"nodeType": "Block",
										"src": "12453:492:12",
										"statements": [
											{
												"assignments": [
													3054
												],
												"declarations": [
													{
														"constant": false,
														"id": 3054,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "12537:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 3104,
														"src": "12520:21:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12520:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3053,
															"nodeType": "ArrayTypeName",
															"src": "12520:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3060,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 3058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12558:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12544:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3055,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12548:7:12",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3056,
															"nodeType": "ArrayTypeName",
															"src": "12548:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12544:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12520:40:12"
											},
											{
												"expression": {
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3061,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "12570:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3063,
														"indexExpression": {
															"hexValue": "30",
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12575:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12570:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3066,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "12588:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Liquify_$3200",
																	"typeString": "contract Liquify"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Liquify_$3200",
																	"typeString": "contract Liquify"
																}
															],
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12580:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3064,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12580:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12580:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12570:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "12570:23:12"
											},
											{
												"expression": {
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3070,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "12603:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3072,
														"indexExpression": {
															"hexValue": "31",
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12608:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12603:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3073,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "12613:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1738,
															"src": "12613:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 3075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12613:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12603:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3077,
												"nodeType": "ExpressionStatement",
												"src": "12603:24:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3081,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12655:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12647:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3079,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12647:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12647:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3085,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "12670:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12662:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12662:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12662:16:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "12680:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3078,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "12638:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12638:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "12638:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3093,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "12800:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12825:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3095,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "12868:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 3098,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12894:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12886:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12886:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12886:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3100,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12913:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12913:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3090,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "12728:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 3092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2121,
														"src": "12728:58:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12728:210:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3103,
												"nodeType": "ExpressionStatement",
												"src": "12728:210:12"
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "12365:28:12",
										"text": "@dev Swap tokens for eth"
									},
									"id": 3105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "12407:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "12432:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "12424:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12424:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12423:21:12"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12453:0:12"
									},
									"scope": 3200,
									"src": "12398:547:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3157,
										"nodeType": "Block",
										"src": "13044:420:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3117,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13137:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13129:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3115,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13129:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13129:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3121,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "13152:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13144:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13144:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13144:16:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3123,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "13162:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3114,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "13120:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13120:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "13120:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3132,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "13215:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13207:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13207:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13207:16:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3134,
															"name": "otherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "13225:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3127,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3111,
																	"src": "13191:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3126,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "13184:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$767_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13184:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$767",
																"typeString": "contract IERC20"
															}
														},
														"id": 3129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "13184:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13184:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "13184:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13289:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13281:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13281:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13281:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3144,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "13308:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3145,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "13328:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3146,
															"name": "otherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3109,
															"src": "13353:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13378:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13416:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13408:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3149,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13408:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13408:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3153,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13432:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13432:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3137,
															"name": "_router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "13247:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1763,
														"src": "13247:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
														}
													},
													"id": 3155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13247:210:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 3156,
												"nodeType": "ExpressionStatement",
												"src": "13247:210:12"
											}
										]
									},
									"id": 3158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "12964:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "12985:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "12977:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12977:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "otherAmount",
												"nameLocation": "13006:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "12998:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12998:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "13027:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "13019:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13019:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12976:58:12"
									},
									"returnParameters": {
										"id": 3113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13044:0:12"
									},
									"scope": 3200,
									"src": "12955:509:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "13571:433:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3169,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13664:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13656:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13656:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13656:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3173,
																	"name": "_router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "13679:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13671:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13671:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13671:16:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3175,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "13689:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3166,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "13647:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13647:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3177,
												"nodeType": "ExpressionStatement",
												"src": "13647:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3185,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13804:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Liquify_$3200",
																		"typeString": "contract Liquify"
																	}
																],
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13796:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13796:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13796:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3187,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3161,
															"src": "13823:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13848:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13890:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13940:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13932:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13932:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13932:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3194,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13972:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13972:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3178,
																"name": "_router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "13741:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$2122",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1784,
															"src": "13741:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 3182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3181,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3163,
																"src": "13772:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13741:41:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13741:256:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 3197,
												"nodeType": "ExpressionStatement",
												"src": "13741:256:12"
											}
										]
									},
									"documentation": {
										"id": 3159,
										"nodeType": "StructuredDocumentation",
										"src": "13470:22:12",
										"text": "@dev Add liquidity"
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "13506:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "13530:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "13522:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13522:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "13551:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "13543:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13543:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13521:40:12"
									},
									"returnParameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13571:0:12"
									},
									"scope": 3200,
									"src": "13497:507:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3201,
							"src": "670:13341:12",
							"usedErrors": []
						}
					],
					"src": "37:13974:12"
				},
				"id": 12
			},
			"contracts/libraries/TimeLock.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TimeLock.sol",
					"exportedSymbols": {
						"Address": [
							1088
						],
						"Context": [
							1109
						],
						"ERC20": [
							689
						],
						"IERC20": [
							767
						],
						"IERC20Metadata": [
							792
						],
						"Ownable": [
							103
						],
						"SafeMath": [
							1421
						],
						"TimeLock": [
							3402
						]
					},
					"id": 3403,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3202,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3403,
							"sourceUnit": 690,
							"src": "61:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3403,
							"sourceUnit": 768,
							"src": "117:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 3205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3403,
							"sourceUnit": 1089,
							"src": "174:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 3206,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3403,
							"sourceUnit": 1422,
							"src": "226:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3403,
							"sourceUnit": 104,
							"src": "284:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3208,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "368:7:13"
									},
									"id": 3209,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3402,
							"linearizedBaseContracts": [
								3402,
								103,
								1109
							],
							"name": "TimeLock",
							"nameLocation": "356:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3212,
									"libraryName": {
										"id": 3210,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1088,
										"src": "388:7:13"
									},
									"nodeType": "UsingForDirective",
									"src": "382:26:13",
									"typeName": {
										"id": 3211,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a347511a",
									"id": 3215,
									"mutability": "mutable",
									"name": "isLockEnabled",
									"nameLocation": "749:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3402,
									"src": "737:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3213,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "737:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 3214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f98080c0",
									"id": 3219,
									"mutability": "mutable",
									"name": "timelock",
									"nameLocation": "810:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 3402,
									"src": "776:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(string => uint256)"
									},
									"typeName": {
										"id": 3218,
										"keyType": {
											"id": 3216,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "784:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "776:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(string => uint256)"
										},
										"valueType": {
											"id": 3217,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 3222,
									"mutability": "constant",
									"name": "_TIMELOCK",
									"nameLocation": "849:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 3402,
									"src": "824:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:6:13",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3224,
									"mutability": "mutable",
									"name": "_maintainer",
									"nameLocation": "889:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3402,
									"src": "873:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3223,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 3230,
									"name": "MaintainerTransferred",
									"nameLocation": "1236:21:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousMaintainer",
												"nameLocation": "1274:18:13",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "1258:34:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3228,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMaintainer",
												"nameLocation": "1310:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "1294:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:67:13"
									},
									"src": "1230:95:13"
								},
								{
									"anonymous": false,
									"id": 3236,
									"name": "UnlockedFunction",
									"nameLocation": "1336:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"indexed": true,
												"mutability": "mutable",
												"name": "functionName",
												"nameLocation": "1368:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "1353:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3234,
												"indexed": true,
												"mutability": "mutable",
												"name": "unlockedAt",
												"nameLocation": "1398:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "1382:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:57:13"
									},
									"src": "1330:80:13"
								},
								{
									"anonymous": false,
									"id": 3238,
									"name": "EnabledLock",
									"nameLocation": "1421:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:13"
									},
									"src": "1415:20:13"
								},
								{
									"body": {
										"id": 3276,
										"nodeType": "Block",
										"src": "1980:208:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1998:14:13",
																"subExpression": {
																	"id": 3243,
																	"name": "isLockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3215,
																	"src": "1999:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 3245,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3219,
																						"src": "2017:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 3247,
																					"indexExpression": {
																						"id": 3246,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3240,
																						"src": "2026:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2017:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 3248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2034:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "2017:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 3250,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3219,
																						"src": "2039:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 3252,
																					"indexExpression": {
																						"id": 3251,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3240,
																						"src": "2048:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2039:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 3253,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2056:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 3254,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2056:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2039:32:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2017:54:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 3257,
																						"name": "timelock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3219,
																						"src": "2075:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																							"typeString": "mapping(string memory => uint256)"
																						}
																					},
																					"id": 3259,
																					"indexExpression": {
																						"id": 3258,
																						"name": "_fn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3240,
																						"src": "2084:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2075:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 3260,
																					"name": "_TIMELOCK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3222,
																					"src": "2091:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2075:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"expression": {
																					"id": 3262,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2104:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 3263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2104:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2075:44:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2017:102:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2016:104:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1998:122:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206973206c6f636b6564",
															"id": 3268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2122:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															},
															"value": "Function is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a23bf39d82c6623e59dde16e20f233c4450b3a151ca89a79b2bb72696b3fce37",
																"typeString": "literal_string \"Function is locked\""
															}
														],
														"id": 3242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1990:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:153:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3270,
												"nodeType": "ExpressionStatement",
												"src": "1990:153:13"
											},
											{
												"id": 3271,
												"nodeType": "PlaceholderStatement",
												"src": "2153:1:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3273,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3240,
															"src": "2177:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3272,
														"name": "lockFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3401,
														"src": "2164:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3275,
												"nodeType": "ExpressionStatement",
												"src": "2164:17:13"
											}
										]
									},
									"id": 3277,
									"name": "locked",
									"nameLocation": "1954:6:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "1975:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "1961:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:19:13"
									},
									"src": "1945:243:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3294,
										"nodeType": "Block",
										"src": "2235:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3280,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "2253:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2253:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3282,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2264:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2253:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3285,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "2278:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2293:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2293:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2278:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2253:50:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420616c6c6f77656420746f2063616c6c20746869732066756e6374696f6e",
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:55:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															},
															"value": "operator: caller is not allowed to call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b048e77bc8dbba5b136e83c5646f4c96b1f94da03890bdeae7119b0b519a768e",
																"typeString": "literal_string \"operator: caller is not allowed to call this function\""
															}
														],
														"id": 3279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:116:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3292,
												"nodeType": "ExpressionStatement",
												"src": "2245:116:13"
											},
											{
												"id": 3293,
												"nodeType": "PlaceholderStatement",
												"src": "2371:1:13"
											}
										]
									},
									"id": 3295,
									"name": "onlyMaintainerOrOwner",
									"nameLocation": "2211:21:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:13"
									},
									"src": "2202:177:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3303,
										"nodeType": "Block",
										"src": "2399:41:13",
										"statements": [
											{
												"expression": {
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3298,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "2409:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3299,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2423:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2423:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2409:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3302,
												"nodeType": "ExpressionStatement",
												"src": "2409:24:13"
											}
										]
									},
									"id": 3304,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:2:13"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:0:13"
									},
									"scope": 3402,
									"src": "2385:55:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3311,
										"nodeType": "Block",
										"src": "2822:35:13",
										"statements": [
											{
												"expression": {
													"id": 3309,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3224,
													"src": "2839:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3308,
												"id": 3310,
												"nodeType": "Return",
												"src": "2832:18:13"
											}
										]
									},
									"functionSelector": "9850d32b",
									"id": 3312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maintainer",
									"nameLocation": "2779:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:2:13"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3312,
												"src": "2813:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:13"
									},
									"scope": 3402,
									"src": "2770:87:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3349,
										"nodeType": "Block",
										"src": "3288:329:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3323,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3314,
																	"src": "3306:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 3324,
																	"name": "_maintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "3324:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3306:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3326,
																	"name": "_newMaintainer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3314,
																	"src": "3339:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 3329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3365:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 3328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3357:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3327,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3357:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3357:10:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3339:28:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3306:61:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41424f41543a3a7365744d61696e7461696e65723a204d61696e7461696e65722063616e277420657175616c2070726576696f7573206d61696e7461696e6572206f72207a65726f2061646472657373",
															"id": 3333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3369:83:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															},
															"value": "ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83b6590ef59566f131282a8408cb697f55b5d652d52b2c31394bbd8f1a92f0ca",
																"typeString": "literal_string \"ABOAT::setMaintainer: Maintainer can't equal previous maintainer or zero address\""
															}
														],
														"id": 3322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3298:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:155:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3335,
												"nodeType": "ExpressionStatement",
												"src": "3298:155:13"
											},
											{
												"assignments": [
													3337
												],
												"declarations": [
													{
														"constant": false,
														"id": 3337,
														"mutability": "mutable",
														"name": "previousMaintainer",
														"nameLocation": "3471:18:13",
														"nodeType": "VariableDeclaration",
														"scope": 3349,
														"src": "3463:26:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3336,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3463:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3339,
												"initialValue": {
													"id": 3338,
													"name": "_maintainer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3224,
													"src": "3492:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:40:13"
											},
											{
												"expression": {
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3340,
														"name": "_maintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "3513:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3341,
														"name": "_newMaintainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3314,
														"src": "3527:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3513:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "3513:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3345,
															"name": "previousMaintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "3578:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3346,
															"name": "_maintainer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3224,
															"src": "3598:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3344,
														"name": "MaintainerTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3230,
														"src": "3556:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:54:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3348,
												"nodeType": "EmitStatement",
												"src": "3551:59:13"
											}
										]
									},
									"functionSelector": "13ea5d29",
									"id": 3350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3316,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "3245:21:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3245:21:13"
										},
										{
											"arguments": [
												{
													"hexValue": "6d61696e7461696e6572",
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3274:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddb9610f823ee4fc79a9d6f81490c93108f5c8a62aad74abbdf4620bfc3e24cd",
														"typeString": "literal_string \"maintainer\""
													},
													"value": "maintainer"
												}
											],
											"id": 3320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3318,
												"name": "locked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3277,
												"src": "3267:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3267:20:13"
										}
									],
									"name": "setMaintainer",
									"nameLocation": "3200:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "_newMaintainer",
												"nameLocation": "3222:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "3214:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:24:13"
									},
									"returnParameters": {
										"id": 3321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:13"
									},
									"scope": 3402,
									"src": "3191:426:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3362,
										"nodeType": "Block",
										"src": "3686:65:13",
										"statements": [
											{
												"expression": {
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3355,
														"name": "isLockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3215,
														"src": "3696:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3696:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "3696:20:13"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3359,
														"name": "EnabledLock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "3731:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3361,
												"nodeType": "EmitStatement",
												"src": "3726:18:13"
											}
										]
									},
									"functionSelector": "f4762fd6",
									"id": 3363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3352,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "3664:21:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3664:21:13"
										}
									],
									"name": "setTimelockEnabled",
									"nameLocation": "3636:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:13"
									},
									"returnParameters": {
										"id": 3354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3686:0:13"
									},
									"scope": 3402,
									"src": "3627:124:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3386,
										"nodeType": "Block",
										"src": "4172:112:13",
										"statements": [
											{
												"expression": {
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3370,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "4182:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 3372,
														"indexExpression": {
															"id": 3371,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "4191:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4182:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3373,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4198:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4198:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3375,
															"name": "_TIMELOCK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3222,
															"src": "4216:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4198:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4182:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3378,
												"nodeType": "ExpressionStatement",
												"src": "4182:43:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3380,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "4257:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"baseExpression": {
																"id": 3381,
																"name": "timelock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3219,
																"src": "4262:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(string memory => uint256)"
																}
															},
															"id": 3383,
															"indexExpression": {
																"id": 3382,
																"name": "_fn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3365,
																"src": "4271:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4262:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3379,
														"name": "UnlockedFunction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3236,
														"src": "4240:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 3384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4240:36:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3385,
												"nodeType": "EmitStatement",
												"src": "4235:41:13"
											}
										]
									},
									"functionSelector": "a607494a",
									"id": 3387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3368,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3367,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "4150:21:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4150:21:13"
										}
									],
									"name": "unlockFunction",
									"nameLocation": "4109:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4138:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "4124:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4124:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4123:19:13"
									},
									"returnParameters": {
										"id": 3369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4172:0:13"
									},
									"scope": 3402,
									"src": "4100:184:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3400,
										"nodeType": "Block",
										"src": "4387:34:13",
										"statements": [
											{
												"expression": {
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3394,
															"name": "timelock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "4397:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																"typeString": "mapping(string memory => uint256)"
															}
														},
														"id": 3396,
														"indexExpression": {
															"id": 3395,
															"name": "_fn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3389,
															"src": "4406:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4413:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4397:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3399,
												"nodeType": "ExpressionStatement",
												"src": "4397:17:13"
											}
										]
									},
									"functionSelector": "9f531156",
									"id": 3401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3392,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3391,
												"name": "onlyMaintainerOrOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3295,
												"src": "4365:21:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4365:21:13"
										}
									],
									"name": "lockFunction",
									"nameLocation": "4326:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "_fn",
												"nameLocation": "4353:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3401,
												"src": "4339:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:19:13"
									},
									"returnParameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4387:0:13"
									},
									"scope": 3402,
									"src": "4317:104:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3403,
							"src": "338:4085:13",
							"usedErrors": []
						}
					],
					"src": "37:4386:13"
				},
				"id": 13
			},
			"contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							3519
						]
					},
					"id": 3520,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3404,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "46:22:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3519,
							"linearizedBaseContracts": [
								3519
							],
							"name": "TransferHelper",
							"nameLocation": "189:14:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "313:281:14",
										"statements": [
											{
												"assignments": [
													3414,
													3416
												],
												"declarations": [
													{
														"constant": false,
														"id": 3414,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "329:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3446,
														"src": "324:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3413,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "324:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3416,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "351:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3446,
														"src": "338:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3415,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "338:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3426,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 3421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "405:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 3422,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3408,
																	"src": "417:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3410,
																	"src": "421:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3419,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "382:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "382:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "382:45:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3417,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3406,
															"src": "371:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "371:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:57:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "323:105:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3428,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3414,
																"src": "459:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3429,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3416,
																					"src": "471:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "471:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "486:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "471:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3435,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3416,
																					"src": "502:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3437,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "509:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3436,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "509:4:14",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3438,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "508:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3433,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "491:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "491:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "491:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "471:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3441,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "470:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "459:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 3443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:47:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 3427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:149:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3445,
												"nodeType": "ExpressionStatement",
												"src": "438:149:14"
											}
										]
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "219:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "249:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "241:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "272:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "264:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "292:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "284:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:72:14"
									},
									"returnParameters": {
										"id": 3412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:0:14"
									},
									"scope": 3519,
									"src": "210:384:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3492,
										"nodeType": "Block",
										"src": "729:291:14",
										"statements": [
											{
												"assignments": [
													3459,
													3461
												],
												"declarations": [
													{
														"constant": false,
														"id": 3459,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "745:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "740:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3458,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "740:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3461,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "767:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "754:17:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3460,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "754:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3472,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 3466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "821:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 3467,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3451,
																	"src": "833:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3468,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3453,
																	"src": "839:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3455,
																	"src": "843:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3464,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "798:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "798:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:51:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3462,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3449,
															"src": "787:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "787:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:63:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "739:111:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3474,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3459,
																"src": "881:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3475,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3461,
																					"src": "893:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "893:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "908:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "893:16:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3481,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3461,
																					"src": "924:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3483,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "931:4:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3482,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "931:4:14",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3484,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "930:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3479,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "913:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "913:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "913:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "893:44:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "892:46:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "881:57:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 3489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "952:51:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 3473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:153:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3491,
												"nodeType": "ExpressionStatement",
												"src": "860:153:14"
											}
										]
									},
									"id": 3493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "609:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "643:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "635:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "666:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "658:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "688:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "680:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "700:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:94:14"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:0:14"
									},
									"scope": 3519,
									"src": "600:420:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3517,
										"nodeType": "Block",
										"src": "1087:187:14",
										"statements": [
											{
												"assignments": [
													3501,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 3501,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1103:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 3517,
														"src": "1098:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3500,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1098:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 3511,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1138:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 3506,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1142:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 3509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1138:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 3502,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3495,
																"src": "1116:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1116:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 3505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3504,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3497,
																"src": "1131:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1116:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1097:54:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3513,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3501,
															"src": "1182:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 3514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1203:54:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 3512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1161:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:106:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3516,
												"nodeType": "ExpressionStatement",
												"src": "1161:106:14"
											}
										]
									},
									"id": 3518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1035:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1059:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3518,
												"src": "1051:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1071:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 3518,
												"src": "1063:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:27:14"
									},
									"returnParameters": {
										"id": 3499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:14"
									},
									"scope": 3519,
									"src": "1026:248:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3520,
							"src": "181:1095:14",
							"usedErrors": []
						}
					],
					"src": "46:1231:14"
				},
				"id": 14
			}
		}
	}
}